

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Sat Feb 03 14:12:23 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  008F                     	;# 
    68  0090                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0097                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  010C                     	;# 
    84  010D                     	;# 
    85  010E                     	;# 
    86  010F                     	;# 
    87  0110                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011D                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  018F                     	;# 
   103  0190                     	;# 
   104  0191                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0194                     	;# 
   111  0195                     	;# 
   112  0196                     	;# 
   113  0199                     	;# 
   114  019A                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019C                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  020D                     	;# 
   122  0210                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0213                     	;# 
   126  0214                     	;# 
   127  0215                     	;# 
   128  0215                     	;# 
   129  0216                     	;# 
   130  0217                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0299                     	;# 
   140  029A                     	;# 
   141  029B                     	;# 
   142  029C                     	;# 
   143  029C                     	;# 
   144  029D                     	;# 
   145  029E                     	;# 
   146  029F                     	;# 
   147  0311                     	;# 
   148  0312                     	;# 
   149  0313                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0315                     	;# 
   153  0316                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  031C                     	;# 
   158  031D                     	;# 
   159  031E                     	;# 
   160  0394                     	;# 
   161  0395                     	;# 
   162  0396                     	;# 
   163  0415                     	;# 
   164  0416                     	;# 
   165  0417                     	;# 
   166  041C                     	;# 
   167  041D                     	;# 
   168  041E                     	;# 
   169  0791                     	;# 
   170  0792                     	;# 
   171  0793                     	;# 
   172  0794                     	;# 
   173  0795                     	;# 
   174  0798                     	;# 
   175  0799                     	;# 
   176  079A                     	;# 
   177  07A0                     	;# 
   178  07A1                     	;# 
   179  07A2                     	;# 
   180  07A3                     	;# 
   181  07A4                     	;# 
   182  07A5                     	;# 
   183  07A6                     	;# 
   184  07A7                     	;# 
   185  07A8                     	;# 
   186  07A9                     	;# 
   187  07AA                     	;# 
   188  07AB                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  0F6E                     __pidataBANK0:	
   203                           
   204                           ;initializer for _digits
   205  0F6E  34C0               	retlw	192
   206  0F6F  34F9               	retlw	249
   207  0F70  34A4               	retlw	164
   208  0F71  34B0               	retlw	176
   209  0F72  3499               	retlw	153
   210  0F73  3492               	retlw	146
   211  0F74  3482               	retlw	130
   212  0F75  34F8               	retlw	248
   213  0F76  3480               	retlw	128
   214  0F77  3490               	retlw	144
   215  000B                     _INTCONbits	set	11
   216  000C                     _PORTA	set	12
   217  000D                     _PORTB	set	13
   218  000F                     _PORTD	set	15
   219  0015                     _TMR0	set	21
   220  008E                     _ADIF	set	142
   221  005F                     _GIE	set	95
   222  005E                     _PEIE	set	94
   223  005D                     _TMR0IE	set	93
   224  005A                     _TMR0IF	set	90
   225  009D                     _ADCON0bits	set	157
   226  009E                     _ADCON1bits	set	158
   227  009C                     _ADRESH	set	156
   228  0095                     _OPTION_REGbits	set	149
   229  008C                     _TRISA	set	140
   230  008D                     _TRISB	set	141
   231  008F                     _TRISD	set	143
   232  04E9                     _ADGO	set	1257
   233  048E                     _ADIE	set	1166
   234  04AB                     _PSA	set	1195
   235  04AD                     _TMR0CS	set	1197
   236  018C                     _ANSELA	set	396
   237  018D                     _ANSELB	set	397
   238  018F                     _ANSELD	set	399
   239                           
   240                           ; #config settings
   241  0000                     
   242                           	psect	cinit
   243  0F98                     start_initialization:	
   244  0F98                     __initialization:	
   245                           
   246                           ; Clear objects allocated to BANK0
   247  0F98  01E9               	clrf	__pbssBANK0& (0+127)
   248  0F99  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   249  0F9A  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   250  0F9B  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   251                           
   252                           ; Clear objects allocated to BANK1
   253  0F9C  0021               	movlb	1	; select bank1
   254  0F9D  01D4               	clrf	__pbssBANK1& (0+127)
   255  0F9E  01D5               	clrf	(__pbssBANK1+1)& (0+127)
   256  0F9F  01D6               	clrf	(__pbssBANK1+2)& (0+127)
   257                           
   258                           ; Initialize objects allocated to BANK0
   259  0FA0  306E               	movlw	low __pidataBANK0
   260  0FA1  0084               	movwf	4
   261  0FA2  308F               	movlw	(high __pidataBANK0)| (0+128)
   262  0FA3  0085               	movwf	5
   263  0FA4  305F               	movlw	low __pdataBANK0
   264  0FA5  0086               	movwf	6
   265  0FA6  3000               	movlw	high __pdataBANK0
   266  0FA7  0087               	movwf	7
   267  0FA8  300A               	movlw	10
   268  0FA9  3187  27F9         	fcall	init_ram
   269  0FAB                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  0FAB                     __end_of__initialization:	
   273  0FAB  0020               	movlb	0
   274  0FAC  3182  2AC1         	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssBANK0
   277  0069                     __pbssBANK0:	
   278  0069                     _sensor:	
   279  0069                     	ds	3
   280  006C                     _currentSelection:	
   281  006C                     	ds	1
   282                           
   283                           	psect	dataBANK0
   284  005F                     __pdataBANK0:	
   285  005F                     _digits:	
   286  005F                     	ds	10
   287                           
   288                           	psect	bssBANK1
   289  00D4                     __pbssBANK1:	
   290  00D4                     _potenciometar:	
   291  00D4                     	ds	3
   292                           
   293                           	psect	inittext
   294  07F9                     init_ram:	
   295  07F9  00FE               	movwf	126
   296  07FA                     initloop:	
   297  07FA  0012               	moviw fsr0++
   298  07FB  001E               	movwi fsr1++
   299  07FC  0BFE               	decfsz	126,f
   300  07FD  2FFA               	goto	initloop
   301  07FE  3400               	retlw	0
   302                           
   303                           	psect	cstackBANK1
   304  00A0                     __pcstackBANK1:	
   305  00A0                     ??_reverse:	
   306  00A0                     ??_initializeAsyncConversion:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  00A0                     ??_initializeTimer:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  00A0                     ?___ftge:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  00A0                     ?___ftpack:	
   316                           ; 1 bit 
   317                           
   318  00A0                     ?___ftneg:	
   319                           ; 3 bytes @ 0x0
   320                           
   321  00A0                     ?___fttol:	
   322                           ; 3 bytes @ 0x0
   323                           
   324  00A0                     ___ftpack@arg:	
   325                           ; 4 bytes @ 0x0
   326                           
   327  00A0                     ___ftge@ff1:	
   328                           ; 3 bytes @ 0x0
   329                           
   330  00A0                     ___ftneg@f1:	
   331                           ; 3 bytes @ 0x0
   332                           
   333  00A0                     ___fttol@f1:	
   334                           ; 3 bytes @ 0x0
   335                           
   336                           
   337                           ; 3 bytes @ 0x0
   338  00A0                     	ds	3
   339  00A3                     ??___ftneg:	
   340  00A3                     reverse@b:	
   341                           ; 0 bytes @ 0x3
   342                           
   343  00A3                     ___ftpack@exp:	
   344                           ; 1 bytes @ 0x3
   345                           
   346  00A3                     ___ftge@ff2:	
   347                           ; 1 bytes @ 0x3
   348                           
   349                           
   350                           ; 3 bytes @ 0x3
   351  00A3                     	ds	1
   352  00A4                     ??___fttol:	
   353  00A4                     ___ftpack@sign:	
   354                           ; 0 bytes @ 0x4
   355                           
   356                           
   357                           ; 1 bytes @ 0x4
   358  00A4                     	ds	1
   359  00A5                     ??___ftpack:	
   360                           
   361                           ; 0 bytes @ 0x5
   362  00A5                     	ds	1
   363  00A6                     ??___ftge:	
   364                           
   365                           ; 0 bytes @ 0x6
   366  00A6                     	ds	2
   367  00A8                     ?___ftmul:	
   368  00A8                     ___fttol@sign1:	
   369                           ; 3 bytes @ 0x8
   370                           
   371  00A8                     ___ftmul@f1:	
   372                           ; 1 bytes @ 0x8
   373                           
   374                           
   375                           ; 3 bytes @ 0x8
   376  00A8                     	ds	1
   377  00A9                     ___fttol@lval:	
   378                           
   379                           ; 4 bytes @ 0x9
   380  00A9                     	ds	2
   381  00AB                     ___ftmul@f2:	
   382                           
   383                           ; 3 bytes @ 0xB
   384  00AB                     	ds	2
   385  00AD                     ___fttol@exp1:	
   386                           
   387                           ; 1 bytes @ 0xD
   388  00AD                     	ds	1
   389  00AE                     ??___ftmul:	
   390                           
   391                           ; 0 bytes @ 0xE
   392  00AE                     	ds	4
   393  00B2                     ___ftmul@exp:	
   394                           
   395                           ; 1 bytes @ 0x12
   396  00B2                     	ds	1
   397  00B3                     ___ftmul@f3_as_product:	
   398                           
   399                           ; 3 bytes @ 0x13
   400  00B3                     	ds	3
   401  00B6                     ___ftmul@cntr:	
   402                           
   403                           ; 1 bytes @ 0x16
   404  00B6                     	ds	1
   405  00B7                     ___ftmul@sign:	
   406                           
   407                           ; 1 bytes @ 0x17
   408  00B7                     	ds	1
   409  00B8                     ?___ftadd:	
   410  00B8                     ___ftadd@f1:	
   411                           ; 3 bytes @ 0x18
   412                           
   413                           
   414                           ; 3 bytes @ 0x18
   415  00B8                     	ds	3
   416  00BB                     ___ftadd@f2:	
   417                           
   418                           ; 3 bytes @ 0x1B
   419  00BB                     	ds	3
   420  00BE                     ??___ftadd:	
   421                           
   422                           ; 0 bytes @ 0x1E
   423  00BE                     	ds	4
   424  00C2                     ___ftadd@sign:	
   425                           
   426                           ; 1 bytes @ 0x22
   427  00C2                     	ds	1
   428  00C3                     ___ftadd@exp2:	
   429                           
   430                           ; 1 bytes @ 0x23
   431  00C3                     	ds	1
   432  00C4                     ___ftadd@exp1:	
   433                           
   434                           ; 1 bytes @ 0x24
   435  00C4                     	ds	1
   436  00C5                     ??_main:	
   437                           
   438                           ; 0 bytes @ 0x25
   439  00C5                     	ds	3
   440  00C8                     main@uprev:	
   441                           
   442                           ; 3 bytes @ 0x28
   443  00C8                     	ds	3
   444  00CB                     main@error:	
   445                           
   446                           ; 3 bytes @ 0x2B
   447  00CB                     	ds	3
   448  00CE                     main@integral:	
   449                           
   450                           ; 3 bytes @ 0x2E
   451  00CE                     	ds	3
   452  00D1                     main@output:	
   453                           
   454                           ; 3 bytes @ 0x31
   455  00D1                     	ds	3
   456                           
   457                           	psect	cstackCOMMON
   458  0070                     __pcstackCOMMON:	
   459  0070                     ?_printDigit:	
   460  0070                     ?_initializeAsyncConversion:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0070                     ?_initializeTimer:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0070                     ?_interruptHandler:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0070                     ?_main:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0070                     ?_reverse:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0070                     ?i1___ftpack:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     printDigit@selection:	
   479                           ; 3 bytes @ 0x0
   480                           
   481  0070                     i1___ftpack@arg:	
   482                           ; 1 bytes @ 0x0
   483                           
   484                           
   485                           ; 3 bytes @ 0x0
   486  0070                     	ds	1
   487  0071                     ??_printDigit:	
   488                           
   489                           ; 0 bytes @ 0x1
   490  0071                     	ds	1
   491  0072                     printDigit@digit:	
   492                           
   493                           ; 1 bytes @ 0x2
   494  0072                     	ds	1
   495  0073                     i1___ftpack@exp:	
   496                           
   497                           ; 1 bytes @ 0x3
   498  0073                     	ds	1
   499  0074                     i1___ftpack@sign:	
   500                           
   501                           ; 1 bytes @ 0x4
   502  0074                     	ds	1
   503  0075                     ??i1___ftpack:	
   504                           
   505                           ; 0 bytes @ 0x5
   506  0075                     	ds	3
   507  0078                     ?i1___ftneg:	
   508  0078                     i1___ftneg@f1:	
   509                           ; 3 bytes @ 0x8
   510                           
   511                           
   512                           ; 3 bytes @ 0x8
   513  0078                     	ds	3
   514  007B                     ??i1___ftneg:	
   515  007B                     ___lbtoft@c:	
   516                           ; 0 bytes @ 0xB
   517                           
   518                           
   519                           ; 1 bytes @ 0xB
   520  007B                     	ds	1
   521                           
   522                           	psect	cstackBANK0
   523  0020                     __pcstackBANK0:	
   524  0020                     ?i1___fttol:	
   525  0020                     i1___fttol@f1:	
   526                           ; 4 bytes @ 0x0
   527                           
   528                           
   529                           ; 3 bytes @ 0x0
   530  0020                     	ds	4
   531  0024                     ??i1___fttol:	
   532                           
   533                           ; 0 bytes @ 0x4
   534  0024                     	ds	4
   535  0028                     i1___fttol@sign1:	
   536                           
   537                           ; 1 bytes @ 0x8
   538  0028                     	ds	1
   539  0029                     i1___fttol@lval:	
   540                           
   541                           ; 4 bytes @ 0x9
   542  0029                     	ds	4
   543  002D                     i1___fttol@exp1:	
   544                           
   545                           ; 1 bytes @ 0xD
   546  002D                     	ds	1
   547  002E                     ?___lbtoft:	
   548                           
   549                           ; 3 bytes @ 0xE
   550  002E                     	ds	3
   551  0031                     ??___lbtoft:	
   552                           
   553                           ; 0 bytes @ 0x11
   554  0031                     	ds	4
   555  0035                     ?___ftdiv:	
   556  0035                     ?i1___ftadd:	
   557                           ; 3 bytes @ 0x15
   558                           
   559  0035                     ___ftdiv@f2:	
   560                           ; 3 bytes @ 0x15
   561                           
   562  0035                     i1___ftadd@f1:	
   563                           ; 3 bytes @ 0x15
   564                           
   565                           
   566                           ; 3 bytes @ 0x15
   567  0035                     	ds	3
   568  0038                     ___ftdiv@f1:	
   569  0038                     i1___ftadd@f2:	
   570                           ; 3 bytes @ 0x18
   571                           
   572                           
   573                           ; 3 bytes @ 0x18
   574  0038                     	ds	3
   575  003B                     ??___ftdiv:	
   576  003B                     ??i1___ftadd:	
   577                           ; 0 bytes @ 0x1B
   578                           
   579                           
   580                           ; 0 bytes @ 0x1B
   581  003B                     	ds	4
   582  003F                     ___ftdiv@cntr:	
   583  003F                     i1___ftadd@sign:	
   584                           ; 1 bytes @ 0x1F
   585                           
   586                           
   587                           ; 1 bytes @ 0x1F
   588  003F                     	ds	1
   589  0040                     i1___ftadd@exp2:	
   590  0040                     ___ftdiv@f3:	
   591                           ; 1 bytes @ 0x20
   592                           
   593                           
   594                           ; 3 bytes @ 0x20
   595  0040                     	ds	1
   596  0041                     i1___ftadd@exp1:	
   597                           
   598                           ; 1 bytes @ 0x21
   599  0041                     	ds	2
   600  0043                     ___ftdiv@exp:	
   601                           
   602                           ; 1 bytes @ 0x23
   603  0043                     	ds	1
   604  0044                     ___ftdiv@sign:	
   605                           
   606                           ; 1 bytes @ 0x24
   607  0044                     	ds	1
   608  0045                     ?i1___ftmul:	
   609  0045                     i1___ftmul@f1:	
   610                           ; 3 bytes @ 0x25
   611                           
   612                           
   613                           ; 3 bytes @ 0x25
   614  0045                     	ds	3
   615  0048                     i1___ftmul@f2:	
   616                           
   617                           ; 3 bytes @ 0x28
   618  0048                     	ds	3
   619  004B                     ??i1___ftmul:	
   620                           
   621                           ; 0 bytes @ 0x2B
   622  004B                     	ds	4
   623  004F                     i1___ftmul@exp:	
   624                           
   625                           ; 1 bytes @ 0x2F
   626  004F                     	ds	1
   627  0050                     i1___ftmul@f3_as_product:	
   628                           
   629                           ; 3 bytes @ 0x30
   630  0050                     	ds	3
   631  0053                     i1___ftmul@cntr:	
   632                           
   633                           ; 1 bytes @ 0x33
   634  0053                     	ds	1
   635  0054                     i1___ftmul@sign:	
   636                           
   637                           ; 1 bytes @ 0x34
   638  0054                     	ds	1
   639  0055                     ??_interruptHandler:	
   640                           
   641                           ; 0 bytes @ 0x35
   642  0055                     	ds	3
   643  0058                     _interruptHandler$226:	
   644                           
   645                           ; 2 bytes @ 0x38
   646  0058                     	ds	2
   647  005A                     interruptHandler@secondDigit:	
   648                           
   649                           ; 1 bytes @ 0x3A
   650  005A                     	ds	1
   651  005B                     interruptHandler@result:	
   652                           
   653                           ; 3 bytes @ 0x3B
   654  005B                     	ds	3
   655  005E                     interruptHandler@firstDigit:	
   656                           
   657                           ; 1 bytes @ 0x3E
   658  005E                     	ds	1
   659                           
   660                           	psect	maintext
   661  02C1                     __pmaintext:	
   662 ;;
   663 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   664 ;;
   665 ;; *************** function _main *****************
   666 ;; Defined at:
   667 ;;		line 120 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  output          3   49[BANK1 ] float 
   672 ;;  integral        3   46[BANK1 ] float 
   673 ;;  error           3   43[BANK1 ] float 
   674 ;;  uprev           3   40[BANK1 ] float 
   675 ;; Return value:  Size  Location     Type
   676 ;;		None               void
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, pclath, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 17F/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   685 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
   686 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
   687 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
   688 ;;Total ram usage:       15 bytes
   689 ;; Hardware stack levels required when called:    5
   690 ;; This function calls:
   691 ;;		_reverse
   692 ;;		_initializeAsyncConversion
   693 ;;		_initializeTimer
   694 ;;		___ftadd
   695 ;;		___ftge
   696 ;;		___ftmul
   697 ;;		___ftneg
   698 ;;		___fttol
   699 ;; This function is called by:
   700 ;;		Startup code after reset
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           
   705                           ;psect for function _main
   706  02C1                     _main:	
   707                           
   708                           ;main.c: 121: initializeAsyncConversion();
   709                           
   710                           ;incstack = 0
   711                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   712  02C1  3187  27CB  3182   	fcall	_initializeAsyncConversion
   713                           
   714                           ;main.c: 122: initializeTimer();
   715  02C4  318F  2778  3182   	fcall	_initializeTimer
   716                           
   717                           ;main.c: 123: float uprev = 0, error;
   718  02C7  3000               	movlw	0
   719  02C8  0021               	movlb	1	; select bank1
   720  02C9  00C8               	movwf	main@uprev^(0+128)
   721  02CA  3000               	movlw	0
   722  02CB  00C9               	movwf	(main@uprev+1)^(0+128)
   723  02CC  3000               	movlw	0
   724  02CD  00CA               	movwf	(main@uprev+2)^(0+128)
   725                           
   726                           ;main.c: 124: float integral = 0;
   727  02CE  3000               	movlw	0
   728  02CF  00CE               	movwf	main@integral^(0+128)
   729  02D0  3000               	movlw	0
   730  02D1  00CF               	movwf	(main@integral+1)^(0+128)
   731  02D2  3000               	movlw	0
   732  02D3  00D0               	movwf	(main@integral+2)^(0+128)
   733                           
   734                           ;main.c: 125: float output = 0.0f;
   735  02D4  3000               	movlw	0
   736  02D5  00D1               	movwf	main@output^(0+128)
   737  02D6  3000               	movlw	0
   738  02D7  00D2               	movwf	(main@output+1)^(0+128)
   739  02D8  3000               	movlw	0
   740  02D9  00D3               	movwf	(main@output+2)^(0+128)
   741  02DA                     l1844:	
   742                           ;main.c: 126: while (1) {
   743                           
   744                           
   745                           ;main.c: 127: error = potenciometar - sensor;
   746  02DA  0021               	movlb	1	; select bank1
   747  02DB  0854               	movf	_potenciometar^(0+128),w
   748  02DC  00B8               	movwf	?___ftadd^(0+128)
   749  02DD  0855               	movf	(_potenciometar+1)^(0+128),w
   750  02DE  00B9               	movwf	(?___ftadd+1)^(0+128)
   751  02DF  0856               	movf	(_potenciometar+2)^(0+128),w
   752  02E0  00BA               	movwf	(?___ftadd+2)^(0+128)
   753  02E1  0020               	movlb	0	; select bank0
   754  02E2  0869               	movf	_sensor,w
   755  02E3  0021               	movlb	1	; select bank1
   756  02E4  00A0               	movwf	?___ftneg^(0+128)
   757  02E5  0020               	movlb	0	; select bank0
   758  02E6  086A               	movf	_sensor+1,w
   759  02E7  0021               	movlb	1	; select bank1
   760  02E8  00A1               	movwf	(?___ftneg+1)^(0+128)
   761  02E9  0020               	movlb	0	; select bank0
   762  02EA  086B               	movf	_sensor+2,w
   763  02EB  0021               	movlb	1	; select bank1
   764  02EC  00A2               	movwf	(?___ftneg+2)^(0+128)
   765  02ED  318F  2765  3182   	fcall	___ftneg
   766  02F0  0021               	movlb	1	; select bank1
   767  02F1  0820               	movf	?___ftneg^(0+128),w
   768  02F2  00BB               	movwf	(?___ftadd^(0+128)+3)
   769  02F3  0821               	movf	(?___ftneg+1)^(0+128),w
   770  02F4  00BC               	movwf	((?___ftadd+1)^(0+128)+3)
   771  02F5  0822               	movf	(?___ftneg+2)^(0+128),w
   772  02F6  00BD               	movwf	((?___ftadd+2)^(0+128)+3)
   773  02F7  3180  20D5  3182   	fcall	___ftadd
   774  02FA  0021               	movlb	1	; select bank1
   775  02FB  0838               	movf	?___ftadd^(0+128),w
   776  02FC  00CB               	movwf	main@error^(0+128)
   777  02FD  0839               	movf	(?___ftadd+1)^(0+128),w
   778  02FE  00CC               	movwf	(main@error+1)^(0+128)
   779  02FF  083A               	movf	(?___ftadd+2)^(0+128),w
   780  0300  00CD               	movwf	(main@error+2)^(0+128)
   781                           
   782                           ;main.c: 128: integral += error * 0.5f;
   783  0301  084B               	movf	main@error^(0+128),w
   784  0302  00AB               	movwf	(?___ftmul^(0+128)+3)
   785  0303  084C               	movf	(main@error+1)^(0+128),w
   786  0304  00AC               	movwf	((?___ftmul+1)^(0+128)+3)
   787  0305  084D               	movf	(main@error+2)^(0+128),w
   788  0306  00AD               	movwf	((?___ftmul+2)^(0+128)+3)
   789  0307  3000               	movlw	0
   790  0308  00A8               	movwf	?___ftmul^(0+128)
   791  0309  3000               	movlw	0
   792  030A  00A9               	movwf	(?___ftmul+1)^(0+128)
   793  030B  303F               	movlw	63
   794  030C  00AA               	movwf	(?___ftmul+2)^(0+128)
   795  030D  3183  23AF  3182   	fcall	___ftmul
   796  0310  0021               	movlb	1	; select bank1
   797  0311  0828               	movf	?___ftmul^(0+128),w
   798  0312  00B8               	movwf	?___ftadd^(0+128)
   799  0313  0829               	movf	(?___ftmul+1)^(0+128),w
   800  0314  00B9               	movwf	(?___ftadd+1)^(0+128)
   801  0315  082A               	movf	(?___ftmul+2)^(0+128),w
   802  0316  00BA               	movwf	(?___ftadd+2)^(0+128)
   803  0317  084E               	movf	main@integral^(0+128),w
   804  0318  00BB               	movwf	(?___ftadd^(0+128)+3)
   805  0319  084F               	movf	(main@integral+1)^(0+128),w
   806  031A  00BC               	movwf	((?___ftadd+1)^(0+128)+3)
   807  031B  0850               	movf	(main@integral+2)^(0+128),w
   808  031C  00BD               	movwf	((?___ftadd+2)^(0+128)+3)
   809  031D  3180  20D5  3182   	fcall	___ftadd
   810  0320  0021               	movlb	1	; select bank1
   811  0321  0838               	movf	?___ftadd^(0+128),w
   812  0322  00CE               	movwf	main@integral^(0+128)
   813  0323  0839               	movf	(?___ftadd+1)^(0+128),w
   814  0324  00CF               	movwf	(main@integral+1)^(0+128)
   815  0325  083A               	movf	(?___ftadd+2)^(0+128),w
   816  0326  00D0               	movwf	(main@integral+2)^(0+128)
   817                           
   818                           ;main.c: 129: output = 9001.28f * error + -8998.71f * integral;
   819  0327  309B               	movlw	155
   820  0328  00A8               	movwf	?___ftmul^(0+128)
   821  0329  300C               	movlw	12
   822  032A  00A9               	movwf	(?___ftmul+1)^(0+128)
   823  032B  30C6               	movlw	198
   824  032C  00AA               	movwf	(?___ftmul+2)^(0+128)
   825  032D  084E               	movf	main@integral^(0+128),w
   826  032E  00AB               	movwf	(?___ftmul^(0+128)+3)
   827  032F  084F               	movf	(main@integral+1)^(0+128),w
   828  0330  00AC               	movwf	((?___ftmul+1)^(0+128)+3)
   829  0331  0850               	movf	(main@integral+2)^(0+128),w
   830  0332  00AD               	movwf	((?___ftmul+2)^(0+128)+3)
   831  0333  3183  23AF  3182   	fcall	___ftmul
   832  0336  0021               	movlb	1	; select bank1
   833  0337  0828               	movf	?___ftmul^(0+128),w
   834  0338  00B8               	movwf	?___ftadd^(0+128)
   835  0339  0829               	movf	(?___ftmul+1)^(0+128),w
   836  033A  00B9               	movwf	(?___ftadd+1)^(0+128)
   837  033B  082A               	movf	(?___ftmul+2)^(0+128),w
   838  033C  00BA               	movwf	(?___ftadd+2)^(0+128)
   839  033D  30A5               	movlw	165
   840  033E  00A8               	movwf	?___ftmul^(0+128)
   841  033F  300C               	movlw	12
   842  0340  00A9               	movwf	(?___ftmul+1)^(0+128)
   843  0341  3046               	movlw	70
   844  0342  00AA               	movwf	(?___ftmul+2)^(0+128)
   845  0343  084B               	movf	main@error^(0+128),w
   846  0344  00AB               	movwf	(?___ftmul^(0+128)+3)
   847  0345  084C               	movf	(main@error+1)^(0+128),w
   848  0346  00AC               	movwf	((?___ftmul+1)^(0+128)+3)
   849  0347  084D               	movf	(main@error+2)^(0+128),w
   850  0348  00AD               	movwf	((?___ftmul+2)^(0+128)+3)
   851  0349  3183  23AF  3182   	fcall	___ftmul
   852  034C  0021               	movlb	1	; select bank1
   853  034D  0828               	movf	?___ftmul^(0+128),w
   854  034E  00BB               	movwf	(?___ftadd^(0+128)+3)
   855  034F  0829               	movf	(?___ftmul+1)^(0+128),w
   856  0350  00BC               	movwf	((?___ftadd+1)^(0+128)+3)
   857  0351  082A               	movf	(?___ftmul+2)^(0+128),w
   858  0352  00BD               	movwf	((?___ftadd+2)^(0+128)+3)
   859  0353  3180  20D5  3182   	fcall	___ftadd
   860  0356  0021               	movlb	1	; select bank1
   861  0357  0838               	movf	?___ftadd^(0+128),w
   862  0358  00D1               	movwf	main@output^(0+128)
   863  0359  0839               	movf	(?___ftadd+1)^(0+128),w
   864  035A  00D2               	movwf	(main@output+1)^(0+128)
   865  035B  083A               	movf	(?___ftadd+2)^(0+128),w
   866  035C  00D3               	movwf	(main@output+2)^(0+128)
   867                           
   868                           ;main.c: 131: if (output > 5.0f)
   869  035D  3000               	movlw	0
   870  035E  00A0               	movwf	?___ftge^(0+128)
   871  035F  30A0               	movlw	160
   872  0360  00A1               	movwf	(?___ftge+1)^(0+128)
   873  0361  3040               	movlw	64
   874  0362  00A2               	movwf	(?___ftge+2)^(0+128)
   875  0363  0851               	movf	main@output^(0+128),w
   876  0364  00A3               	movwf	(?___ftge^(0+128)+3)
   877  0365  0852               	movf	(main@output+1)^(0+128),w
   878  0366  00A4               	movwf	((?___ftge+1)^(0+128)+3)
   879  0367  0853               	movf	(main@output+2)^(0+128),w
   880  0368  00A5               	movwf	((?___ftge+2)^(0+128)+3)
   881  0369  3187  278F  3182   	fcall	___ftge
   882  036C  1803               	btfsc	3,0
   883  036D  2B75               	goto	l1854
   884                           
   885                           ;main.c: 132: output = 5.0f;
   886  036E  3000               	movlw	0
   887  036F  0021               	movlb	1	; select bank1
   888  0370  00D1               	movwf	main@output^(0+128)
   889  0371  30A0               	movlw	160
   890  0372  00D2               	movwf	(main@output+1)^(0+128)
   891  0373  3040               	movlw	64
   892  0374  00D3               	movwf	(main@output+2)^(0+128)
   893  0375                     l1854:	
   894                           
   895                           ;main.c: 133: if (output < 0.0f)
   896  0375  0021               	movlb	1	; select bank1
   897  0376  0851               	movf	main@output^(0+128),w
   898  0377  00A0               	movwf	?___ftge^(0+128)
   899  0378  0852               	movf	(main@output+1)^(0+128),w
   900  0379  00A1               	movwf	(?___ftge+1)^(0+128)
   901  037A  0853               	movf	(main@output+2)^(0+128),w
   902  037B  00A2               	movwf	(?___ftge+2)^(0+128)
   903  037C  3000               	movlw	0
   904  037D  00A3               	movwf	(?___ftge^(0+128)+3)
   905  037E  3000               	movlw	0
   906  037F  00A4               	movwf	((?___ftge+1)^(0+128)+3)
   907  0380  3000               	movlw	0
   908  0381  00A5               	movwf	((?___ftge+2)^(0+128)+3)
   909  0382  3187  278F  3182   	fcall	___ftge
   910  0385  1803               	btfsc	3,0
   911  0386  2B8E               	goto	l1858
   912                           
   913                           ;main.c: 134: output = 0.0f;
   914  0387  3000               	movlw	0
   915  0388  0021               	movlb	1	; select bank1
   916  0389  00D1               	movwf	main@output^(0+128)
   917  038A  3000               	movlw	0
   918  038B  00D2               	movwf	(main@output+1)^(0+128)
   919  038C  3000               	movlw	0
   920  038D  00D3               	movwf	(main@output+2)^(0+128)
   921  038E                     l1858:	
   922                           
   923                           ;main.c: 136: PORTD = ~reverse(output);
   924  038E  0021               	movlb	1	; select bank1
   925  038F  0851               	movf	main@output^(0+128),w
   926  0390  00A0               	movwf	?___fttol^(0+128)
   927  0391  0852               	movf	(main@output+1)^(0+128),w
   928  0392  00A1               	movwf	(?___fttol+1)^(0+128)
   929  0393  0853               	movf	(main@output+2)^(0+128),w
   930  0394  00A2               	movwf	(?___fttol+2)^(0+128)
   931  0395  3185  25C0  3182   	fcall	___fttol
   932  0398  0021               	movlb	1	; select bank1
   933  0399  0820               	movf	?___fttol^(0+128),w
   934  039A  318F  27C9  3182   	fcall	_reverse
   935  039D  3AFF               	xorlw	255
   936  039E  0020               	movlb	0	; select bank0
   937  039F  008F               	movwf	15	;volatile
   938                           
   939                           ;main.c: 138: _delay((unsigned long)((0.5f * 1000.0f)*(8000000/4000.0)));
   940  03A0  3006               	movlw	6
   941  03A1  0021               	movlb	1	; select bank1
   942  03A2  00C7               	movwf	(??_main^(0+128)+2)
   943  03A3  3013               	movlw	19
   944  03A4  00C6               	movwf	(??_main^(0+128)+1)
   945  03A5  30B1               	movlw	177
   946  03A6  00C5               	movwf	??_main^(0+128)
   947  03A7                     u3367:	
   948  03A7  0BC5               	decfsz	??_main^(0+128),f
   949  03A8  2BA7               	goto	u3367
   950  03A9  0BC6               	decfsz	(??_main^(0+128)+1),f
   951  03AA  2BA7               	goto	u3367
   952  03AB  0BC7               	decfsz	(??_main^(0+128)+2),f
   953  03AC  2BA7               	goto	u3367
   954  03AD  2BAE               	nop2
   955  03AE  2ADA               	goto	l1844
   956  03AF                     __end_of_main:	
   957                           ;main.c: 139: }
   958                           ;main.c: 140: return;
   959                           
   960                           
   961                           	psect	text1
   962  05C0                     __ptext1:	
   963 ;; *************** function ___fttol *****************
   964 ;; Defined at:
   965 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  f1              3    0[BANK1 ] float 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  lval            4    9[BANK1 ] unsigned long 
   970 ;;  exp1            1   13[BANK1 ] unsigned char 
   971 ;;  sign1           1    8[BANK1 ] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  4    0[BANK1 ] long 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   981 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
   982 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
   983 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
   984 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
   985 ;;Total ram usage:       14 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    3
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function ___fttol
   997  05C0                     ___fttol:	
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1001  05C0  0021               	movlb	1	; select bank1
  1002  05C1  0820               	movf	___fttol@f1^(0+128),w
  1003  05C2  00A4               	movwf	??___fttol^(0+128)
  1004  05C3  0821               	movf	(___fttol@f1+1)^(0+128),w
  1005  05C4  00A5               	movwf	(??___fttol^(0+128)+1)
  1006  05C5  0822               	movf	(___fttol@f1+2)^(0+128),w
  1007  05C6  00A6               	movwf	(??___fttol^(0+128)+2)
  1008  05C7  1003               	clrc
  1009  05C8  0D25               	rlf	(??___fttol^(0+128)+1),w
  1010  05C9  0D26               	rlf	(??___fttol^(0+128)+2),w
  1011  05CA  00A7               	movwf	(??___fttol+3)^(0+128)
  1012  05CB  0827               	movf	(??___fttol+3)^(0+128),w
  1013  05CC  00AD               	movwf	___fttol@exp1^(0+128)
  1014  05CD  08AD               	movf	___fttol@exp1^(0+128),f
  1015  05CE  1D03               	skipz
  1016  05CF  2DD9               	goto	l2048
  1017  05D0  3000               	movlw	0
  1018  05D1  00A3               	movwf	(?___fttol+3)^(0+128)
  1019  05D2  3000               	movlw	0
  1020  05D3  00A2               	movwf	(?___fttol+2)^(0+128)
  1021  05D4  3000               	movlw	0
  1022  05D5  00A1               	movwf	(?___fttol+1)^(0+128)
  1023  05D6  3000               	movlw	0
  1024  05D7  00A0               	movwf	?___fttol^(0+128)
  1025  05D8  0008               	return
  1026  05D9                     l2048:	
  1027  05D9  0820               	movf	___fttol@f1^(0+128),w
  1028  05DA  00A4               	movwf	??___fttol^(0+128)
  1029  05DB  0821               	movf	(___fttol@f1+1)^(0+128),w
  1030  05DC  00A5               	movwf	(??___fttol^(0+128)+1)
  1031  05DD  0822               	movf	(___fttol@f1+2)^(0+128),w
  1032  05DE  00A6               	movwf	(??___fttol^(0+128)+2)
  1033  05DF  3017               	movlw	23
  1034  05E0                     u2565:	
  1035  05E0  36A6               	lsrf	(??___fttol^(0+128)+2),f
  1036  05E1  0CA5               	rrf	(??___fttol^(0+128)+1),f
  1037  05E2  0CA4               	rrf	??___fttol^(0+128),f
  1038  05E3  0B89               	decfsz	9,f
  1039  05E4  2DE0               	goto	u2565
  1040  05E5  0824               	movf	??___fttol^(0+128),w
  1041  05E6  00A7               	movwf	(??___fttol+3)^(0+128)
  1042  05E7  0827               	movf	(??___fttol+3)^(0+128),w
  1043  05E8  00A8               	movwf	___fttol@sign1^(0+128)
  1044  05E9  17A1               	bsf	(___fttol@f1^(0+128)+1),7
  1045  05EA  30FF               	movlw	255
  1046  05EB  05A0               	andwf	___fttol@f1^(0+128),f
  1047  05EC  30FF               	movlw	255
  1048  05ED  05A1               	andwf	(___fttol@f1+1)^(0+128),f
  1049  05EE  3000               	movlw	0
  1050  05EF  05A2               	andwf	(___fttol@f1+2)^(0+128),f
  1051  05F0  0820               	movf	___fttol@f1^(0+128),w
  1052  05F1  00A9               	movwf	___fttol@lval^(0+128)
  1053  05F2  0821               	movf	(___fttol@f1+1)^(0+128),w
  1054  05F3  00AA               	movwf	(___fttol@lval^(0+128)+1)
  1055  05F4  0822               	movf	(___fttol@f1+2)^(0+128),w
  1056  05F5  00AB               	movwf	(___fttol@lval^(0+128)+2)
  1057  05F6  01AC               	clrf	(___fttol@lval^(0+128)+3)
  1058  05F7  308E               	movlw	142
  1059  05F8  02AD               	subwf	___fttol@exp1^(0+128),f
  1060  05F9  1FAD               	btfss	___fttol@exp1^(0+128),7
  1061  05FA  2E17               	goto	l2068
  1062  05FB  082D               	movf	___fttol@exp1^(0+128),w
  1063  05FC  3A80               	xorlw	128
  1064  05FD  3E8F               	addlw	143
  1065  05FE  1803               	skipnc
  1066  05FF  2E09               	goto	l2066
  1067  0600  3000               	movlw	0
  1068  0601  00A3               	movwf	(?___fttol+3)^(0+128)
  1069  0602  3000               	movlw	0
  1070  0603  00A2               	movwf	(?___fttol+2)^(0+128)
  1071  0604  3000               	movlw	0
  1072  0605  00A1               	movwf	(?___fttol+1)^(0+128)
  1073  0606  3000               	movlw	0
  1074  0607  00A0               	movwf	?___fttol^(0+128)
  1075  0608  0008               	return
  1076  0609                     l2066:	
  1077  0609  3001               	movlw	1
  1078  060A                     u2595:	
  1079  060A  36AC               	lsrf	(___fttol@lval+3)^(0+128),f
  1080  060B  0CAB               	rrf	(___fttol@lval+2)^(0+128),f
  1081  060C  0CAA               	rrf	(___fttol@lval+1)^(0+128),f
  1082  060D  0CA9               	rrf	___fttol@lval^(0+128),f
  1083  060E  0B89               	decfsz	9,f
  1084  060F  2E0A               	goto	u2595
  1085  0610  3001               	movlw	1
  1086  0611  00A4               	movwf	??___fttol^(0+128)
  1087  0612  0824               	movf	??___fttol^(0+128),w
  1088  0613  07AD               	addwf	___fttol@exp1^(0+128),f
  1089  0614  1903               	btfsc	3,2
  1090  0615  2E30               	goto	l2078
  1091  0616  2E09               	goto	l2066
  1092  0617                     l2068:	
  1093  0617  3018               	movlw	24
  1094  0618  022D               	subwf	___fttol@exp1^(0+128),w
  1095  0619  1C03               	skipc
  1096  061A  2E2D               	goto	l2076
  1097  061B  3000               	movlw	0
  1098  061C  00A3               	movwf	(?___fttol+3)^(0+128)
  1099  061D  3000               	movlw	0
  1100  061E  00A2               	movwf	(?___fttol+2)^(0+128)
  1101  061F  3000               	movlw	0
  1102  0620  00A1               	movwf	(?___fttol+1)^(0+128)
  1103  0621  3000               	movlw	0
  1104  0622  00A0               	movwf	?___fttol^(0+128)
  1105  0623  0008               	return
  1106  0624                     l2074:	
  1107  0624  3001               	movlw	1
  1108  0625                     u2625:	
  1109  0625  35A9               	lslf	___fttol@lval^(0+128),f
  1110  0626  0DAA               	rlf	(___fttol@lval+1)^(0+128),f
  1111  0627  0DAB               	rlf	(___fttol@lval+2)^(0+128),f
  1112  0628  0DAC               	rlf	(___fttol@lval+3)^(0+128),f
  1113  0629  0B89               	decfsz	9,f
  1114  062A  2E25               	goto	u2625
  1115  062B  3001               	movlw	1
  1116  062C  02AD               	subwf	___fttol@exp1^(0+128),f
  1117  062D                     l2076:	
  1118  062D  08AD               	movf	___fttol@exp1^(0+128),f
  1119  062E  1D03               	skipz
  1120  062F  2E24               	goto	l2074
  1121  0630                     l2078:	
  1122  0630  0828               	movf	___fttol@sign1^(0+128),w
  1123  0631  1903               	btfsc	3,2
  1124  0632  2E3E               	goto	l2082
  1125  0633  09A9               	comf	___fttol@lval^(0+128),f
  1126  0634  09AA               	comf	(___fttol@lval+1)^(0+128),f
  1127  0635  09AB               	comf	(___fttol@lval+2)^(0+128),f
  1128  0636  09AC               	comf	(___fttol@lval+3)^(0+128),f
  1129  0637  0AA9               	incf	___fttol@lval^(0+128),f
  1130  0638  1903               	skipnz
  1131  0639  0AAA               	incf	(___fttol@lval+1)^(0+128),f
  1132  063A  1903               	skipnz
  1133  063B  0AAB               	incf	(___fttol@lval+2)^(0+128),f
  1134  063C  1903               	skipnz
  1135  063D  0AAC               	incf	(___fttol@lval+3)^(0+128),f
  1136  063E                     l2082:	
  1137  063E  082C               	movf	(___fttol@lval+3)^(0+128),w
  1138  063F  00A3               	movwf	(?___fttol+3)^(0+128)
  1139  0640  082B               	movf	(___fttol@lval+2)^(0+128),w
  1140  0641  00A2               	movwf	(?___fttol+2)^(0+128)
  1141  0642  082A               	movf	(___fttol@lval+1)^(0+128),w
  1142  0643  00A1               	movwf	(?___fttol+1)^(0+128)
  1143  0644  0829               	movf	___fttol@lval^(0+128),w
  1144  0645  00A0               	movwf	?___fttol^(0+128)
  1145  0646  0008               	return
  1146  0647                     __end_of___fttol:	
  1147                           
  1148                           	psect	text2
  1149  0F65                     __ptext2:	
  1150 ;; *************** function ___ftneg *****************
  1151 ;; Defined at:
  1152 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  f1              3    0[BANK1 ] float 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  3    0[BANK1 ] float 
  1159 ;; Registers used:
  1160 ;;		wreg
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1166 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;Total ram usage:        3 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    3
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function ___ftneg
  1182  0F65                     ___ftneg:	
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in ___ftneg: [wreg]
  1186  0F65  0021               	movlb	1	; select bank1
  1187  0F66  0822               	movf	(___ftneg@f1+2)^(0+128),w
  1188  0F67  0421               	iorwf	(___ftneg@f1+1)^(0+128),w
  1189  0F68  0420               	iorwf	___ftneg@f1^(0+128),w
  1190  0F69  1903               	skipnz
  1191  0F6A  0008               	return
  1192  0F6B  3080               	movlw	128
  1193  0F6C  06A2               	xorwf	(___ftneg@f1+2)^(0+128),f
  1194  0F6D  0008               	return
  1195  0F6E                     __end_of___ftneg:	
  1196                           
  1197                           	psect	text3
  1198  03AF                     __ptext3:	
  1199 ;; *************** function ___ftmul *****************
  1200 ;; Defined at:
  1201 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  f1              3    8[BANK1 ] float 
  1204 ;;  f2              3   11[BANK1 ] float 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  f3_as_produc    3   19[BANK1 ] unsigned um
  1207 ;;  sign            1   23[BANK1 ] unsigned char 
  1208 ;;  cntr            1   22[BANK1 ] unsigned char 
  1209 ;;  exp             1   18[BANK1 ] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  3    8[BANK1 ] float 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1219 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1221 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1222 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1223 ;;Total ram usage:       16 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    4
  1226 ;; This function calls:
  1227 ;;		___ftpack
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function ___ftmul
  1235  03AF                     ___ftmul:	
  1236                           
  1237                           ;incstack = 0
  1238                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1239  03AF  0021               	movlb	1	; select bank1
  1240  03B0  0828               	movf	___ftmul@f1^(0+128),w
  1241  03B1  00AE               	movwf	??___ftmul^(0+128)
  1242  03B2  0829               	movf	(___ftmul@f1+1)^(0+128),w
  1243  03B3  00AF               	movwf	(??___ftmul^(0+128)+1)
  1244  03B4  082A               	movf	(___ftmul@f1+2)^(0+128),w
  1245  03B5  00B0               	movwf	(??___ftmul^(0+128)+2)
  1246  03B6  1003               	clrc
  1247  03B7  0D2F               	rlf	(??___ftmul^(0+128)+1),w
  1248  03B8  0D30               	rlf	(??___ftmul^(0+128)+2),w
  1249  03B9  00B1               	movwf	(??___ftmul+3)^(0+128)
  1250  03BA  0831               	movf	(??___ftmul+3)^(0+128),w
  1251  03BB  00B2               	movwf	___ftmul@exp^(0+128)
  1252  03BC  08B2               	movf	___ftmul@exp^(0+128),f
  1253  03BD  1D03               	skipz
  1254  03BE  2BC6               	goto	l1990
  1255  03BF  3000               	movlw	0
  1256  03C0  00A8               	movwf	?___ftmul^(0+128)
  1257  03C1  3000               	movlw	0
  1258  03C2  00A9               	movwf	(?___ftmul+1)^(0+128)
  1259  03C3  3000               	movlw	0
  1260  03C4  00AA               	movwf	(?___ftmul+2)^(0+128)
  1261  03C5  0008               	return
  1262  03C6                     l1990:	
  1263  03C6  082B               	movf	___ftmul@f2^(0+128),w
  1264  03C7  00AE               	movwf	??___ftmul^(0+128)
  1265  03C8  082C               	movf	(___ftmul@f2+1)^(0+128),w
  1266  03C9  00AF               	movwf	(??___ftmul^(0+128)+1)
  1267  03CA  082D               	movf	(___ftmul@f2+2)^(0+128),w
  1268  03CB  00B0               	movwf	(??___ftmul^(0+128)+2)
  1269  03CC  1003               	clrc
  1270  03CD  0D2F               	rlf	(??___ftmul^(0+128)+1),w
  1271  03CE  0D30               	rlf	(??___ftmul^(0+128)+2),w
  1272  03CF  00B1               	movwf	(??___ftmul+3)^(0+128)
  1273  03D0  0831               	movf	(??___ftmul+3)^(0+128),w
  1274  03D1  00B7               	movwf	___ftmul@sign^(0+128)
  1275  03D2  08B7               	movf	___ftmul@sign^(0+128),f
  1276  03D3  1D03               	skipz
  1277  03D4  2BDC               	goto	l1996
  1278  03D5  3000               	movlw	0
  1279  03D6  00A8               	movwf	?___ftmul^(0+128)
  1280  03D7  3000               	movlw	0
  1281  03D8  00A9               	movwf	(?___ftmul+1)^(0+128)
  1282  03D9  3000               	movlw	0
  1283  03DA  00AA               	movwf	(?___ftmul+2)^(0+128)
  1284  03DB  0008               	return
  1285  03DC                     l1996:	
  1286  03DC  0837               	movf	___ftmul@sign^(0+128),w
  1287  03DD  3E7B               	addlw	123
  1288  03DE  00AE               	movwf	??___ftmul^(0+128)
  1289  03DF  082E               	movf	??___ftmul^(0+128),w
  1290  03E0  07B2               	addwf	___ftmul@exp^(0+128),f
  1291  03E1  0828               	movf	___ftmul@f1^(0+128),w
  1292  03E2  00AE               	movwf	??___ftmul^(0+128)
  1293  03E3  0829               	movf	(___ftmul@f1+1)^(0+128),w
  1294  03E4  00AF               	movwf	(??___ftmul^(0+128)+1)
  1295  03E5  082A               	movf	(___ftmul@f1+2)^(0+128),w
  1296  03E6  00B0               	movwf	(??___ftmul^(0+128)+2)
  1297  03E7  3010               	movlw	16
  1298  03E8                     u2445:	
  1299  03E8  36B0               	lsrf	(??___ftmul^(0+128)+2),f
  1300  03E9  0CAF               	rrf	(??___ftmul^(0+128)+1),f
  1301  03EA  0CAE               	rrf	??___ftmul^(0+128),f
  1302  03EB  0B89               	decfsz	9,f
  1303  03EC  2BE8               	goto	u2445
  1304  03ED  082E               	movf	??___ftmul^(0+128),w
  1305  03EE  00B1               	movwf	(??___ftmul+3)^(0+128)
  1306  03EF  0831               	movf	(??___ftmul+3)^(0+128),w
  1307  03F0  00B7               	movwf	___ftmul@sign^(0+128)
  1308  03F1  082B               	movf	___ftmul@f2^(0+128),w
  1309  03F2  00AE               	movwf	??___ftmul^(0+128)
  1310  03F3  082C               	movf	(___ftmul@f2+1)^(0+128),w
  1311  03F4  00AF               	movwf	(??___ftmul^(0+128)+1)
  1312  03F5  082D               	movf	(___ftmul@f2+2)^(0+128),w
  1313  03F6  00B0               	movwf	(??___ftmul^(0+128)+2)
  1314  03F7  3010               	movlw	16
  1315  03F8                     u2455:	
  1316  03F8  36B0               	lsrf	(??___ftmul^(0+128)+2),f
  1317  03F9  0CAF               	rrf	(??___ftmul^(0+128)+1),f
  1318  03FA  0CAE               	rrf	??___ftmul^(0+128),f
  1319  03FB  0B89               	decfsz	9,f
  1320  03FC  2BF8               	goto	u2455
  1321  03FD  082E               	movf	??___ftmul^(0+128),w
  1322  03FE  00B1               	movwf	(??___ftmul+3)^(0+128)
  1323  03FF  0831               	movf	(??___ftmul+3)^(0+128),w
  1324  0400  06B7               	xorwf	___ftmul@sign^(0+128),f
  1325  0401  3080               	movlw	128
  1326  0402  00AE               	movwf	??___ftmul^(0+128)
  1327  0403  082E               	movf	??___ftmul^(0+128),w
  1328  0404  05B7               	andwf	___ftmul@sign^(0+128),f
  1329  0405  17A9               	bsf	(___ftmul@f1^(0+128)+1),7
  1330  0406  17AC               	bsf	(___ftmul@f2^(0+128)+1),7
  1331  0407  30FF               	movlw	255
  1332  0408  05AB               	andwf	___ftmul@f2^(0+128),f
  1333  0409  30FF               	movlw	255
  1334  040A  05AC               	andwf	(___ftmul@f2+1)^(0+128),f
  1335  040B  3000               	movlw	0
  1336  040C  05AD               	andwf	(___ftmul@f2+2)^(0+128),f
  1337  040D  3000               	movlw	0
  1338  040E  00B3               	movwf	___ftmul@f3_as_product^(0+128)
  1339  040F  3000               	movlw	0
  1340  0410  00B4               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  1341  0411  3000               	movlw	0
  1342  0412  00B5               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  1343  0413  3007               	movlw	7
  1344  0414  00AE               	movwf	??___ftmul^(0+128)
  1345  0415  082E               	movf	??___ftmul^(0+128),w
  1346  0416  00B6               	movwf	___ftmul@cntr^(0+128)
  1347  0417                     l2008:	
  1348  0417  1C28               	btfss	___ftmul@f1^(0+128),0
  1349  0418  2C1F               	goto	l2012
  1350  0419  082B               	movf	___ftmul@f2^(0+128),w
  1351  041A  07B3               	addwf	___ftmul@f3_as_product^(0+128),f
  1352  041B  082C               	movf	(___ftmul@f2+1)^(0+128),w
  1353  041C  3DB4               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  1354  041D  082D               	movf	(___ftmul@f2+2)^(0+128),w
  1355  041E  3DB5               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  1356  041F                     l2012:	
  1357  041F  3001               	movlw	1
  1358  0420                     u2475:	
  1359  0420  36AA               	lsrf	(___ftmul@f1+2)^(0+128),f
  1360  0421  0CA9               	rrf	(___ftmul@f1+1)^(0+128),f
  1361  0422  0CA8               	rrf	___ftmul@f1^(0+128),f
  1362  0423  0B89               	decfsz	9,f
  1363  0424  2C20               	goto	u2475
  1364  0425  3001               	movlw	1
  1365  0426                     u2485:	
  1366  0426  35AB               	lslf	___ftmul@f2^(0+128),f
  1367  0427  0DAC               	rlf	(___ftmul@f2+1)^(0+128),f
  1368  0428  0DAD               	rlf	(___ftmul@f2+2)^(0+128),f
  1369  0429  0B89               	decfsz	9,f
  1370  042A  2C26               	goto	u2485
  1371  042B  3001               	movlw	1
  1372  042C  02B6               	subwf	___ftmul@cntr^(0+128),f
  1373  042D  1D03               	btfss	3,2
  1374  042E  2C17               	goto	l2008
  1375  042F  3009               	movlw	9
  1376  0430  00AE               	movwf	??___ftmul^(0+128)
  1377  0431  082E               	movf	??___ftmul^(0+128),w
  1378  0432  00B6               	movwf	___ftmul@cntr^(0+128)
  1379  0433                     l2020:	
  1380  0433  1C28               	btfss	___ftmul@f1^(0+128),0
  1381  0434  2C3B               	goto	l2024
  1382  0435  082B               	movf	___ftmul@f2^(0+128),w
  1383  0436  07B3               	addwf	___ftmul@f3_as_product^(0+128),f
  1384  0437  082C               	movf	(___ftmul@f2+1)^(0+128),w
  1385  0438  3DB4               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  1386  0439  082D               	movf	(___ftmul@f2+2)^(0+128),w
  1387  043A  3DB5               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  1388  043B                     l2024:	
  1389  043B  3001               	movlw	1
  1390  043C                     u2515:	
  1391  043C  36AA               	lsrf	(___ftmul@f1+2)^(0+128),f
  1392  043D  0CA9               	rrf	(___ftmul@f1+1)^(0+128),f
  1393  043E  0CA8               	rrf	___ftmul@f1^(0+128),f
  1394  043F  0B89               	decfsz	9,f
  1395  0440  2C3C               	goto	u2515
  1396  0441  3001               	movlw	1
  1397  0442                     u2525:	
  1398  0442  36B5               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  1399  0443  0CB4               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  1400  0444  0CB3               	rrf	___ftmul@f3_as_product^(0+128),f
  1401  0445  0B89               	decfsz	9,f
  1402  0446  2C42               	goto	u2525
  1403  0447  3001               	movlw	1
  1404  0448  02B6               	subwf	___ftmul@cntr^(0+128),f
  1405  0449  1D03               	btfss	3,2
  1406  044A  2C33               	goto	l2020
  1407  044B  0833               	movf	___ftmul@f3_as_product^(0+128),w
  1408  044C  00A0               	movwf	?___ftpack^(0+128)
  1409  044D  0834               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  1410  044E  00A1               	movwf	(?___ftpack+1)^(0+128)
  1411  044F  0835               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  1412  0450  00A2               	movwf	(?___ftpack+2)^(0+128)
  1413  0451  0832               	movf	___ftmul@exp^(0+128),w
  1414  0452  00AE               	movwf	??___ftmul^(0+128)
  1415  0453  082E               	movf	??___ftmul^(0+128),w
  1416  0454  00A3               	movwf	(?___ftpack^(0+128)+3)
  1417  0455  0837               	movf	___ftmul@sign^(0+128),w
  1418  0456  00AF               	movwf	(??___ftmul+1)^(0+128)
  1419  0457  082F               	movf	(??___ftmul+1)^(0+128),w
  1420  0458  00A4               	movwf	(?___ftpack^(0+128)+4)
  1421  0459  3186  26CE         	fcall	___ftpack
  1422  045B  0021               	movlb	1	; select bank1
  1423  045C  0820               	movf	?___ftpack^(0+128),w
  1424  045D  00A8               	movwf	?___ftmul^(0+128)
  1425  045E  0821               	movf	(?___ftpack+1)^(0+128),w
  1426  045F  00A9               	movwf	(?___ftmul+1)^(0+128)
  1427  0460  0822               	movf	(?___ftpack+2)^(0+128),w
  1428  0461  00AA               	movwf	(?___ftmul+2)^(0+128)
  1429  0462  0008               	return
  1430  0463                     __end_of___ftmul:	
  1431                           
  1432                           	psect	text4
  1433  078F                     __ptext4:	
  1434 ;; *************** function ___ftge *****************
  1435 ;; Defined at:
  1436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftge.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  ff1             3    0[BANK1 ] float 
  1439 ;;  ff2             3    3[BANK1 ] float 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;		None               void
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1451 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;Total ram usage:        9 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    3
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function ___ftge
  1467  078F                     ___ftge:	
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1471  078F  0021               	movlb	1	; select bank1
  1472  0790  1FA2               	btfss	(___ftge@ff1+2)^(0+128),7
  1473  0791  2FA6               	goto	l1968
  1474  0792  0920               	comf	___ftge@ff1^(0+128),w
  1475  0793  00A6               	movwf	??___ftge^(0+128)
  1476  0794  0921               	comf	(___ftge@ff1+1)^(0+128),w
  1477  0795  00A7               	movwf	(??___ftge^(0+128)+1)
  1478  0796  0922               	comf	(___ftge@ff1+2)^(0+128),w
  1479  0797  00A8               	movwf	(??___ftge^(0+128)+2)
  1480  0798  0AA6               	incf	??___ftge^(0+128),f
  1481  0799  1903               	skipnz
  1482  079A  0AA7               	incf	(??___ftge^(0+128)+1),f
  1483  079B  1903               	skipnz
  1484  079C  0AA8               	incf	(??___ftge^(0+128)+2),f
  1485  079D  3000               	movlw	0
  1486  079E  0726               	addwf	??___ftge^(0+128),w
  1487  079F  00A0               	movwf	___ftge@ff1^(0+128)
  1488  07A0  3000               	movlw	0
  1489  07A1  3D27               	addwfc	(??___ftge+1)^(0+128),w
  1490  07A2  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  1491  07A3  3080               	movlw	128
  1492  07A4  3D28               	addwfc	(??___ftge+2)^(0+128),w
  1493  07A5  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  1494  07A6                     l1968:	
  1495  07A6  1FA5               	btfss	(___ftge@ff2+2)^(0+128),7
  1496  07A7  2FBC               	goto	l1972
  1497  07A8  0923               	comf	___ftge@ff2^(0+128),w
  1498  07A9  00A6               	movwf	??___ftge^(0+128)
  1499  07AA  0924               	comf	(___ftge@ff2+1)^(0+128),w
  1500  07AB  00A7               	movwf	(??___ftge^(0+128)+1)
  1501  07AC  0925               	comf	(___ftge@ff2+2)^(0+128),w
  1502  07AD  00A8               	movwf	(??___ftge^(0+128)+2)
  1503  07AE  0AA6               	incf	??___ftge^(0+128),f
  1504  07AF  1903               	skipnz
  1505  07B0  0AA7               	incf	(??___ftge^(0+128)+1),f
  1506  07B1  1903               	skipnz
  1507  07B2  0AA8               	incf	(??___ftge^(0+128)+2),f
  1508  07B3  3000               	movlw	0
  1509  07B4  0726               	addwf	??___ftge^(0+128),w
  1510  07B5  00A3               	movwf	___ftge@ff2^(0+128)
  1511  07B6  3000               	movlw	0
  1512  07B7  3D27               	addwfc	(??___ftge+1)^(0+128),w
  1513  07B8  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  1514  07B9  3080               	movlw	128
  1515  07BA  3D28               	addwfc	(??___ftge+2)^(0+128),w
  1516  07BB  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  1517  07BC                     l1972:	
  1518  07BC  3080               	movlw	128
  1519  07BD  06A2               	xorwf	(___ftge@ff1+2)^(0+128),f
  1520  07BE  3080               	movlw	128
  1521  07BF  06A5               	xorwf	(___ftge@ff2+2)^(0+128),f
  1522  07C0  0825               	movf	(___ftge@ff2+2)^(0+128),w
  1523  07C1  0222               	subwf	(___ftge@ff1+2)^(0+128),w
  1524  07C2  1D03               	skipz
  1525  07C3  0008               	return
  1526  07C4  0824               	movf	(___ftge@ff2+1)^(0+128),w
  1527  07C5  0221               	subwf	(___ftge@ff1+1)^(0+128),w
  1528  07C6  1D03               	skipz
  1529  07C7  0008               	return
  1530  07C8  0823               	movf	___ftge@ff2^(0+128),w
  1531  07C9  0220               	subwf	___ftge@ff1^(0+128),w
  1532  07CA  0008               	return
  1533  07CB                     __end_of___ftge:	
  1534                           
  1535                           	psect	text5
  1536  00D5                     __ptext5:	
  1537 ;; *************** function ___ftadd *****************
  1538 ;; Defined at:
  1539 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  f1              3   24[BANK1 ] float 
  1542 ;;  f2              3   27[BANK1 ] float 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  exp1            1   36[BANK1 ] unsigned char 
  1545 ;;  exp2            1   35[BANK1 ] unsigned char 
  1546 ;;  sign            1   34[BANK1 ] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  3   24[BANK1 ] float 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1556 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;Total ram usage:       13 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    4
  1563 ;; This function calls:
  1564 ;;		___ftpack
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function ___ftadd
  1572  00D5                     ___ftadd:	
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1576  00D5  0021               	movlb	1	; select bank1
  1577  00D6  0838               	movf	___ftadd@f1^(0+128),w
  1578  00D7  00BE               	movwf	??___ftadd^(0+128)
  1579  00D8  0839               	movf	(___ftadd@f1+1)^(0+128),w
  1580  00D9  00BF               	movwf	(??___ftadd^(0+128)+1)
  1581  00DA  083A               	movf	(___ftadd@f1+2)^(0+128),w
  1582  00DB  00C0               	movwf	(??___ftadd^(0+128)+2)
  1583  00DC  1003               	clrc
  1584  00DD  0D3F               	rlf	(??___ftadd^(0+128)+1),w
  1585  00DE  0D40               	rlf	(??___ftadd^(0+128)+2),w
  1586  00DF  00C1               	movwf	(??___ftadd+3)^(0+128)
  1587  00E0  0841               	movf	(??___ftadd+3)^(0+128),w
  1588  00E1  00C4               	movwf	___ftadd@exp1^(0+128)
  1589  00E2  083B               	movf	___ftadd@f2^(0+128),w
  1590  00E3  00BE               	movwf	??___ftadd^(0+128)
  1591  00E4  083C               	movf	(___ftadd@f2+1)^(0+128),w
  1592  00E5  00BF               	movwf	(??___ftadd^(0+128)+1)
  1593  00E6  083D               	movf	(___ftadd@f2+2)^(0+128),w
  1594  00E7  00C0               	movwf	(??___ftadd^(0+128)+2)
  1595  00E8  1003               	clrc
  1596  00E9  0D3F               	rlf	(??___ftadd^(0+128)+1),w
  1597  00EA  0D40               	rlf	(??___ftadd^(0+128)+2),w
  1598  00EB  00C1               	movwf	(??___ftadd+3)^(0+128)
  1599  00EC  0841               	movf	(??___ftadd+3)^(0+128),w
  1600  00ED  00C3               	movwf	___ftadd@exp2^(0+128)
  1601  00EE  0844               	movf	___ftadd@exp1^(0+128),w
  1602  00EF  1903               	btfsc	3,2
  1603  00F0  28FD               	goto	l1900
  1604  00F1  0843               	movf	___ftadd@exp2^(0+128),w
  1605  00F2  0244               	subwf	___ftadd@exp1^(0+128),w
  1606  00F3  1803               	skipnc
  1607  00F4  2904               	goto	l1904
  1608  00F5  0344               	decf	___ftadd@exp1^(0+128),w
  1609  00F6  3AFF               	xorlw	255
  1610  00F7  0743               	addwf	___ftadd@exp2^(0+128),w
  1611  00F8  00BE               	movwf	??___ftadd^(0+128)
  1612  00F9  3019               	movlw	25
  1613  00FA  023E               	subwf	??___ftadd^(0+128),w
  1614  00FB  1C03               	skipc
  1615  00FC  2904               	goto	l1904
  1616  00FD                     l1900:	
  1617  00FD  083B               	movf	___ftadd@f2^(0+128),w
  1618  00FE  00B8               	movwf	?___ftadd^(0+128)
  1619  00FF  083C               	movf	(___ftadd@f2+1)^(0+128),w
  1620  0100  00B9               	movwf	(?___ftadd+1)^(0+128)
  1621  0101  083D               	movf	(___ftadd@f2+2)^(0+128),w
  1622  0102  00BA               	movwf	(?___ftadd+2)^(0+128)
  1623  0103  0008               	return
  1624  0104                     l1904:	
  1625  0104  0843               	movf	___ftadd@exp2^(0+128),w
  1626  0105  1903               	btfsc	3,2
  1627  0106  0008               	return
  1628  0107  0844               	movf	___ftadd@exp1^(0+128),w
  1629  0108  0243               	subwf	___ftadd@exp2^(0+128),w
  1630  0109  1803               	skipnc
  1631  010A  2913               	goto	l1910
  1632  010B  0343               	decf	___ftadd@exp2^(0+128),w
  1633  010C  3AFF               	xorlw	255
  1634  010D  0744               	addwf	___ftadd@exp1^(0+128),w
  1635  010E  00BE               	movwf	??___ftadd^(0+128)
  1636  010F  3019               	movlw	25
  1637  0110  023E               	subwf	??___ftadd^(0+128),w
  1638  0111  1803               	btfsc	3,0
  1639  0112  0008               	return
  1640  0113                     l1910:	
  1641  0113  3006               	movlw	6
  1642  0114  00BE               	movwf	??___ftadd^(0+128)
  1643  0115  083E               	movf	??___ftadd^(0+128),w
  1644  0116  00C2               	movwf	___ftadd@sign^(0+128)
  1645  0117  1BBA               	btfsc	(___ftadd@f1+2)^(0+128),7
  1646  0118  17C2               	bsf	___ftadd@sign^(0+128),7
  1647  0119  1BBD               	btfsc	(___ftadd@f2+2)^(0+128),7
  1648  011A  1742               	bsf	___ftadd@sign^(0+128),6
  1649  011B  17B9               	bsf	(___ftadd@f1^(0+128)+1),7
  1650  011C  30FF               	movlw	255
  1651  011D  05B8               	andwf	___ftadd@f1^(0+128),f
  1652  011E  30FF               	movlw	255
  1653  011F  05B9               	andwf	(___ftadd@f1+1)^(0+128),f
  1654  0120  3000               	movlw	0
  1655  0121  05BA               	andwf	(___ftadd@f1+2)^(0+128),f
  1656  0122  17BC               	bsf	(___ftadd@f2^(0+128)+1),7
  1657  0123  30FF               	movlw	255
  1658  0124  05BB               	andwf	___ftadd@f2^(0+128),f
  1659  0125  30FF               	movlw	255
  1660  0126  05BC               	andwf	(___ftadd@f2+1)^(0+128),f
  1661  0127  3000               	movlw	0
  1662  0128  05BD               	andwf	(___ftadd@f2+2)^(0+128),f
  1663  0129  0843               	movf	___ftadd@exp2^(0+128),w
  1664  012A  0244               	subwf	___ftadd@exp1^(0+128),w
  1665  012B  1803               	skipnc
  1666  012C  294F               	goto	l1932
  1667  012D                     l1922:	
  1668  012D  3001               	movlw	1
  1669  012E                     u2255:	
  1670  012E  35BB               	lslf	___ftadd@f2^(0+128),f
  1671  012F  0DBC               	rlf	(___ftadd@f2+1)^(0+128),f
  1672  0130  0DBD               	rlf	(___ftadd@f2+2)^(0+128),f
  1673  0131  0B89               	decfsz	9,f
  1674  0132  292E               	goto	u2255
  1675  0133  3001               	movlw	1
  1676  0134  02C3               	subwf	___ftadd@exp2^(0+128),f
  1677  0135  0843               	movf	___ftadd@exp2^(0+128),w
  1678  0136  0644               	xorwf	___ftadd@exp1^(0+128),w
  1679  0137  1903               	skipnz
  1680  0138  294A               	goto	l1930
  1681  0139  3001               	movlw	1
  1682  013A  02C2               	subwf	___ftadd@sign^(0+128),f
  1683  013B  0842               	movf	___ftadd@sign^(0+128),w
  1684  013C  3907               	andlw	7
  1685  013D  1903               	btfsc	3,2
  1686  013E  294A               	goto	l1930
  1687  013F  292D               	goto	l1922
  1688  0140                     l1928:	
  1689  0140  3001               	movlw	1
  1690  0141                     u2285:	
  1691  0141  36BA               	lsrf	(___ftadd@f1+2)^(0+128),f
  1692  0142  0CB9               	rrf	(___ftadd@f1+1)^(0+128),f
  1693  0143  0CB8               	rrf	___ftadd@f1^(0+128),f
  1694  0144  0B89               	decfsz	9,f
  1695  0145  2941               	goto	u2285
  1696  0146  3001               	movlw	1
  1697  0147  00BE               	movwf	??___ftadd^(0+128)
  1698  0148  083E               	movf	??___ftadd^(0+128),w
  1699  0149  07C4               	addwf	___ftadd@exp1^(0+128),f
  1700  014A                     l1930:	
  1701  014A  0844               	movf	___ftadd@exp1^(0+128),w
  1702  014B  0643               	xorwf	___ftadd@exp2^(0+128),w
  1703  014C  1903               	btfsc	3,2
  1704  014D  2974               	goto	l345
  1705  014E  2940               	goto	l1928
  1706  014F                     l1932:	
  1707  014F  0844               	movf	___ftadd@exp1^(0+128),w
  1708  0150  0243               	subwf	___ftadd@exp2^(0+128),w
  1709  0151  1803               	skipnc
  1710  0152  2974               	goto	l345
  1711  0153                     l1934:	
  1712  0153  3001               	movlw	1
  1713  0154                     u2315:	
  1714  0154  35B8               	lslf	___ftadd@f1^(0+128),f
  1715  0155  0DB9               	rlf	(___ftadd@f1+1)^(0+128),f
  1716  0156  0DBA               	rlf	(___ftadd@f1+2)^(0+128),f
  1717  0157  0B89               	decfsz	9,f
  1718  0158  2954               	goto	u2315
  1719  0159  3001               	movlw	1
  1720  015A  02C4               	subwf	___ftadd@exp1^(0+128),f
  1721  015B  0843               	movf	___ftadd@exp2^(0+128),w
  1722  015C  0644               	xorwf	___ftadd@exp1^(0+128),w
  1723  015D  1903               	skipnz
  1724  015E  2970               	goto	l1942
  1725  015F  3001               	movlw	1
  1726  0160  02C2               	subwf	___ftadd@sign^(0+128),f
  1727  0161  0842               	movf	___ftadd@sign^(0+128),w
  1728  0162  3907               	andlw	7
  1729  0163  1903               	btfsc	3,2
  1730  0164  2970               	goto	l1942
  1731  0165  2953               	goto	l1934
  1732  0166                     l1940:	
  1733  0166  3001               	movlw	1
  1734  0167                     u2345:	
  1735  0167  36BD               	lsrf	(___ftadd@f2+2)^(0+128),f
  1736  0168  0CBC               	rrf	(___ftadd@f2+1)^(0+128),f
  1737  0169  0CBB               	rrf	___ftadd@f2^(0+128),f
  1738  016A  0B89               	decfsz	9,f
  1739  016B  2967               	goto	u2345
  1740  016C  3001               	movlw	1
  1741  016D  00BE               	movwf	??___ftadd^(0+128)
  1742  016E  083E               	movf	??___ftadd^(0+128),w
  1743  016F  07C3               	addwf	___ftadd@exp2^(0+128),f
  1744  0170                     l1942:	
  1745  0170  0844               	movf	___ftadd@exp1^(0+128),w
  1746  0171  0643               	xorwf	___ftadd@exp2^(0+128),w
  1747  0172  1D03               	skipz
  1748  0173  2966               	goto	l1940
  1749  0174                     l345:	
  1750  0174  1FC2               	btfss	___ftadd@sign^(0+128),7
  1751  0175  2986               	goto	l1946
  1752  0176  30FF               	movlw	255
  1753  0177  06B8               	xorwf	___ftadd@f1^(0+128),f
  1754  0178  30FF               	movlw	255
  1755  0179  06B9               	xorwf	(___ftadd@f1+1)^(0+128),f
  1756  017A  30FF               	movlw	255
  1757  017B  06BA               	xorwf	(___ftadd@f1+2)^(0+128),f
  1758  017C  3001               	movlw	1
  1759  017D  07B8               	addwf	___ftadd@f1^(0+128),f
  1760  017E  3000               	movlw	0
  1761  017F  1803               	skipnc
  1762  0180  3001               	movlw	1
  1763  0181  07B9               	addwf	(___ftadd@f1+1)^(0+128),f
  1764  0182  3000               	movlw	0
  1765  0183  1803               	skipnc
  1766  0184  3001               	movlw	1
  1767  0185  07BA               	addwf	(___ftadd@f1+2)^(0+128),f
  1768  0186                     l1946:	
  1769  0186  1F42               	btfss	___ftadd@sign^(0+128),6
  1770  0187  2998               	goto	l1950
  1771  0188  30FF               	movlw	255
  1772  0189  06BB               	xorwf	___ftadd@f2^(0+128),f
  1773  018A  30FF               	movlw	255
  1774  018B  06BC               	xorwf	(___ftadd@f2+1)^(0+128),f
  1775  018C  30FF               	movlw	255
  1776  018D  06BD               	xorwf	(___ftadd@f2+2)^(0+128),f
  1777  018E  3001               	movlw	1
  1778  018F  07BB               	addwf	___ftadd@f2^(0+128),f
  1779  0190  3000               	movlw	0
  1780  0191  1803               	skipnc
  1781  0192  3001               	movlw	1
  1782  0193  07BC               	addwf	(___ftadd@f2+1)^(0+128),f
  1783  0194  3000               	movlw	0
  1784  0195  1803               	skipnc
  1785  0196  3001               	movlw	1
  1786  0197  07BD               	addwf	(___ftadd@f2+2)^(0+128),f
  1787  0198                     l1950:	
  1788  0198  01C2               	clrf	___ftadd@sign^(0+128)
  1789  0199  0838               	movf	___ftadd@f1^(0+128),w
  1790  019A  07BB               	addwf	___ftadd@f2^(0+128),f
  1791  019B  0839               	movf	(___ftadd@f1+1)^(0+128),w
  1792  019C  3DBC               	addwfc	(___ftadd@f2+1)^(0+128),f
  1793  019D  083A               	movf	(___ftadd@f1+2)^(0+128),w
  1794  019E  3DBD               	addwfc	(___ftadd@f2+2)^(0+128),f
  1795  019F  1FBD               	btfss	(___ftadd@f2+2)^(0+128),7
  1796  01A0  29B3               	goto	l1960
  1797  01A1  30FF               	movlw	255
  1798  01A2  06BB               	xorwf	___ftadd@f2^(0+128),f
  1799  01A3  30FF               	movlw	255
  1800  01A4  06BC               	xorwf	(___ftadd@f2+1)^(0+128),f
  1801  01A5  30FF               	movlw	255
  1802  01A6  06BD               	xorwf	(___ftadd@f2+2)^(0+128),f
  1803  01A7  3001               	movlw	1
  1804  01A8  07BB               	addwf	___ftadd@f2^(0+128),f
  1805  01A9  3000               	movlw	0
  1806  01AA  1803               	skipnc
  1807  01AB  3001               	movlw	1
  1808  01AC  07BC               	addwf	(___ftadd@f2+1)^(0+128),f
  1809  01AD  3000               	movlw	0
  1810  01AE  1803               	skipnc
  1811  01AF  3001               	movlw	1
  1812  01B0  07BD               	addwf	(___ftadd@f2+2)^(0+128),f
  1813  01B1  01C2               	clrf	___ftadd@sign^(0+128)
  1814  01B2  0AC2               	incf	___ftadd@sign^(0+128),f
  1815  01B3                     l1960:	
  1816  01B3  083B               	movf	___ftadd@f2^(0+128),w
  1817  01B4  00A0               	movwf	?___ftpack^(0+128)
  1818  01B5  083C               	movf	(___ftadd@f2+1)^(0+128),w
  1819  01B6  00A1               	movwf	(?___ftpack+1)^(0+128)
  1820  01B7  083D               	movf	(___ftadd@f2+2)^(0+128),w
  1821  01B8  00A2               	movwf	(?___ftpack+2)^(0+128)
  1822  01B9  0844               	movf	___ftadd@exp1^(0+128),w
  1823  01BA  00BE               	movwf	??___ftadd^(0+128)
  1824  01BB  083E               	movf	??___ftadd^(0+128),w
  1825  01BC  00A3               	movwf	(?___ftpack^(0+128)+3)
  1826  01BD  0842               	movf	___ftadd@sign^(0+128),w
  1827  01BE  00BF               	movwf	(??___ftadd+1)^(0+128)
  1828  01BF  083F               	movf	(??___ftadd+1)^(0+128),w
  1829  01C0  00A4               	movwf	(?___ftpack^(0+128)+4)
  1830  01C1  3186  26CE         	fcall	___ftpack
  1831  01C3  0021               	movlb	1	; select bank1
  1832  01C4  0820               	movf	?___ftpack^(0+128),w
  1833  01C5  00B8               	movwf	?___ftadd^(0+128)
  1834  01C6  0821               	movf	(?___ftpack+1)^(0+128),w
  1835  01C7  00B9               	movwf	(?___ftadd+1)^(0+128)
  1836  01C8  0822               	movf	(?___ftpack+2)^(0+128),w
  1837  01C9  00BA               	movwf	(?___ftadd+2)^(0+128)
  1838  01CA  0008               	return
  1839  01CB                     __end_of___ftadd:	
  1840                           
  1841                           	psect	text6
  1842  06CE                     __ptext6:	
  1843 ;; *************** function ___ftpack *****************
  1844 ;; Defined at:
  1845 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  arg             3    0[BANK1 ] unsigned um
  1848 ;;  exp             1    3[BANK1 ] unsigned char 
  1849 ;;  sign            1    4[BANK1 ] unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  3    0[BANK1 ] float 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1861 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1865 ;;Total ram usage:        8 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    3
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		___ftadd
  1872 ;;		___ftmul
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function ___ftpack
  1878  06CE                     ___ftpack:	
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1882  06CE  0021               	movlb	1	; select bank1
  1883  06CF  0823               	movf	___ftpack@exp^(0+128),w
  1884  06D0  1903               	btfsc	3,2
  1885  06D1  2ED7               	goto	l1866
  1886  06D2  0822               	movf	(___ftpack@arg+2)^(0+128),w
  1887  06D3  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  1888  06D4  0420               	iorwf	___ftpack@arg^(0+128),w
  1889  06D5  1D03               	skipz
  1890  06D6  2EE8               	goto	l1872
  1891  06D7                     l1866:	
  1892  06D7  3000               	movlw	0
  1893  06D8  00A0               	movwf	?___ftpack^(0+128)
  1894  06D9  3000               	movlw	0
  1895  06DA  00A1               	movwf	(?___ftpack+1)^(0+128)
  1896  06DB  3000               	movlw	0
  1897  06DC  00A2               	movwf	(?___ftpack+2)^(0+128)
  1898  06DD  0008               	return
  1899  06DE                     l1870:	
  1900  06DE  3001               	movlw	1
  1901  06DF  00A5               	movwf	??___ftpack^(0+128)
  1902  06E0  0825               	movf	??___ftpack^(0+128),w
  1903  06E1  07A3               	addwf	___ftpack@exp^(0+128),f
  1904  06E2  3001               	movlw	1
  1905  06E3                     u2075:	
  1906  06E3  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  1907  06E4  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  1908  06E5  0CA0               	rrf	___ftpack@arg^(0+128),f
  1909  06E6  0B89               	decfsz	9,f
  1910  06E7  2EE3               	goto	u2075
  1911  06E8                     l1872:	
  1912  06E8  30FE               	movlw	254
  1913  06E9  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  1914  06EA  1903               	btfsc	3,2
  1915  06EB  2F01               	goto	l316
  1916  06EC  2EDE               	goto	l1870
  1917  06ED                     l1874:	
  1918  06ED  3001               	movlw	1
  1919  06EE  00A5               	movwf	??___ftpack^(0+128)
  1920  06EF  0825               	movf	??___ftpack^(0+128),w
  1921  06F0  07A3               	addwf	___ftpack@exp^(0+128),f
  1922  06F1  3001               	movlw	1
  1923  06F2  07A0               	addwf	___ftpack@arg^(0+128),f
  1924  06F3  3000               	movlw	0
  1925  06F4  1803               	skipnc
  1926  06F5  3001               	movlw	1
  1927  06F6  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  1928  06F7  3000               	movlw	0
  1929  06F8  1803               	skipnc
  1930  06F9  3001               	movlw	1
  1931  06FA  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  1932  06FB  3001               	movlw	1
  1933  06FC                     u2095:	
  1934  06FC  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  1935  06FD  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  1936  06FE  0CA0               	rrf	___ftpack@arg^(0+128),f
  1937  06FF  0B89               	decfsz	9,f
  1938  0700  2EFC               	goto	u2095
  1939  0701                     l316:	
  1940  0701  30FF               	movlw	255
  1941  0702  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  1942  0703  1903               	btfsc	3,2
  1943  0704  2F0E               	goto	l1882
  1944  0705  2EED               	goto	l1874
  1945  0706                     l1880:	
  1946  0706  3001               	movlw	1
  1947  0707  02A3               	subwf	___ftpack@exp^(0+128),f
  1948  0708  3001               	movlw	1
  1949  0709                     u2115:	
  1950  0709  35A0               	lslf	___ftpack@arg^(0+128),f
  1951  070A  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  1952  070B  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  1953  070C  0B89               	decfsz	9,f
  1954  070D  2F09               	goto	u2115
  1955  070E                     l1882:	
  1956  070E  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  1957  070F  2F06               	goto	l1880
  1958  0710  1823               	btfsc	___ftpack@exp^(0+128),0
  1959  0711  2F18               	goto	l322
  1960  0712  30FF               	movlw	255
  1961  0713  05A0               	andwf	___ftpack@arg^(0+128),f
  1962  0714  307F               	movlw	127
  1963  0715  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  1964  0716  30FF               	movlw	255
  1965  0717  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  1966  0718                     l322:	
  1967  0718  1003               	clrc
  1968  0719  0CA3               	rrf	___ftpack@exp^(0+128),f
  1969  071A  0823               	movf	___ftpack@exp^(0+128),w
  1970  071B  00A5               	movwf	??___ftpack^(0+128)
  1971  071C  01A6               	clrf	(??___ftpack^(0+128)+1)
  1972  071D  01A7               	clrf	(??___ftpack^(0+128)+2)
  1973  071E  3010               	movlw	16
  1974  071F                     u2145:	
  1975  071F  35A5               	lslf	??___ftpack^(0+128),f
  1976  0720  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  1977  0721  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  1978  0722  0B89               	decfsz	9,f
  1979  0723  2F1F               	goto	u2145
  1980  0724  0825               	movf	??___ftpack^(0+128),w
  1981  0725  04A0               	iorwf	___ftpack@arg^(0+128),f
  1982  0726  0826               	movf	(??___ftpack+1)^(0+128),w
  1983  0727  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  1984  0728  0827               	movf	(??___ftpack+2)^(0+128),w
  1985  0729  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  1986  072A  0824               	movf	___ftpack@sign^(0+128),w
  1987  072B  1903               	btfsc	3,2
  1988  072C  0008               	return
  1989  072D  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  1990  072E  0008               	return
  1991  072F                     __end_of___ftpack:	
  1992                           
  1993                           	psect	text7
  1994  0F78                     __ptext7:	
  1995 ;; *************** function _initializeTimer *****************
  1996 ;; Defined at:
  1997 ;;		line 87 in file "main.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;		None               void
  2004 ;; Registers used:
  2005 ;;		status,2
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    3
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _initializeTimer
  2027  0F78                     _initializeTimer:	
  2028                           
  2029                           ;main.c: 88: OPTION_REGbits.TMR0CS = 0;
  2030                           
  2031                           ;incstack = 0
  2032                           ; Regs used in _initializeTimer: [status,2]
  2033  0F78  0021               	movlb	1	; select bank1
  2034  0F79  1295               	bcf	21,5	;volatile
  2035                           
  2036                           ;main.c: 89: OPTION_REGbits.PSA = 0;
  2037  0F7A  1195               	bcf	21,3	;volatile
  2038                           
  2039                           ;main.c: 90: OPTION_REGbits.PS0 = 1;
  2040  0F7B  1415               	bsf	21,0	;volatile
  2041                           
  2042                           ;main.c: 91: OPTION_REGbits.PS1 = 1;
  2043  0F7C  1495               	bsf	21,1	;volatile
  2044                           
  2045                           ;main.c: 92: OPTION_REGbits.PS2 = 1;
  2046  0F7D  1515               	bsf	21,2	;volatile
  2047                           
  2048                           ;main.c: 93: TMR0 = 0;
  2049  0F7E  0020               	movlb	0	; select bank0
  2050  0F7F  0195               	clrf	21	;volatile
  2051                           
  2052                           ;main.c: 94: INTCONbits.GIE = 1;
  2053  0F80  178B               	bsf	11,7	;volatile
  2054                           
  2055                           ;main.c: 95: INTCONbits.TMR0IE = 1;
  2056  0F81  168B               	bsf	11,5	;volatile
  2057  0F82  0008               	return
  2058  0F83                     __end_of_initializeTimer:	
  2059                           
  2060                           	psect	text8
  2061  07CB                     __ptext8:	
  2062 ;; *************** function _initializeAsyncConversion *****************
  2063 ;; Defined at:
  2064 ;;		line 46 in file "main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;		None               void
  2071 ;; Registers used:
  2072 ;;		wreg, status,2
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    3
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _initializeAsyncConversion
  2094  07CB                     _initializeAsyncConversion:	
  2095                           
  2096                           ;main.c: 47: ANSELA = 0xff;
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _initializeAsyncConversion: [wreg+status,2]
  2100  07CB  30FF               	movlw	255
  2101  07CC  0023               	movlb	3	; select bank3
  2102  07CD  008C               	movwf	12	;volatile
  2103                           
  2104                           ;main.c: 48: TRISA = 0xff;
  2105  07CE  30FF               	movlw	255
  2106  07CF  0021               	movlb	1	; select bank1
  2107  07D0  008C               	movwf	12	;volatile
  2108                           
  2109                           ;main.c: 49: TRISD = 0;
  2110  07D1  018F               	clrf	15	;volatile
  2111                           
  2112                           ;main.c: 50: PORTA = 0;
  2113  07D2  0020               	movlb	0	; select bank0
  2114  07D3  018C               	clrf	12	;volatile
  2115                           
  2116                           ;main.c: 51: TRISB = 0;
  2117  07D4  0021               	movlb	1	; select bank1
  2118  07D5  018D               	clrf	13	;volatile
  2119                           
  2120                           ;main.c: 52: ANSELB = 0;
  2121  07D6  0023               	movlb	3	; select bank3
  2122  07D7  018D               	clrf	13	;volatile
  2123                           
  2124                           ;main.c: 53: PORTB=0;
  2125  07D8  0020               	movlb	0	; select bank0
  2126  07D9  018D               	clrf	13	;volatile
  2127                           
  2128                           ;main.c: 54: PORTD = 0;
  2129  07DA  018F               	clrf	15	;volatile
  2130                           
  2131                           ;main.c: 55: TRISD = 0;
  2132  07DB  0021               	movlb	1	; select bank1
  2133  07DC  018F               	clrf	15	;volatile
  2134                           
  2135                           ;main.c: 56: ANSELD = 0;
  2136  07DD  0023               	movlb	3	; select bank3
  2137  07DE  018F               	clrf	15	;volatile
  2138                           
  2139                           ;main.c: 58: ADCON1bits.ADFM = 0;
  2140  07DF  0021               	movlb	1	; select bank1
  2141  07E0  139E               	bcf	30,7	;volatile
  2142                           
  2143                           ;main.c: 60: ADCON1bits.ADCS2 = 1;
  2144  07E1  171E               	bsf	30,6	;volatile
  2145                           
  2146                           ;main.c: 61: ADCON1bits.ADCS1 = 1;
  2147  07E2  169E               	bsf	30,5	;volatile
  2148                           
  2149                           ;main.c: 62: ADCON1bits.ADCS0 = 1;
  2150  07E3  161E               	bsf	30,4	;volatile
  2151                           
  2152                           ;main.c: 64: ADCON1bits.ADNREF = 0;
  2153  07E4  111E               	bcf	30,2	;volatile
  2154                           
  2155                           ;main.c: 65: ADCON1bits.ADPREF1 = 0;
  2156  07E5  109E               	bcf	30,1	;volatile
  2157                           
  2158                           ;main.c: 66: ADCON1bits.ADPREF0 = 0;
  2159  07E6  101E               	bcf	30,0	;volatile
  2160                           
  2161                           ;main.c: 68: ADCON0bits.ADON = 1;
  2162  07E7  141D               	bsf	29,0	;volatile
  2163                           
  2164                           ;main.c: 70: ADCON0bits.CHS4 = 0;
  2165  07E8  131D               	bcf	29,6	;volatile
  2166                           
  2167                           ;main.c: 71: ADCON0bits.CHS3 = 0;
  2168  07E9  129D               	bcf	29,5	;volatile
  2169                           
  2170                           ;main.c: 72: ADCON0bits.CHS2 = 0;
  2171  07EA  121D               	bcf	29,4	;volatile
  2172                           
  2173                           ;main.c: 73: ADCON0bits.CHS1 = 0;
  2174  07EB  119D               	bcf	29,3	;volatile
  2175                           
  2176                           ;main.c: 74: ADCON0bits.CHS0 = 0;
  2177  07EC  111D               	bcf	29,2	;volatile
  2178                           
  2179                           ;main.c: 75: GIE = 1;
  2180  07ED  178B               	bsf	11,7	;volatile
  2181                           
  2182                           ;main.c: 76: PEIE = 1;
  2183  07EE  170B               	bsf	11,6	;volatile
  2184                           
  2185                           ;main.c: 77: ADIE = 1;
  2186  07EF  1711               	bsf	17,6	;volatile
  2187                           
  2188                           ;main.c: 78: ADIF = 0;
  2189  07F0  0020               	movlb	0	; select bank0
  2190  07F1  1311               	bcf	17,6	;volatile
  2191                           
  2192                           ;main.c: 79: TMR0IF=0;
  2193  07F2  110B               	bcf	11,2	;volatile
  2194                           
  2195                           ;main.c: 80: TMR0IE=1;
  2196  07F3  168B               	bsf	11,5	;volatile
  2197                           
  2198                           ;main.c: 81: TMR0CS = 0;
  2199  07F4  0021               	movlb	1	; select bank1
  2200  07F5  1295               	bcf	21,5	;volatile
  2201                           
  2202                           ;main.c: 82: PSA = 0;
  2203  07F6  1195               	bcf	21,3	;volatile
  2204                           
  2205                           ;main.c: 84: ADGO=1;
  2206  07F7  149D               	bsf	29,1	;volatile
  2207  07F8  0008               	return
  2208  07F9                     __end_of_initializeAsyncConversion:	
  2209                           
  2210                           	psect	text9
  2211  0FC9                     __ptext9:	
  2212 ;; *************** function _reverse *****************
  2213 ;; Defined at:
  2214 ;;		line 34 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  b               1    wreg     unsigned char 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  b               1    3[BANK1 ] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      unsigned char 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2229 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;Total ram usage:        4 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    3
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _reverse
  2244  0FC9                     _reverse:	
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _reverse: [wreg+status,2+status,0]
  2248                           ;reverse@b stored from wreg
  2249  0FC9  0021               	movlb	1	; select bank1
  2250  0FCA  00A3               	movwf	reverse@b^(0+128)
  2251                           
  2252                           ;main.c: 35: b = (b & 0xF0) >> 4 | (b & 0x0F) << 4;
  2253  0FCB  0823               	movf	reverse@b^(0+128),w
  2254  0FCC  390F               	andlw	15
  2255  0FCD  00A0               	movwf	??_reverse^(0+128)
  2256  0FCE  3004               	movlw	4
  2257  0FCF                     u1975:	
  2258  0FCF  35A0               	lslf	??_reverse^(0+128),f
  2259  0FD0  0B89               	decfsz	9,f
  2260  0FD1  2FCF               	goto	u1975
  2261  0FD2  0823               	movf	reverse@b^(0+128),w
  2262  0FD3  00A1               	movwf	(??_reverse+1)^(0+128)
  2263  0FD4  3004               	movlw	4
  2264  0FD5                     u1985:	
  2265  0FD5  36A1               	lsrf	(??_reverse+1)^(0+128),f
  2266  0FD6  0B89               	decfsz	9,f
  2267  0FD7  2FD5               	goto	u1985
  2268  0FD8  0821               	movf	(??_reverse+1)^(0+128),w
  2269  0FD9  390F               	andlw	15
  2270  0FDA  0420               	iorwf	??_reverse^(0+128),w
  2271  0FDB  00A2               	movwf	(??_reverse+2)^(0+128)
  2272  0FDC  0822               	movf	(??_reverse+2)^(0+128),w
  2273  0FDD  00A3               	movwf	reverse@b^(0+128)
  2274                           
  2275                           ;main.c: 36: b = (b & 0xCC) >> 2 | (b & 0x33) << 2;
  2276  0FDE  0823               	movf	reverse@b^(0+128),w
  2277  0FDF  3933               	andlw	51
  2278  0FE0  00A0               	movwf	??_reverse^(0+128)
  2279  0FE1  3002               	movlw	2
  2280  0FE2                     u1995:	
  2281  0FE2  35A0               	lslf	??_reverse^(0+128),f
  2282  0FE3  0B89               	decfsz	9,f
  2283  0FE4  2FE2               	goto	u1995
  2284  0FE5  0823               	movf	reverse@b^(0+128),w
  2285  0FE6  00A1               	movwf	(??_reverse+1)^(0+128)
  2286  0FE7  3002               	movlw	2
  2287  0FE8                     u2005:	
  2288  0FE8  36A1               	lsrf	(??_reverse+1)^(0+128),f
  2289  0FE9  0B89               	decfsz	9,f
  2290  0FEA  2FE8               	goto	u2005
  2291  0FEB  0821               	movf	(??_reverse+1)^(0+128),w
  2292  0FEC  3933               	andlw	51
  2293  0FED  0420               	iorwf	??_reverse^(0+128),w
  2294  0FEE  00A2               	movwf	(??_reverse+2)^(0+128)
  2295  0FEF  0822               	movf	(??_reverse+2)^(0+128),w
  2296  0FF0  00A3               	movwf	reverse@b^(0+128)
  2297                           
  2298                           ;main.c: 37: b = (b & 0xAA) >> 1 | (b & 0x55) << 1;
  2299  0FF1  0823               	movf	reverse@b^(0+128),w
  2300  0FF2  3955               	andlw	85
  2301  0FF3  00A0               	movwf	??_reverse^(0+128)
  2302  0FF4  3001               	movlw	1
  2303  0FF5                     u2015:	
  2304  0FF5  35A0               	lslf	??_reverse^(0+128),f
  2305  0FF6  0B89               	decfsz	9,f
  2306  0FF7  2FF5               	goto	u2015
  2307  0FF8  3623               	lsrf	reverse@b^(0+128),w
  2308  0FF9  3955               	andlw	85
  2309  0FFA  0420               	iorwf	??_reverse^(0+128),w
  2310  0FFB  00A1               	movwf	(??_reverse+1)^(0+128)
  2311  0FFC  0821               	movf	(??_reverse+1)^(0+128),w
  2312  0FFD  00A3               	movwf	reverse@b^(0+128)
  2313                           
  2314                           ;main.c: 38: return b;
  2315  0FFE  0823               	movf	reverse@b^(0+128),w
  2316  0FFF  0008               	return
  2317  1000                     __end_of_reverse:	
  2318                           
  2319                           	psect	intentry
  2320  0004                     __pintentry:	
  2321 ;; *************** function _interruptHandler *****************
  2322 ;; Defined at:
  2323 ;;		line 98 in file "main.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  result          3   59[BANK0 ] float 
  2328 ;;  firstDigit      1   62[BANK0 ] unsigned char 
  2329 ;;  secondDigit     1   58[BANK0 ] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2342 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2343 ;;Total ram usage:       10 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    2
  2346 ;; This function calls:
  2347 ;;		_printDigit
  2348 ;;		___ftdiv
  2349 ;;		___lbtoft
  2350 ;;		i1___ftadd
  2351 ;;		i1___ftmul
  2352 ;;		i1___ftneg
  2353 ;;		i1___fttol
  2354 ;; This function is called by:
  2355 ;;		Interrupt level 1
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359  0004                     _interruptHandler:	
  2360                           
  2361                           ;incstack = 0
  2362                           ; Regs used in _interruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2363  0004  3180               	pagesel	$
  2364  0005  0020               	movlb	0	; select bank0
  2365  0006  087F               	movf	127,w
  2366  0007  00D7               	movwf	??_interruptHandler+2
  2367                           
  2368                           ;main.c: 100: if (TMR0IE && TMR0IF) {
  2369  0008  1A8B               	btfsc	11,5	;volatile
  2370  0009  1D0B               	btfss	11,2	;volatile
  2371  000A  2873               	goto	i1l2356
  2372                           
  2373                           ;main.c: 101: currentSelection = !currentSelection;
  2374  000B  086C               	movf	_currentSelection,w
  2375  000C  3A00               	xorlw	0
  2376  000D  3000               	movlw	0
  2377  000E  1903               	skipnz
  2378  000F  3001               	movlw	1
  2379  0010  00D5               	movwf	??_interruptHandler
  2380  0011  0855               	movf	??_interruptHandler,w
  2381  0012  00EC               	movwf	_currentSelection
  2382                           
  2383                           ;main.c: 102: unsigned char firstDigit = (unsigned char) sensor;
  2384  0013  0869               	movf	_sensor,w
  2385  0014  00A0               	movwf	?i1___fttol
  2386  0015  086A               	movf	_sensor+1,w
  2387  0016  00A1               	movwf	?i1___fttol+1
  2388  0017  086B               	movf	_sensor+2,w
  2389  0018  00A2               	movwf	?i1___fttol+2
  2390  0019  3186  2647  3180   	fcall	i1___fttol
  2391  001C  0020               	movlb	0	; select bank0
  2392  001D  0820               	movf	?i1___fttol,w
  2393  001E  00D5               	movwf	??_interruptHandler
  2394  001F  0855               	movf	??_interruptHandler,w
  2395  0020  00DE               	movwf	interruptHandler@firstDigit
  2396                           
  2397                           ;main.c: 103: unsigned char secondDigit = (unsigned char) ((sensor - firstDigit) * 10);
  2398  0021  085E               	movf	interruptHandler@firstDigit,w
  2399  0022  318F  27AE  3180   	fcall	___lbtoft
  2400  0025  0020               	movlb	0	; select bank0
  2401  0026  082E               	movf	?___lbtoft,w
  2402  0027  00F8               	movwf	?i1___ftneg
  2403  0028  082F               	movf	?___lbtoft+1,w
  2404  0029  00F9               	movwf	?i1___ftneg+1
  2405  002A  0830               	movf	?___lbtoft+2,w
  2406  002B  00FA               	movwf	?i1___ftneg+2
  2407  002C  318F  275D  3180   	fcall	i1___ftneg
  2408  002F  0878               	movf	?i1___ftneg,w
  2409  0030  0020               	movlb	0	; select bank0
  2410  0031  00B8               	movwf	?i1___ftadd+3
  2411  0032  0879               	movf	?i1___ftneg+1,w
  2412  0033  00B9               	movwf	?i1___ftadd+4
  2413  0034  087A               	movf	?i1___ftneg+2,w
  2414  0035  00BA               	movwf	?i1___ftadd+5
  2415  0036  0869               	movf	_sensor,w
  2416  0037  00B5               	movwf	?i1___ftadd
  2417  0038  086A               	movf	_sensor+1,w
  2418  0039  00B6               	movwf	?i1___ftadd+1
  2419  003A  086B               	movf	_sensor+2,w
  2420  003B  00B7               	movwf	?i1___ftadd+2
  2421  003C  3181  21CB  3180   	fcall	i1___ftadd
  2422  003F  0020               	movlb	0	; select bank0
  2423  0040  0835               	movf	?i1___ftadd,w
  2424  0041  00C8               	movwf	?i1___ftmul+3
  2425  0042  0836               	movf	?i1___ftadd+1,w
  2426  0043  00C9               	movwf	?i1___ftmul+4
  2427  0044  0837               	movf	?i1___ftadd+2,w
  2428  0045  00CA               	movwf	?i1___ftmul+5
  2429  0046  3000               	movlw	0
  2430  0047  00C5               	movwf	?i1___ftmul
  2431  0048  3020               	movlw	32
  2432  0049  00C6               	movwf	?i1___ftmul+1
  2433  004A  3041               	movlw	65
  2434  004B  00C7               	movwf	?i1___ftmul+2
  2435  004C  3184  2463  3180   	fcall	i1___ftmul
  2436  004F  0020               	movlb	0	; select bank0
  2437  0050  0845               	movf	?i1___ftmul,w
  2438  0051  00A0               	movwf	?i1___fttol
  2439  0052  0846               	movf	?i1___ftmul+1,w
  2440  0053  00A1               	movwf	?i1___fttol+1
  2441  0054  0847               	movf	?i1___ftmul+2,w
  2442  0055  00A2               	movwf	?i1___fttol+2
  2443  0056  3186  2647  3180   	fcall	i1___fttol
  2444  0059  0020               	movlb	0	; select bank0
  2445  005A  0820               	movf	?i1___fttol,w
  2446  005B  00D5               	movwf	??_interruptHandler
  2447  005C  0855               	movf	??_interruptHandler,w
  2448  005D  00DA               	movwf	interruptHandler@secondDigit
  2449                           
  2450                           ;main.c: 104: printDigit(currentSelection ? secondDigit : firstDigit, currentSelection);
  2451  005E  08EC               	movf	_currentSelection,f
  2452  005F  1D03               	skipz
  2453  0060  2863               	goto	i1l2350
  2454  0061  085E               	movf	interruptHandler@firstDigit,w
  2455  0062  2864               	goto	L2
  2456  0063                     i1l2350:	
  2457  0063  085A               	movf	interruptHandler@secondDigit,w
  2458  0064                     L2:	
  2459  0064  00D5               	movwf	??_interruptHandler
  2460  0065  01D6               	clrf	??_interruptHandler+1
  2461  0066  0855               	movf	??_interruptHandler,w
  2462  0067  00D8               	movwf	_interruptHandler$226
  2463  0068  0856               	movf	??_interruptHandler+1,w
  2464  0069  00D9               	movwf	_interruptHandler$226+1
  2465  006A  086C               	movf	_currentSelection,w
  2466  006B  00D5               	movwf	??_interruptHandler
  2467  006C  0855               	movf	??_interruptHandler,w
  2468  006D  00F0               	movwf	?_printDigit
  2469  006E  0858               	movf	_interruptHandler$226,w
  2470  006F  318F  2783  3180   	fcall	_printDigit
  2471                           
  2472                           ;main.c: 105: TMR0IF = 0;
  2473  0072  110B               	bcf	11,2	;volatile
  2474  0073                     i1l2356:	
  2475                           
  2476                           ;main.c: 106: }
  2477                           ;main.c: 108: if (ADIE && ADIF) {
  2478  0073  0021               	movlb	1	; select bank1
  2479  0074  1F11               	btfss	17,6	;volatile
  2480  0075  28CF               	goto	i1l81
  2481  0076  0020               	movlb	0	; select bank0
  2482  0077  1F11               	btfss	17,6	;volatile
  2483  0078  28CF               	goto	i1l81
  2484                           
  2485                           ;main.c: 109: float result = ((ADRESH / 255.0f) * 5.0f);
  2486  0079  3000               	movlw	0
  2487  007A  00C5               	movwf	?i1___ftmul
  2488  007B  30A0               	movlw	160
  2489  007C  00C6               	movwf	?i1___ftmul+1
  2490  007D  3040               	movlw	64
  2491  007E  00C7               	movwf	?i1___ftmul+2
  2492  007F  3000               	movlw	0
  2493  0080  00B5               	movwf	?___ftdiv
  2494  0081  307F               	movlw	127
  2495  0082  00B6               	movwf	?___ftdiv+1
  2496  0083  3043               	movlw	67
  2497  0084  00B7               	movwf	?___ftdiv+2
  2498  0085  0021               	movlb	1	; select bank1
  2499  0086  081C               	movf	28,w	;volatile
  2500  0087  318F  27AE  3180   	fcall	___lbtoft
  2501  008A  0020               	movlb	0	; select bank0
  2502  008B  082E               	movf	?___lbtoft,w
  2503  008C  00B8               	movwf	?___ftdiv+3
  2504  008D  082F               	movf	?___lbtoft+1,w
  2505  008E  00B9               	movwf	?___ftdiv+4
  2506  008F  0830               	movf	?___lbtoft+2,w
  2507  0090  00BA               	movwf	?___ftdiv+5
  2508  0091  3185  2517  3180   	fcall	___ftdiv
  2509  0094  0020               	movlb	0	; select bank0
  2510  0095  0835               	movf	?___ftdiv,w
  2511  0096  00C8               	movwf	?i1___ftmul+3
  2512  0097  0836               	movf	?___ftdiv+1,w
  2513  0098  00C9               	movwf	?i1___ftmul+4
  2514  0099  0837               	movf	?___ftdiv+2,w
  2515  009A  00CA               	movwf	?i1___ftmul+5
  2516  009B  3184  2463  3180   	fcall	i1___ftmul
  2517  009E  0020               	movlb	0	; select bank0
  2518  009F  0845               	movf	?i1___ftmul,w
  2519  00A0  00DB               	movwf	interruptHandler@result
  2520  00A1  0846               	movf	?i1___ftmul+1,w
  2521  00A2  00DC               	movwf	interruptHandler@result+1
  2522  00A3  0847               	movf	?i1___ftmul+2,w
  2523  00A4  00DD               	movwf	interruptHandler@result+2
  2524                           
  2525                           ;main.c: 110: if(ADCON0bits.CHS0)
  2526  00A5  0021               	movlb	1	; select bank1
  2527  00A6  1D1D               	btfss	29,2	;volatile
  2528  00A7  28B5               	goto	i1l2366
  2529                           
  2530                           ;main.c: 111: potenciometar = result;
  2531  00A8  0020               	movlb	0	; select bank0
  2532  00A9  085B               	movf	interruptHandler@result,w
  2533  00AA  0021               	movlb	1	; select bank1
  2534  00AB  00D4               	movwf	_potenciometar^(0+128)
  2535  00AC  0020               	movlb	0	; select bank0
  2536  00AD  085C               	movf	interruptHandler@result+1,w
  2537  00AE  0021               	movlb	1	; select bank1
  2538  00AF  00D5               	movwf	(_potenciometar+1)^(0+128)
  2539  00B0  0020               	movlb	0	; select bank0
  2540  00B1  085D               	movf	interruptHandler@result+2,w
  2541  00B2  0021               	movlb	1	; select bank1
  2542  00B3  00D6               	movwf	(_potenciometar+2)^(0+128)
  2543  00B4  28BC               	goto	i1l2368
  2544  00B5                     i1l2366:	
  2545                           
  2546                           ;main.c: 112: else
  2547                           ;main.c: 113: sensor = result;
  2548  00B5  0020               	movlb	0	; select bank0
  2549  00B6  085B               	movf	interruptHandler@result,w
  2550  00B7  00E9               	movwf	_sensor
  2551  00B8  085C               	movf	interruptHandler@result+1,w
  2552  00B9  00EA               	movwf	_sensor+1
  2553  00BA  085D               	movf	interruptHandler@result+2,w
  2554  00BB  00EB               	movwf	_sensor+2
  2555  00BC                     i1l2368:	
  2556                           
  2557                           ;main.c: 114: ADCON0bits.CHS0 = !ADCON0bits.CHS0;
  2558  00BC  3000               	movlw	0
  2559  00BD  0021               	movlb	1	; select bank1
  2560  00BE  1D1D               	btfss	29,2	;volatile
  2561  00BF  3001               	movlw	1
  2562  00C0  0020               	movlb	0	; select bank0
  2563  00C1  00D5               	movwf	??_interruptHandler
  2564  00C2  0DD5               	rlf	??_interruptHandler,f
  2565  00C3  0DD5               	rlf	??_interruptHandler,f
  2566  00C4  0021               	movlb	1	; select bank1
  2567  00C5  081D               	movf	29,w	;volatile
  2568  00C6  0020               	movlb	0	; select bank0
  2569  00C7  0655               	xorwf	??_interruptHandler,w
  2570  00C8  39FB               	andlw	-5
  2571  00C9  0655               	xorwf	??_interruptHandler,w
  2572  00CA  0021               	movlb	1	; select bank1
  2573  00CB  009D               	movwf	29	;volatile
  2574                           
  2575                           ;main.c: 115: ADGO = 1;
  2576  00CC  149D               	bsf	29,1	;volatile
  2577                           
  2578                           ;main.c: 116: ADIF = 0;
  2579  00CD  0020               	movlb	0	; select bank0
  2580  00CE  1311               	bcf	17,6	;volatile
  2581  00CF                     i1l81:	
  2582  00CF  0020               	movlb	0	; select bank0
  2583  00D0  0857               	movf	??_interruptHandler+2,w
  2584  00D1  00FF               	movwf	127
  2585  00D2  0009               	retfie
  2586  00D3                     __end_of_interruptHandler:	
  2587                           
  2588                           	psect	text11
  2589  0647                     __ptext11:	
  2590 ;; *************** function i1___fttol *****************
  2591 ;; Defined at:
  2592 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  __fttol         3    0[BANK0 ] float 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  __fttol         4    9[BANK0 ] unsigned long 
  2597 ;;  __fttol         1   13[BANK0 ] unsigned char 
  2598 ;;  __fttol         1    8[BANK0 ] unsigned char 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  4    0[BANK0 ] long 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2608 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;Total ram usage:       14 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_interruptHandler
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function i1___fttol
  2623  0647                     i1___fttol:	
  2624                           
  2625                           ;incstack = 0
  2626                           ; Regs used in i1___fttol: [wreg+status,2+status,0]
  2627  0647  0020               	movlb	0	; select bank0
  2628  0648  0820               	movf	i1___fttol@f1,w
  2629  0649  00A4               	movwf	??i1___fttol
  2630  064A  0821               	movf	i1___fttol@f1+1,w
  2631  064B  00A5               	movwf	??i1___fttol+1
  2632  064C  0822               	movf	i1___fttol@f1+2,w
  2633  064D  00A6               	movwf	??i1___fttol+2
  2634  064E  1003               	clrc
  2635  064F  0D25               	rlf	??i1___fttol+1,w
  2636  0650  0D26               	rlf	??i1___fttol+2,w
  2637  0651  00A7               	movwf	??i1___fttol+3
  2638  0652  0827               	movf	??i1___fttol+3,w
  2639  0653  00AD               	movwf	i1___fttol@exp1
  2640  0654  08AD               	movf	i1___fttol@exp1,f
  2641  0655  1D03               	skipz
  2642  0656  2E60               	goto	i1l2248
  2643  0657  3000               	movlw	0
  2644  0658  00A3               	movwf	?i1___fttol+3
  2645  0659  3000               	movlw	0
  2646  065A  00A2               	movwf	?i1___fttol+2
  2647  065B  3000               	movlw	0
  2648  065C  00A1               	movwf	?i1___fttol+1
  2649  065D  3000               	movlw	0
  2650  065E  00A0               	movwf	?i1___fttol
  2651  065F  0008               	return
  2652  0660                     i1l2248:	
  2653  0660  0820               	movf	i1___fttol@f1,w
  2654  0661  00A4               	movwf	??i1___fttol
  2655  0662  0821               	movf	i1___fttol@f1+1,w
  2656  0663  00A5               	movwf	??i1___fttol+1
  2657  0664  0822               	movf	i1___fttol@f1+2,w
  2658  0665  00A6               	movwf	??i1___fttol+2
  2659  0666  3017               	movlw	23
  2660  0667                     u309_25:	
  2661  0667  36A6               	lsrf	??i1___fttol+2,f
  2662  0668  0CA5               	rrf	??i1___fttol+1,f
  2663  0669  0CA4               	rrf	??i1___fttol,f
  2664  066A  0B89               	decfsz	9,f
  2665  066B  2E67               	goto	u309_25
  2666  066C  0824               	movf	??i1___fttol,w
  2667  066D  00A7               	movwf	??i1___fttol+3
  2668  066E  0827               	movf	??i1___fttol+3,w
  2669  066F  00A8               	movwf	i1___fttol@sign1
  2670  0670  17A1               	bsf	i1___fttol@f1+1,7
  2671  0671  30FF               	movlw	255
  2672  0672  05A0               	andwf	i1___fttol@f1,f
  2673  0673  30FF               	movlw	255
  2674  0674  05A1               	andwf	i1___fttol@f1+1,f
  2675  0675  3000               	movlw	0
  2676  0676  05A2               	andwf	i1___fttol@f1+2,f
  2677  0677  0820               	movf	i1___fttol@f1,w
  2678  0678  00A9               	movwf	i1___fttol@lval
  2679  0679  0821               	movf	i1___fttol@f1+1,w
  2680  067A  00AA               	movwf	i1___fttol@lval+1
  2681  067B  0822               	movf	i1___fttol@f1+2,w
  2682  067C  00AB               	movwf	i1___fttol@lval+2
  2683  067D  01AC               	clrf	i1___fttol@lval+3
  2684  067E  308E               	movlw	142
  2685  067F  02AD               	subwf	i1___fttol@exp1,f
  2686  0680  1FAD               	btfss	i1___fttol@exp1,7
  2687  0681  2E9E               	goto	i1l2268
  2688  0682  082D               	movf	i1___fttol@exp1,w
  2689  0683  3A80               	xorlw	128
  2690  0684  3E8F               	addlw	143
  2691  0685  1803               	skipnc
  2692  0686  2E90               	goto	i1l2266
  2693  0687  3000               	movlw	0
  2694  0688  00A3               	movwf	?i1___fttol+3
  2695  0689  3000               	movlw	0
  2696  068A  00A2               	movwf	?i1___fttol+2
  2697  068B  3000               	movlw	0
  2698  068C  00A1               	movwf	?i1___fttol+1
  2699  068D  3000               	movlw	0
  2700  068E  00A0               	movwf	?i1___fttol
  2701  068F  0008               	return
  2702  0690                     i1l2266:	
  2703  0690  3001               	movlw	1
  2704  0691                     u312_25:	
  2705  0691  36AC               	lsrf	i1___fttol@lval+3,f
  2706  0692  0CAB               	rrf	i1___fttol@lval+2,f
  2707  0693  0CAA               	rrf	i1___fttol@lval+1,f
  2708  0694  0CA9               	rrf	i1___fttol@lval,f
  2709  0695  0B89               	decfsz	9,f
  2710  0696  2E91               	goto	u312_25
  2711  0697  3001               	movlw	1
  2712  0698  00A4               	movwf	??i1___fttol
  2713  0699  0824               	movf	??i1___fttol,w
  2714  069A  07AD               	addwf	i1___fttol@exp1,f
  2715  069B  1903               	btfsc	3,2
  2716  069C  2EB7               	goto	i1l2278
  2717  069D  2E90               	goto	i1l2266
  2718  069E                     i1l2268:	
  2719  069E  3018               	movlw	24
  2720  069F  022D               	subwf	i1___fttol@exp1,w
  2721  06A0  1C03               	skipc
  2722  06A1  2EB4               	goto	i1l2276
  2723  06A2  3000               	movlw	0
  2724  06A3  00A3               	movwf	?i1___fttol+3
  2725  06A4  3000               	movlw	0
  2726  06A5  00A2               	movwf	?i1___fttol+2
  2727  06A6  3000               	movlw	0
  2728  06A7  00A1               	movwf	?i1___fttol+1
  2729  06A8  3000               	movlw	0
  2730  06A9  00A0               	movwf	?i1___fttol
  2731  06AA  0008               	return
  2732  06AB                     i1l2274:	
  2733  06AB  3001               	movlw	1
  2734  06AC                     u315_25:	
  2735  06AC  35A9               	lslf	i1___fttol@lval,f
  2736  06AD  0DAA               	rlf	i1___fttol@lval+1,f
  2737  06AE  0DAB               	rlf	i1___fttol@lval+2,f
  2738  06AF  0DAC               	rlf	i1___fttol@lval+3,f
  2739  06B0  0B89               	decfsz	9,f
  2740  06B1  2EAC               	goto	u315_25
  2741  06B2  3001               	movlw	1
  2742  06B3  02AD               	subwf	i1___fttol@exp1,f
  2743  06B4                     i1l2276:	
  2744  06B4  08AD               	movf	i1___fttol@exp1,f
  2745  06B5  1D03               	skipz
  2746  06B6  2EAB               	goto	i1l2274
  2747  06B7                     i1l2278:	
  2748  06B7  0828               	movf	i1___fttol@sign1,w
  2749  06B8  1903               	btfsc	3,2
  2750  06B9  2EC5               	goto	i1l2282
  2751  06BA  09A9               	comf	i1___fttol@lval,f
  2752  06BB  09AA               	comf	i1___fttol@lval+1,f
  2753  06BC  09AB               	comf	i1___fttol@lval+2,f
  2754  06BD  09AC               	comf	i1___fttol@lval+3,f
  2755  06BE  0AA9               	incf	i1___fttol@lval,f
  2756  06BF  1903               	skipnz
  2757  06C0  0AAA               	incf	i1___fttol@lval+1,f
  2758  06C1  1903               	skipnz
  2759  06C2  0AAB               	incf	i1___fttol@lval+2,f
  2760  06C3  1903               	skipnz
  2761  06C4  0AAC               	incf	i1___fttol@lval+3,f
  2762  06C5                     i1l2282:	
  2763  06C5  082C               	movf	i1___fttol@lval+3,w
  2764  06C6  00A3               	movwf	?i1___fttol+3
  2765  06C7  082B               	movf	i1___fttol@lval+2,w
  2766  06C8  00A2               	movwf	?i1___fttol+2
  2767  06C9  082A               	movf	i1___fttol@lval+1,w
  2768  06CA  00A1               	movwf	?i1___fttol+1
  2769  06CB  0829               	movf	i1___fttol@lval,w
  2770  06CC  00A0               	movwf	?i1___fttol
  2771  06CD  0008               	return
  2772  06CE                     __end_ofi1___fttol:	
  2773                           
  2774                           	psect	text12
  2775  0F5D                     __ptext12:	
  2776 ;; *************** function i1___ftneg *****************
  2777 ;; Defined at:
  2778 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  __ftneg         3    8[COMMON] float 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  3    8[COMMON] float 
  2785 ;; Registers used:
  2786 ;;		wreg
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2792 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2796 ;;Total ram usage:        3 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_interruptHandler
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function i1___ftneg
  2807  0F5D                     i1___ftneg:	
  2808                           
  2809                           ;incstack = 0
  2810                           ; Regs used in i1___ftneg: [wreg]
  2811  0F5D  087A               	movf	i1___ftneg@f1+2,w
  2812  0F5E  0479               	iorwf	i1___ftneg@f1+1,w
  2813  0F5F  0478               	iorwf	i1___ftneg@f1,w
  2814  0F60  1903               	skipnz
  2815  0F61  0008               	return
  2816  0F62  3080               	movlw	128
  2817  0F63  06FA               	xorwf	i1___ftneg@f1+2,f
  2818  0F64  0008               	return
  2819  0F65                     __end_ofi1___ftneg:	
  2820                           
  2821                           	psect	text13
  2822  0463                     __ptext13:	
  2823 ;; *************** function i1___ftmul *****************
  2824 ;; Defined at:
  2825 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  __ftmul         3   37[BANK0 ] float 
  2828 ;;  __ftmul         3   40[BANK0 ] float 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  __ftmul         3   48[BANK0 ] unsigned um
  2831 ;;  __ftmul         1   52[BANK0 ] unsigned char 
  2832 ;;  __ftmul         1   51[BANK0 ] unsigned char 
  2833 ;;  __ftmul         1   47[BANK0 ] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  3   37[BANK0 ] float 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:       16 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    1
  2850 ;; This function calls:
  2851 ;;		i1___ftpack
  2852 ;; This function is called by:
  2853 ;;		_interruptHandler
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function i1___ftmul
  2859  0463                     i1___ftmul:	
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2863  0463  0020               	movlb	0	; select bank0
  2864  0464  0845               	movf	i1___ftmul@f1,w
  2865  0465  00CB               	movwf	??i1___ftmul
  2866  0466  0846               	movf	i1___ftmul@f1+1,w
  2867  0467  00CC               	movwf	??i1___ftmul+1
  2868  0468  0847               	movf	i1___ftmul@f1+2,w
  2869  0469  00CD               	movwf	??i1___ftmul+2
  2870  046A  1003               	clrc
  2871  046B  0D4C               	rlf	??i1___ftmul+1,w
  2872  046C  0D4D               	rlf	??i1___ftmul+2,w
  2873  046D  00CE               	movwf	??i1___ftmul+3
  2874  046E  084E               	movf	??i1___ftmul+3,w
  2875  046F  00CF               	movwf	i1___ftmul@exp
  2876  0470  08CF               	movf	i1___ftmul@exp,f
  2877  0471  1D03               	skipz
  2878  0472  2C7A               	goto	i1l2292
  2879  0473  3000               	movlw	0
  2880  0474  00C5               	movwf	?i1___ftmul
  2881  0475  3000               	movlw	0
  2882  0476  00C6               	movwf	?i1___ftmul+1
  2883  0477  3000               	movlw	0
  2884  0478  00C7               	movwf	?i1___ftmul+2
  2885  0479  0008               	return
  2886  047A                     i1l2292:	
  2887  047A  0848               	movf	i1___ftmul@f2,w
  2888  047B  00CB               	movwf	??i1___ftmul
  2889  047C  0849               	movf	i1___ftmul@f2+1,w
  2890  047D  00CC               	movwf	??i1___ftmul+1
  2891  047E  084A               	movf	i1___ftmul@f2+2,w
  2892  047F  00CD               	movwf	??i1___ftmul+2
  2893  0480  1003               	clrc
  2894  0481  0D4C               	rlf	??i1___ftmul+1,w
  2895  0482  0D4D               	rlf	??i1___ftmul+2,w
  2896  0483  00CE               	movwf	??i1___ftmul+3
  2897  0484  084E               	movf	??i1___ftmul+3,w
  2898  0485  00D4               	movwf	i1___ftmul@sign
  2899  0486  08D4               	movf	i1___ftmul@sign,f
  2900  0487  1D03               	skipz
  2901  0488  2C90               	goto	i1l2298
  2902  0489  3000               	movlw	0
  2903  048A  00C5               	movwf	?i1___ftmul
  2904  048B  3000               	movlw	0
  2905  048C  00C6               	movwf	?i1___ftmul+1
  2906  048D  3000               	movlw	0
  2907  048E  00C7               	movwf	?i1___ftmul+2
  2908  048F  0008               	return
  2909  0490                     i1l2298:	
  2910  0490  0854               	movf	i1___ftmul@sign,w
  2911  0491  3E7B               	addlw	123
  2912  0492  00CB               	movwf	??i1___ftmul
  2913  0493  084B               	movf	??i1___ftmul,w
  2914  0494  07CF               	addwf	i1___ftmul@exp,f
  2915  0495  0845               	movf	i1___ftmul@f1,w
  2916  0496  00CB               	movwf	??i1___ftmul
  2917  0497  0846               	movf	i1___ftmul@f1+1,w
  2918  0498  00CC               	movwf	??i1___ftmul+1
  2919  0499  0847               	movf	i1___ftmul@f1+2,w
  2920  049A  00CD               	movwf	??i1___ftmul+2
  2921  049B  3010               	movlw	16
  2922  049C                     u320_25:	
  2923  049C  36CD               	lsrf	??i1___ftmul+2,f
  2924  049D  0CCC               	rrf	??i1___ftmul+1,f
  2925  049E  0CCB               	rrf	??i1___ftmul,f
  2926  049F  0B89               	decfsz	9,f
  2927  04A0  2C9C               	goto	u320_25
  2928  04A1  084B               	movf	??i1___ftmul,w
  2929  04A2  00CE               	movwf	??i1___ftmul+3
  2930  04A3  084E               	movf	??i1___ftmul+3,w
  2931  04A4  00D4               	movwf	i1___ftmul@sign
  2932  04A5  0848               	movf	i1___ftmul@f2,w
  2933  04A6  00CB               	movwf	??i1___ftmul
  2934  04A7  0849               	movf	i1___ftmul@f2+1,w
  2935  04A8  00CC               	movwf	??i1___ftmul+1
  2936  04A9  084A               	movf	i1___ftmul@f2+2,w
  2937  04AA  00CD               	movwf	??i1___ftmul+2
  2938  04AB  3010               	movlw	16
  2939  04AC                     u321_25:	
  2940  04AC  36CD               	lsrf	??i1___ftmul+2,f
  2941  04AD  0CCC               	rrf	??i1___ftmul+1,f
  2942  04AE  0CCB               	rrf	??i1___ftmul,f
  2943  04AF  0B89               	decfsz	9,f
  2944  04B0  2CAC               	goto	u321_25
  2945  04B1  084B               	movf	??i1___ftmul,w
  2946  04B2  00CE               	movwf	??i1___ftmul+3
  2947  04B3  084E               	movf	??i1___ftmul+3,w
  2948  04B4  06D4               	xorwf	i1___ftmul@sign,f
  2949  04B5  3080               	movlw	128
  2950  04B6  00CB               	movwf	??i1___ftmul
  2951  04B7  084B               	movf	??i1___ftmul,w
  2952  04B8  05D4               	andwf	i1___ftmul@sign,f
  2953  04B9  17C6               	bsf	i1___ftmul@f1+1,7
  2954  04BA  17C9               	bsf	i1___ftmul@f2+1,7
  2955  04BB  30FF               	movlw	255
  2956  04BC  05C8               	andwf	i1___ftmul@f2,f
  2957  04BD  30FF               	movlw	255
  2958  04BE  05C9               	andwf	i1___ftmul@f2+1,f
  2959  04BF  3000               	movlw	0
  2960  04C0  05CA               	andwf	i1___ftmul@f2+2,f
  2961  04C1  3000               	movlw	0
  2962  04C2  00D0               	movwf	i1___ftmul@f3_as_product
  2963  04C3  3000               	movlw	0
  2964  04C4  00D1               	movwf	i1___ftmul@f3_as_product+1
  2965  04C5  3000               	movlw	0
  2966  04C6  00D2               	movwf	i1___ftmul@f3_as_product+2
  2967  04C7  3007               	movlw	7
  2968  04C8  00CB               	movwf	??i1___ftmul
  2969  04C9  084B               	movf	??i1___ftmul,w
  2970  04CA  00D3               	movwf	i1___ftmul@cntr
  2971  04CB                     i1l2310:	
  2972  04CB  1C45               	btfss	i1___ftmul@f1,0
  2973  04CC  2CD3               	goto	i1l2314
  2974  04CD  0848               	movf	i1___ftmul@f2,w
  2975  04CE  07D0               	addwf	i1___ftmul@f3_as_product,f
  2976  04CF  0849               	movf	i1___ftmul@f2+1,w
  2977  04D0  3DD1               	addwfc	i1___ftmul@f3_as_product+1,f
  2978  04D1  084A               	movf	i1___ftmul@f2+2,w
  2979  04D2  3DD2               	addwfc	i1___ftmul@f3_as_product+2,f
  2980  04D3                     i1l2314:	
  2981  04D3  3001               	movlw	1
  2982  04D4                     u323_25:	
  2983  04D4  36C7               	lsrf	i1___ftmul@f1+2,f
  2984  04D5  0CC6               	rrf	i1___ftmul@f1+1,f
  2985  04D6  0CC5               	rrf	i1___ftmul@f1,f
  2986  04D7  0B89               	decfsz	9,f
  2987  04D8  2CD4               	goto	u323_25
  2988  04D9  3001               	movlw	1
  2989  04DA                     u324_25:	
  2990  04DA  35C8               	lslf	i1___ftmul@f2,f
  2991  04DB  0DC9               	rlf	i1___ftmul@f2+1,f
  2992  04DC  0DCA               	rlf	i1___ftmul@f2+2,f
  2993  04DD  0B89               	decfsz	9,f
  2994  04DE  2CDA               	goto	u324_25
  2995  04DF  3001               	movlw	1
  2996  04E0  02D3               	subwf	i1___ftmul@cntr,f
  2997  04E1  1D03               	btfss	3,2
  2998  04E2  2CCB               	goto	i1l2310
  2999  04E3  3009               	movlw	9
  3000  04E4  00CB               	movwf	??i1___ftmul
  3001  04E5  084B               	movf	??i1___ftmul,w
  3002  04E6  00D3               	movwf	i1___ftmul@cntr
  3003  04E7                     i1l2322:	
  3004  04E7  1C45               	btfss	i1___ftmul@f1,0
  3005  04E8  2CEF               	goto	i1l2326
  3006  04E9  0848               	movf	i1___ftmul@f2,w
  3007  04EA  07D0               	addwf	i1___ftmul@f3_as_product,f
  3008  04EB  0849               	movf	i1___ftmul@f2+1,w
  3009  04EC  3DD1               	addwfc	i1___ftmul@f3_as_product+1,f
  3010  04ED  084A               	movf	i1___ftmul@f2+2,w
  3011  04EE  3DD2               	addwfc	i1___ftmul@f3_as_product+2,f
  3012  04EF                     i1l2326:	
  3013  04EF  3001               	movlw	1
  3014  04F0                     u327_25:	
  3015  04F0  36C7               	lsrf	i1___ftmul@f1+2,f
  3016  04F1  0CC6               	rrf	i1___ftmul@f1+1,f
  3017  04F2  0CC5               	rrf	i1___ftmul@f1,f
  3018  04F3  0B89               	decfsz	9,f
  3019  04F4  2CF0               	goto	u327_25
  3020  04F5  3001               	movlw	1
  3021  04F6                     u328_25:	
  3022  04F6  36D2               	lsrf	i1___ftmul@f3_as_product+2,f
  3023  04F7  0CD1               	rrf	i1___ftmul@f3_as_product+1,f
  3024  04F8  0CD0               	rrf	i1___ftmul@f3_as_product,f
  3025  04F9  0B89               	decfsz	9,f
  3026  04FA  2CF6               	goto	u328_25
  3027  04FB  3001               	movlw	1
  3028  04FC  02D3               	subwf	i1___ftmul@cntr,f
  3029  04FD  1D03               	btfss	3,2
  3030  04FE  2CE7               	goto	i1l2322
  3031  04FF  0850               	movf	i1___ftmul@f3_as_product,w
  3032  0500  00F0               	movwf	?i1___ftpack
  3033  0501  0851               	movf	i1___ftmul@f3_as_product+1,w
  3034  0502  00F1               	movwf	?i1___ftpack+1
  3035  0503  0852               	movf	i1___ftmul@f3_as_product+2,w
  3036  0504  00F2               	movwf	?i1___ftpack+2
  3037  0505  084F               	movf	i1___ftmul@exp,w
  3038  0506  00CB               	movwf	??i1___ftmul
  3039  0507  084B               	movf	??i1___ftmul,w
  3040  0508  00F3               	movwf	?i1___ftpack+3
  3041  0509  0854               	movf	i1___ftmul@sign,w
  3042  050A  00CC               	movwf	??i1___ftmul+1
  3043  050B  084C               	movf	??i1___ftmul+1,w
  3044  050C  00F4               	movwf	?i1___ftpack+4
  3045  050D  3187  272F         	fcall	i1___ftpack
  3046  050F  0870               	movf	?i1___ftpack,w
  3047  0510  0020               	movlb	0	; select bank0
  3048  0511  00C5               	movwf	?i1___ftmul
  3049  0512  0871               	movf	?i1___ftpack+1,w
  3050  0513  00C6               	movwf	?i1___ftmul+1
  3051  0514  0872               	movf	?i1___ftpack+2,w
  3052  0515  00C7               	movwf	?i1___ftmul+2
  3053  0516  0008               	return
  3054  0517                     __end_ofi1___ftmul:	
  3055                           
  3056                           	psect	text14
  3057  01CB                     __ptext14:	
  3058 ;; *************** function i1___ftadd *****************
  3059 ;; Defined at:
  3060 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  __ftadd         3   21[BANK0 ] float 
  3063 ;;  __ftadd         3   24[BANK0 ] float 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  __ftadd         1   33[BANK0 ] unsigned char 
  3066 ;;  __ftadd         1   32[BANK0 ] unsigned char 
  3067 ;;  __ftadd         1   31[BANK0 ] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  3   21[BANK0 ] float 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3077 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3081 ;;Total ram usage:       13 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    1
  3084 ;; This function calls:
  3085 ;;		i1___ftpack
  3086 ;; This function is called by:
  3087 ;;		_interruptHandler
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function i1___ftadd
  3093  01CB                     i1___ftadd:	
  3094                           
  3095                           ;incstack = 0
  3096                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3097  01CB  0020               	movlb	0	; select bank0
  3098  01CC  0835               	movf	i1___ftadd@f1,w
  3099  01CD  00BB               	movwf	??i1___ftadd
  3100  01CE  0836               	movf	i1___ftadd@f1+1,w
  3101  01CF  00BC               	movwf	??i1___ftadd+1
  3102  01D0  0837               	movf	i1___ftadd@f1+2,w
  3103  01D1  00BD               	movwf	??i1___ftadd+2
  3104  01D2  1003               	clrc
  3105  01D3  0D3C               	rlf	??i1___ftadd+1,w
  3106  01D4  0D3D               	rlf	??i1___ftadd+2,w
  3107  01D5  00BE               	movwf	??i1___ftadd+3
  3108  01D6  083E               	movf	??i1___ftadd+3,w
  3109  01D7  00C1               	movwf	i1___ftadd@exp1
  3110  01D8  0838               	movf	i1___ftadd@f2,w
  3111  01D9  00BB               	movwf	??i1___ftadd
  3112  01DA  0839               	movf	i1___ftadd@f2+1,w
  3113  01DB  00BC               	movwf	??i1___ftadd+1
  3114  01DC  083A               	movf	i1___ftadd@f2+2,w
  3115  01DD  00BD               	movwf	??i1___ftadd+2
  3116  01DE  1003               	clrc
  3117  01DF  0D3C               	rlf	??i1___ftadd+1,w
  3118  01E0  0D3D               	rlf	??i1___ftadd+2,w
  3119  01E1  00BE               	movwf	??i1___ftadd+3
  3120  01E2  083E               	movf	??i1___ftadd+3,w
  3121  01E3  00C0               	movwf	i1___ftadd@exp2
  3122  01E4  0841               	movf	i1___ftadd@exp1,w
  3123  01E5  1903               	btfsc	3,2
  3124  01E6  29F3               	goto	i1l2178
  3125  01E7  0840               	movf	i1___ftadd@exp2,w
  3126  01E8  0241               	subwf	i1___ftadd@exp1,w
  3127  01E9  1803               	skipnc
  3128  01EA  29FA               	goto	i1l2182
  3129  01EB  0341               	decf	i1___ftadd@exp1,w
  3130  01EC  3AFF               	xorlw	255
  3131  01ED  0740               	addwf	i1___ftadd@exp2,w
  3132  01EE  00BB               	movwf	??i1___ftadd
  3133  01EF  3019               	movlw	25
  3134  01F0  023B               	subwf	??i1___ftadd,w
  3135  01F1  1C03               	skipc
  3136  01F2  29FA               	goto	i1l2182
  3137  01F3                     i1l2178:	
  3138  01F3  0838               	movf	i1___ftadd@f2,w
  3139  01F4  00B5               	movwf	?i1___ftadd
  3140  01F5  0839               	movf	i1___ftadd@f2+1,w
  3141  01F6  00B6               	movwf	?i1___ftadd+1
  3142  01F7  083A               	movf	i1___ftadd@f2+2,w
  3143  01F8  00B7               	movwf	?i1___ftadd+2
  3144  01F9  0008               	return
  3145  01FA                     i1l2182:	
  3146  01FA  0840               	movf	i1___ftadd@exp2,w
  3147  01FB  1903               	btfsc	3,2
  3148  01FC  0008               	return
  3149  01FD  0841               	movf	i1___ftadd@exp1,w
  3150  01FE  0240               	subwf	i1___ftadd@exp2,w
  3151  01FF  1803               	skipnc
  3152  0200  2A09               	goto	i1l2188
  3153  0201  0340               	decf	i1___ftadd@exp2,w
  3154  0202  3AFF               	xorlw	255
  3155  0203  0741               	addwf	i1___ftadd@exp1,w
  3156  0204  00BB               	movwf	??i1___ftadd
  3157  0205  3019               	movlw	25
  3158  0206  023B               	subwf	??i1___ftadd,w
  3159  0207  1803               	btfsc	3,0
  3160  0208  0008               	return
  3161  0209                     i1l2188:	
  3162  0209  3006               	movlw	6
  3163  020A  00BB               	movwf	??i1___ftadd
  3164  020B  083B               	movf	??i1___ftadd,w
  3165  020C  00BF               	movwf	i1___ftadd@sign
  3166  020D  1BB7               	btfsc	i1___ftadd@f1+2,7
  3167  020E  17BF               	bsf	i1___ftadd@sign,7
  3168  020F  1BBA               	btfsc	i1___ftadd@f2+2,7
  3169  0210  173F               	bsf	i1___ftadd@sign,6
  3170  0211  17B6               	bsf	i1___ftadd@f1+1,7
  3171  0212  30FF               	movlw	255
  3172  0213  05B5               	andwf	i1___ftadd@f1,f
  3173  0214  30FF               	movlw	255
  3174  0215  05B6               	andwf	i1___ftadd@f1+1,f
  3175  0216  3000               	movlw	0
  3176  0217  05B7               	andwf	i1___ftadd@f1+2,f
  3177  0218  17B9               	bsf	i1___ftadd@f2+1,7
  3178  0219  30FF               	movlw	255
  3179  021A  05B8               	andwf	i1___ftadd@f2,f
  3180  021B  30FF               	movlw	255
  3181  021C  05B9               	andwf	i1___ftadd@f2+1,f
  3182  021D  3000               	movlw	0
  3183  021E  05BA               	andwf	i1___ftadd@f2+2,f
  3184  021F  0840               	movf	i1___ftadd@exp2,w
  3185  0220  0241               	subwf	i1___ftadd@exp1,w
  3186  0221  1803               	skipnc
  3187  0222  2A45               	goto	i1l2210
  3188  0223                     i1l2200:	
  3189  0223  3001               	movlw	1
  3190  0224                     u294_25:	
  3191  0224  35B8               	lslf	i1___ftadd@f2,f
  3192  0225  0DB9               	rlf	i1___ftadd@f2+1,f
  3193  0226  0DBA               	rlf	i1___ftadd@f2+2,f
  3194  0227  0B89               	decfsz	9,f
  3195  0228  2A24               	goto	u294_25
  3196  0229  3001               	movlw	1
  3197  022A  02C0               	subwf	i1___ftadd@exp2,f
  3198  022B  0840               	movf	i1___ftadd@exp2,w
  3199  022C  0641               	xorwf	i1___ftadd@exp1,w
  3200  022D  1903               	skipnz
  3201  022E  2A40               	goto	i1l2208
  3202  022F  3001               	movlw	1
  3203  0230  02BF               	subwf	i1___ftadd@sign,f
  3204  0231  083F               	movf	i1___ftadd@sign,w
  3205  0232  3907               	andlw	7
  3206  0233  1903               	btfsc	3,2
  3207  0234  2A40               	goto	i1l2208
  3208  0235  2A23               	goto	i1l2200
  3209  0236                     i1l2206:	
  3210  0236  3001               	movlw	1
  3211  0237                     u297_25:	
  3212  0237  36B7               	lsrf	i1___ftadd@f1+2,f
  3213  0238  0CB6               	rrf	i1___ftadd@f1+1,f
  3214  0239  0CB5               	rrf	i1___ftadd@f1,f
  3215  023A  0B89               	decfsz	9,f
  3216  023B  2A37               	goto	u297_25
  3217  023C  3001               	movlw	1
  3218  023D  00BB               	movwf	??i1___ftadd
  3219  023E  083B               	movf	??i1___ftadd,w
  3220  023F  07C1               	addwf	i1___ftadd@exp1,f
  3221  0240                     i1l2208:	
  3222  0240  0841               	movf	i1___ftadd@exp1,w
  3223  0241  0640               	xorwf	i1___ftadd@exp2,w
  3224  0242  1903               	btfsc	3,2
  3225  0243  2A6A               	goto	i1l345
  3226  0244  2A36               	goto	i1l2206
  3227  0245                     i1l2210:	
  3228  0245  0841               	movf	i1___ftadd@exp1,w
  3229  0246  0240               	subwf	i1___ftadd@exp2,w
  3230  0247  1803               	skipnc
  3231  0248  2A6A               	goto	i1l345
  3232  0249                     i1l2212:	
  3233  0249  3001               	movlw	1
  3234  024A                     u300_25:	
  3235  024A  35B5               	lslf	i1___ftadd@f1,f
  3236  024B  0DB6               	rlf	i1___ftadd@f1+1,f
  3237  024C  0DB7               	rlf	i1___ftadd@f1+2,f
  3238  024D  0B89               	decfsz	9,f
  3239  024E  2A4A               	goto	u300_25
  3240  024F  3001               	movlw	1
  3241  0250  02C1               	subwf	i1___ftadd@exp1,f
  3242  0251  0840               	movf	i1___ftadd@exp2,w
  3243  0252  0641               	xorwf	i1___ftadd@exp1,w
  3244  0253  1903               	skipnz
  3245  0254  2A66               	goto	i1l2220
  3246  0255  3001               	movlw	1
  3247  0256  02BF               	subwf	i1___ftadd@sign,f
  3248  0257  083F               	movf	i1___ftadd@sign,w
  3249  0258  3907               	andlw	7
  3250  0259  1903               	btfsc	3,2
  3251  025A  2A66               	goto	i1l2220
  3252  025B  2A49               	goto	i1l2212
  3253  025C                     i1l2218:	
  3254  025C  3001               	movlw	1
  3255  025D                     u303_25:	
  3256  025D  36BA               	lsrf	i1___ftadd@f2+2,f
  3257  025E  0CB9               	rrf	i1___ftadd@f2+1,f
  3258  025F  0CB8               	rrf	i1___ftadd@f2,f
  3259  0260  0B89               	decfsz	9,f
  3260  0261  2A5D               	goto	u303_25
  3261  0262  3001               	movlw	1
  3262  0263  00BB               	movwf	??i1___ftadd
  3263  0264  083B               	movf	??i1___ftadd,w
  3264  0265  07C0               	addwf	i1___ftadd@exp2,f
  3265  0266                     i1l2220:	
  3266  0266  0841               	movf	i1___ftadd@exp1,w
  3267  0267  0640               	xorwf	i1___ftadd@exp2,w
  3268  0268  1D03               	skipz
  3269  0269  2A5C               	goto	i1l2218
  3270  026A                     i1l345:	
  3271  026A  1FBF               	btfss	i1___ftadd@sign,7
  3272  026B  2A7C               	goto	i1l2224
  3273  026C  30FF               	movlw	255
  3274  026D  06B5               	xorwf	i1___ftadd@f1,f
  3275  026E  30FF               	movlw	255
  3276  026F  06B6               	xorwf	i1___ftadd@f1+1,f
  3277  0270  30FF               	movlw	255
  3278  0271  06B7               	xorwf	i1___ftadd@f1+2,f
  3279  0272  3001               	movlw	1
  3280  0273  07B5               	addwf	i1___ftadd@f1,f
  3281  0274  3000               	movlw	0
  3282  0275  1803               	skipnc
  3283  0276  3001               	movlw	1
  3284  0277  07B6               	addwf	i1___ftadd@f1+1,f
  3285  0278  3000               	movlw	0
  3286  0279  1803               	skipnc
  3287  027A  3001               	movlw	1
  3288  027B  07B7               	addwf	i1___ftadd@f1+2,f
  3289  027C                     i1l2224:	
  3290  027C  1F3F               	btfss	i1___ftadd@sign,6
  3291  027D  2A8E               	goto	i1l2228
  3292  027E  30FF               	movlw	255
  3293  027F  06B8               	xorwf	i1___ftadd@f2,f
  3294  0280  30FF               	movlw	255
  3295  0281  06B9               	xorwf	i1___ftadd@f2+1,f
  3296  0282  30FF               	movlw	255
  3297  0283  06BA               	xorwf	i1___ftadd@f2+2,f
  3298  0284  3001               	movlw	1
  3299  0285  07B8               	addwf	i1___ftadd@f2,f
  3300  0286  3000               	movlw	0
  3301  0287  1803               	skipnc
  3302  0288  3001               	movlw	1
  3303  0289  07B9               	addwf	i1___ftadd@f2+1,f
  3304  028A  3000               	movlw	0
  3305  028B  1803               	skipnc
  3306  028C  3001               	movlw	1
  3307  028D  07BA               	addwf	i1___ftadd@f2+2,f
  3308  028E                     i1l2228:	
  3309  028E  01BF               	clrf	i1___ftadd@sign
  3310  028F  0835               	movf	i1___ftadd@f1,w
  3311  0290  07B8               	addwf	i1___ftadd@f2,f
  3312  0291  0836               	movf	i1___ftadd@f1+1,w
  3313  0292  3DB9               	addwfc	i1___ftadd@f2+1,f
  3314  0293  0837               	movf	i1___ftadd@f1+2,w
  3315  0294  3DBA               	addwfc	i1___ftadd@f2+2,f
  3316  0295  1FBA               	btfss	i1___ftadd@f2+2,7
  3317  0296  2AA9               	goto	i1l2238
  3318  0297  30FF               	movlw	255
  3319  0298  06B8               	xorwf	i1___ftadd@f2,f
  3320  0299  30FF               	movlw	255
  3321  029A  06B9               	xorwf	i1___ftadd@f2+1,f
  3322  029B  30FF               	movlw	255
  3323  029C  06BA               	xorwf	i1___ftadd@f2+2,f
  3324  029D  3001               	movlw	1
  3325  029E  07B8               	addwf	i1___ftadd@f2,f
  3326  029F  3000               	movlw	0
  3327  02A0  1803               	skipnc
  3328  02A1  3001               	movlw	1
  3329  02A2  07B9               	addwf	i1___ftadd@f2+1,f
  3330  02A3  3000               	movlw	0
  3331  02A4  1803               	skipnc
  3332  02A5  3001               	movlw	1
  3333  02A6  07BA               	addwf	i1___ftadd@f2+2,f
  3334  02A7  01BF               	clrf	i1___ftadd@sign
  3335  02A8  0ABF               	incf	i1___ftadd@sign,f
  3336  02A9                     i1l2238:	
  3337  02A9  0838               	movf	i1___ftadd@f2,w
  3338  02AA  00F0               	movwf	?i1___ftpack
  3339  02AB  0839               	movf	i1___ftadd@f2+1,w
  3340  02AC  00F1               	movwf	?i1___ftpack+1
  3341  02AD  083A               	movf	i1___ftadd@f2+2,w
  3342  02AE  00F2               	movwf	?i1___ftpack+2
  3343  02AF  0841               	movf	i1___ftadd@exp1,w
  3344  02B0  00BB               	movwf	??i1___ftadd
  3345  02B1  083B               	movf	??i1___ftadd,w
  3346  02B2  00F3               	movwf	?i1___ftpack+3
  3347  02B3  083F               	movf	i1___ftadd@sign,w
  3348  02B4  00BC               	movwf	??i1___ftadd+1
  3349  02B5  083C               	movf	??i1___ftadd+1,w
  3350  02B6  00F4               	movwf	?i1___ftpack+4
  3351  02B7  3187  272F         	fcall	i1___ftpack
  3352  02B9  0870               	movf	?i1___ftpack,w
  3353  02BA  0020               	movlb	0	; select bank0
  3354  02BB  00B5               	movwf	?i1___ftadd
  3355  02BC  0871               	movf	?i1___ftpack+1,w
  3356  02BD  00B6               	movwf	?i1___ftadd+1
  3357  02BE  0872               	movf	?i1___ftpack+2,w
  3358  02BF  00B7               	movwf	?i1___ftadd+2
  3359  02C0  0008               	return
  3360  02C1                     __end_ofi1___ftadd:	
  3361                           
  3362                           	psect	text15
  3363  072F                     __ptext15:	
  3364 ;; *************** function i1___ftpack *****************
  3365 ;; Defined at:
  3366 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  __ftpack        3    0[COMMON] unsigned um
  3369 ;;  __ftpack        1    3[COMMON] unsigned char 
  3370 ;;  __ftpack        1    4[COMMON] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  3    0[COMMON] float 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3382 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;Total ram usage:        8 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		___ftdiv
  3392 ;;		___lbtoft
  3393 ;;		i1___ftadd
  3394 ;;		i1___ftmul
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function i1___ftpack
  3400  072F                     i1___ftpack:	
  3401                           
  3402                           ;incstack = 0
  3403                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  3404  072F  0873               	movf	i1___ftpack@exp,w
  3405  0730  1903               	btfsc	3,2
  3406  0731  2F37               	goto	i1l2090
  3407  0732  0872               	movf	i1___ftpack@arg+2,w
  3408  0733  0471               	iorwf	i1___ftpack@arg+1,w
  3409  0734  0470               	iorwf	i1___ftpack@arg,w
  3410  0735  1D03               	skipz
  3411  0736  2F48               	goto	i1l2096
  3412  0737                     i1l2090:	
  3413  0737  3000               	movlw	0
  3414  0738  00F0               	movwf	?i1___ftpack
  3415  0739  3000               	movlw	0
  3416  073A  00F1               	movwf	?i1___ftpack+1
  3417  073B  3000               	movlw	0
  3418  073C  00F2               	movwf	?i1___ftpack+2
  3419  073D  0008               	return
  3420  073E                     i1l2094:	
  3421  073E  3001               	movlw	1
  3422  073F  00F5               	movwf	??i1___ftpack
  3423  0740  0875               	movf	??i1___ftpack,w
  3424  0741  07F3               	addwf	i1___ftpack@exp,f
  3425  0742  3001               	movlw	1
  3426  0743                     u267_25:	
  3427  0743  36F2               	lsrf	i1___ftpack@arg+2,f
  3428  0744  0CF1               	rrf	i1___ftpack@arg+1,f
  3429  0745  0CF0               	rrf	i1___ftpack@arg,f
  3430  0746  0B89               	decfsz	9,f
  3431  0747  2F43               	goto	u267_25
  3432  0748                     i1l2096:	
  3433  0748  30FE               	movlw	254
  3434  0749  0572               	andwf	i1___ftpack@arg+2,w
  3435  074A  1903               	btfsc	3,2
  3436  074B  2F61               	goto	i1l316
  3437  074C  2F3E               	goto	i1l2094
  3438  074D                     i1l2098:	
  3439  074D  3001               	movlw	1
  3440  074E  00F5               	movwf	??i1___ftpack
  3441  074F  0875               	movf	??i1___ftpack,w
  3442  0750  07F3               	addwf	i1___ftpack@exp,f
  3443  0751  3001               	movlw	1
  3444  0752  07F0               	addwf	i1___ftpack@arg,f
  3445  0753  3000               	movlw	0
  3446  0754  1803               	skipnc
  3447  0755  3001               	movlw	1
  3448  0756  07F1               	addwf	i1___ftpack@arg+1,f
  3449  0757  3000               	movlw	0
  3450  0758  1803               	skipnc
  3451  0759  3001               	movlw	1
  3452  075A  07F2               	addwf	i1___ftpack@arg+2,f
  3453  075B  3001               	movlw	1
  3454  075C                     u269_25:	
  3455  075C  36F2               	lsrf	i1___ftpack@arg+2,f
  3456  075D  0CF1               	rrf	i1___ftpack@arg+1,f
  3457  075E  0CF0               	rrf	i1___ftpack@arg,f
  3458  075F  0B89               	decfsz	9,f
  3459  0760  2F5C               	goto	u269_25
  3460  0761                     i1l316:	
  3461  0761  30FF               	movlw	255
  3462  0762  0572               	andwf	i1___ftpack@arg+2,w
  3463  0763  1903               	btfsc	3,2
  3464  0764  2F6E               	goto	i1l2106
  3465  0765  2F4D               	goto	i1l2098
  3466  0766                     i1l2104:	
  3467  0766  3001               	movlw	1
  3468  0767  02F3               	subwf	i1___ftpack@exp,f
  3469  0768  3001               	movlw	1
  3470  0769                     u271_25:	
  3471  0769  35F0               	lslf	i1___ftpack@arg,f
  3472  076A  0DF1               	rlf	i1___ftpack@arg+1,f
  3473  076B  0DF2               	rlf	i1___ftpack@arg+2,f
  3474  076C  0B89               	decfsz	9,f
  3475  076D  2F69               	goto	u271_25
  3476  076E                     i1l2106:	
  3477  076E  1FF1               	btfss	i1___ftpack@arg+1,7
  3478  076F  2F66               	goto	i1l2104
  3479  0770  1873               	btfsc	i1___ftpack@exp,0
  3480  0771  2F78               	goto	i1l322
  3481  0772  30FF               	movlw	255
  3482  0773  05F0               	andwf	i1___ftpack@arg,f
  3483  0774  307F               	movlw	127
  3484  0775  05F1               	andwf	i1___ftpack@arg+1,f
  3485  0776  30FF               	movlw	255
  3486  0777  05F2               	andwf	i1___ftpack@arg+2,f
  3487  0778                     i1l322:	
  3488  0778  1003               	clrc
  3489  0779  0CF3               	rrf	i1___ftpack@exp,f
  3490  077A  0873               	movf	i1___ftpack@exp,w
  3491  077B  00F5               	movwf	??i1___ftpack
  3492  077C  01F6               	clrf	??i1___ftpack+1
  3493  077D  01F7               	clrf	??i1___ftpack+2
  3494  077E  3010               	movlw	16
  3495  077F                     u274_25:	
  3496  077F  35F5               	lslf	??i1___ftpack,f
  3497  0780  0DF6               	rlf	??i1___ftpack+1,f
  3498  0781  0DF7               	rlf	??i1___ftpack+2,f
  3499  0782  0B89               	decfsz	9,f
  3500  0783  2F7F               	goto	u274_25
  3501  0784  0875               	movf	??i1___ftpack,w
  3502  0785  04F0               	iorwf	i1___ftpack@arg,f
  3503  0786  0876               	movf	??i1___ftpack+1,w
  3504  0787  04F1               	iorwf	i1___ftpack@arg+1,f
  3505  0788  0877               	movf	??i1___ftpack+2,w
  3506  0789  04F2               	iorwf	i1___ftpack@arg+2,f
  3507  078A  0874               	movf	i1___ftpack@sign,w
  3508  078B  1903               	btfsc	3,2
  3509  078C  0008               	return
  3510  078D  17F2               	bsf	i1___ftpack@arg+2,7
  3511  078E  0008               	return
  3512  078F                     __end_ofi1___ftpack:	
  3513                           
  3514                           	psect	text16
  3515  0FAE                     __ptext16:	
  3516 ;; *************** function ___lbtoft *****************
  3517 ;; Defined at:
  3518 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lbtoft.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  c               1    wreg     unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  c               1   11[COMMON] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  3   14[BANK0 ] float 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0, pclath, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3532 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;Total ram usage:        8 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    1
  3539 ;; This function calls:
  3540 ;;		i1___ftpack
  3541 ;; This function is called by:
  3542 ;;		_interruptHandler
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function ___lbtoft
  3548  0FAE                     ___lbtoft:	
  3549                           
  3550                           ;incstack = 0
  3551                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  3552                           ;___lbtoft@c stored from wreg
  3553  0FAE  00FB               	movwf	___lbtoft@c
  3554  0FAF  087B               	movf	___lbtoft@c,w
  3555  0FB0  0020               	movlb	0	; select bank0
  3556  0FB1  00B1               	movwf	??___lbtoft
  3557  0FB2  01B2               	clrf	??___lbtoft+1
  3558  0FB3  01B3               	clrf	??___lbtoft+2
  3559  0FB4  0831               	movf	??___lbtoft,w
  3560  0FB5  00F0               	movwf	?i1___ftpack
  3561  0FB6  0832               	movf	??___lbtoft+1,w
  3562  0FB7  00F1               	movwf	?i1___ftpack+1
  3563  0FB8  0833               	movf	??___lbtoft+2,w
  3564  0FB9  00F2               	movwf	?i1___ftpack+2
  3565  0FBA  308E               	movlw	142
  3566  0FBB  00B4               	movwf	??___lbtoft+3
  3567  0FBC  0834               	movf	??___lbtoft+3,w
  3568  0FBD  00F3               	movwf	?i1___ftpack+3
  3569  0FBE  01F4               	clrf	?i1___ftpack+4
  3570  0FBF  3187  272F         	fcall	i1___ftpack
  3571  0FC1  0870               	movf	?i1___ftpack,w
  3572  0FC2  0020               	movlb	0	; select bank0
  3573  0FC3  00AE               	movwf	?___lbtoft
  3574  0FC4  0871               	movf	?i1___ftpack+1,w
  3575  0FC5  00AF               	movwf	?___lbtoft+1
  3576  0FC6  0872               	movf	?i1___ftpack+2,w
  3577  0FC7  00B0               	movwf	?___lbtoft+2
  3578  0FC8  0008               	return
  3579  0FC9                     __end_of___lbtoft:	
  3580                           
  3581                           	psect	text17
  3582  0517                     __ptext17:	
  3583 ;; *************** function ___ftdiv *****************
  3584 ;; Defined at:
  3585 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftdiv.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  f2              3   21[BANK0 ] float 
  3588 ;;  f1              3   24[BANK0 ] float 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  f3              3   32[BANK0 ] float 
  3591 ;;  sign            1   36[BANK0 ] unsigned char 
  3592 ;;  exp             1   35[BANK0 ] unsigned char 
  3593 ;;  cntr            1   31[BANK0 ] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  3   21[BANK0 ] float 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3603 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3605 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;Total ram usage:       16 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    1
  3610 ;; This function calls:
  3611 ;;		i1___ftpack
  3612 ;; This function is called by:
  3613 ;;		_interruptHandler
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function ___ftdiv
  3619  0517                     ___ftdiv:	
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3623  0517  0020               	movlb	0	; select bank0
  3624  0518  0838               	movf	___ftdiv@f1,w
  3625  0519  00BB               	movwf	??___ftdiv
  3626  051A  0839               	movf	___ftdiv@f1+1,w
  3627  051B  00BC               	movwf	??___ftdiv+1
  3628  051C  083A               	movf	___ftdiv@f1+2,w
  3629  051D  00BD               	movwf	??___ftdiv+2
  3630  051E  1003               	clrc
  3631  051F  0D3C               	rlf	??___ftdiv+1,w
  3632  0520  0D3D               	rlf	??___ftdiv+2,w
  3633  0521  00BE               	movwf	??___ftdiv+3
  3634  0522  083E               	movf	??___ftdiv+3,w
  3635  0523  00C3               	movwf	___ftdiv@exp
  3636  0524  08C3               	movf	___ftdiv@exp,f
  3637  0525  1D03               	skipz
  3638  0526  2D2E               	goto	i1l2122
  3639  0527  3000               	movlw	0
  3640  0528  00B5               	movwf	?___ftdiv
  3641  0529  3000               	movlw	0
  3642  052A  00B6               	movwf	?___ftdiv+1
  3643  052B  3000               	movlw	0
  3644  052C  00B7               	movwf	?___ftdiv+2
  3645  052D  0008               	return
  3646  052E                     i1l2122:	
  3647  052E  0835               	movf	___ftdiv@f2,w
  3648  052F  00BB               	movwf	??___ftdiv
  3649  0530  0836               	movf	___ftdiv@f2+1,w
  3650  0531  00BC               	movwf	??___ftdiv+1
  3651  0532  0837               	movf	___ftdiv@f2+2,w
  3652  0533  00BD               	movwf	??___ftdiv+2
  3653  0534  1003               	clrc
  3654  0535  0D3C               	rlf	??___ftdiv+1,w
  3655  0536  0D3D               	rlf	??___ftdiv+2,w
  3656  0537  00BE               	movwf	??___ftdiv+3
  3657  0538  083E               	movf	??___ftdiv+3,w
  3658  0539  00C4               	movwf	___ftdiv@sign
  3659  053A  08C4               	movf	___ftdiv@sign,f
  3660  053B  1D03               	skipz
  3661  053C  2D44               	goto	i1l2128
  3662  053D  3000               	movlw	0
  3663  053E  00B5               	movwf	?___ftdiv
  3664  053F  3000               	movlw	0
  3665  0540  00B6               	movwf	?___ftdiv+1
  3666  0541  3000               	movlw	0
  3667  0542  00B7               	movwf	?___ftdiv+2
  3668  0543  0008               	return
  3669  0544                     i1l2128:	
  3670  0544  3000               	movlw	0
  3671  0545  00C0               	movwf	___ftdiv@f3
  3672  0546  3000               	movlw	0
  3673  0547  00C1               	movwf	___ftdiv@f3+1
  3674  0548  3000               	movlw	0
  3675  0549  00C2               	movwf	___ftdiv@f3+2
  3676  054A  3089               	movlw	137
  3677  054B  0744               	addwf	___ftdiv@sign,w
  3678  054C  00BB               	movwf	??___ftdiv
  3679  054D  083B               	movf	??___ftdiv,w
  3680  054E  02C3               	subwf	___ftdiv@exp,f
  3681  054F  0838               	movf	___ftdiv@f1,w
  3682  0550  00BB               	movwf	??___ftdiv
  3683  0551  0839               	movf	___ftdiv@f1+1,w
  3684  0552  00BC               	movwf	??___ftdiv+1
  3685  0553  083A               	movf	___ftdiv@f1+2,w
  3686  0554  00BD               	movwf	??___ftdiv+2
  3687  0555  3010               	movlw	16
  3688  0556                     u278_25:	
  3689  0556  36BD               	lsrf	??___ftdiv+2,f
  3690  0557  0CBC               	rrf	??___ftdiv+1,f
  3691  0558  0CBB               	rrf	??___ftdiv,f
  3692  0559  0B89               	decfsz	9,f
  3693  055A  2D56               	goto	u278_25
  3694  055B  083B               	movf	??___ftdiv,w
  3695  055C  00BE               	movwf	??___ftdiv+3
  3696  055D  083E               	movf	??___ftdiv+3,w
  3697  055E  00C4               	movwf	___ftdiv@sign
  3698  055F  0835               	movf	___ftdiv@f2,w
  3699  0560  00BB               	movwf	??___ftdiv
  3700  0561  0836               	movf	___ftdiv@f2+1,w
  3701  0562  00BC               	movwf	??___ftdiv+1
  3702  0563  0837               	movf	___ftdiv@f2+2,w
  3703  0564  00BD               	movwf	??___ftdiv+2
  3704  0565  3010               	movlw	16
  3705  0566                     u279_25:	
  3706  0566  36BD               	lsrf	??___ftdiv+2,f
  3707  0567  0CBC               	rrf	??___ftdiv+1,f
  3708  0568  0CBB               	rrf	??___ftdiv,f
  3709  0569  0B89               	decfsz	9,f
  3710  056A  2D66               	goto	u279_25
  3711  056B  083B               	movf	??___ftdiv,w
  3712  056C  00BE               	movwf	??___ftdiv+3
  3713  056D  083E               	movf	??___ftdiv+3,w
  3714  056E  06C4               	xorwf	___ftdiv@sign,f
  3715  056F  3080               	movlw	128
  3716  0570  00BB               	movwf	??___ftdiv
  3717  0571  083B               	movf	??___ftdiv,w
  3718  0572  05C4               	andwf	___ftdiv@sign,f
  3719  0573  17B9               	bsf	___ftdiv@f1+1,7
  3720  0574  30FF               	movlw	255
  3721  0575  05B8               	andwf	___ftdiv@f1,f
  3722  0576  30FF               	movlw	255
  3723  0577  05B9               	andwf	___ftdiv@f1+1,f
  3724  0578  3000               	movlw	0
  3725  0579  05BA               	andwf	___ftdiv@f1+2,f
  3726  057A  17B6               	bsf	___ftdiv@f2+1,7
  3727  057B  30FF               	movlw	255
  3728  057C  05B5               	andwf	___ftdiv@f2,f
  3729  057D  30FF               	movlw	255
  3730  057E  05B6               	andwf	___ftdiv@f2+1,f
  3731  057F  3000               	movlw	0
  3732  0580  05B7               	andwf	___ftdiv@f2+2,f
  3733  0581  3018               	movlw	24
  3734  0582  00BB               	movwf	??___ftdiv
  3735  0583  083B               	movf	??___ftdiv,w
  3736  0584  00BF               	movwf	___ftdiv@cntr
  3737  0585                     i1l2142:	
  3738  0585  3001               	movlw	1
  3739  0586                     u280_25:	
  3740  0586  35C0               	lslf	___ftdiv@f3,f
  3741  0587  0DC1               	rlf	___ftdiv@f3+1,f
  3742  0588  0DC2               	rlf	___ftdiv@f3+2,f
  3743  0589  0B89               	decfsz	9,f
  3744  058A  2D86               	goto	u280_25
  3745  058B  0837               	movf	___ftdiv@f2+2,w
  3746  058C  023A               	subwf	___ftdiv@f1+2,w
  3747  058D  1D03               	skipz
  3748  058E  2D95               	goto	u281_25
  3749  058F  0836               	movf	___ftdiv@f2+1,w
  3750  0590  0239               	subwf	___ftdiv@f1+1,w
  3751  0591  1D03               	skipz
  3752  0592  2D95               	goto	u281_25
  3753  0593  0835               	movf	___ftdiv@f2,w
  3754  0594  0238               	subwf	___ftdiv@f1,w
  3755  0595                     u281_25:	
  3756  0595  1C03               	skipc
  3757  0596  2D9E               	goto	i1l2150
  3758  0597  0835               	movf	___ftdiv@f2,w
  3759  0598  02B8               	subwf	___ftdiv@f1,f
  3760  0599  0836               	movf	___ftdiv@f2+1,w
  3761  059A  3BB9               	subwfb	___ftdiv@f1+1,f
  3762  059B  0837               	movf	___ftdiv@f2+2,w
  3763  059C  3BBA               	subwfb	___ftdiv@f1+2,f
  3764  059D  1440               	bsf	___ftdiv@f3,0
  3765  059E                     i1l2150:	
  3766  059E  3001               	movlw	1
  3767  059F                     u282_25:	
  3768  059F  35B8               	lslf	___ftdiv@f1,f
  3769  05A0  0DB9               	rlf	___ftdiv@f1+1,f
  3770  05A1  0DBA               	rlf	___ftdiv@f1+2,f
  3771  05A2  0B89               	decfsz	9,f
  3772  05A3  2D9F               	goto	u282_25
  3773  05A4  3001               	movlw	1
  3774  05A5  02BF               	subwf	___ftdiv@cntr,f
  3775  05A6  1D03               	btfss	3,2
  3776  05A7  2D85               	goto	i1l2142
  3777  05A8  0840               	movf	___ftdiv@f3,w
  3778  05A9  00F0               	movwf	?i1___ftpack
  3779  05AA  0841               	movf	___ftdiv@f3+1,w
  3780  05AB  00F1               	movwf	?i1___ftpack+1
  3781  05AC  0842               	movf	___ftdiv@f3+2,w
  3782  05AD  00F2               	movwf	?i1___ftpack+2
  3783  05AE  0843               	movf	___ftdiv@exp,w
  3784  05AF  00BB               	movwf	??___ftdiv
  3785  05B0  083B               	movf	??___ftdiv,w
  3786  05B1  00F3               	movwf	?i1___ftpack+3
  3787  05B2  0844               	movf	___ftdiv@sign,w
  3788  05B3  00BC               	movwf	??___ftdiv+1
  3789  05B4  083C               	movf	??___ftdiv+1,w
  3790  05B5  00F4               	movwf	?i1___ftpack+4
  3791  05B6  3187  272F         	fcall	i1___ftpack
  3792  05B8  0870               	movf	?i1___ftpack,w
  3793  05B9  0020               	movlb	0	; select bank0
  3794  05BA  00B5               	movwf	?___ftdiv
  3795  05BB  0871               	movf	?i1___ftpack+1,w
  3796  05BC  00B6               	movwf	?___ftdiv+1
  3797  05BD  0872               	movf	?i1___ftpack+2,w
  3798  05BE  00B7               	movwf	?___ftdiv+2
  3799  05BF  0008               	return
  3800  05C0                     __end_of___ftdiv:	
  3801                           
  3802                           	psect	text18
  3803  0F83                     __ptext18:	
  3804 ;; *************** function _printDigit *****************
  3805 ;; Defined at:
  3806 ;;		line 41 in file "main.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  digit           1    wreg     unsigned char 
  3809 ;;  selection       1    0[COMMON] unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  digit           1    2[COMMON] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;		None               void
  3814 ;; Registers used:
  3815 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3821 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;Total ram usage:        3 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_interruptHandler
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _printDigit
  3836  0F83                     _printDigit:	
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in _printDigit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3840                           ;printDigit@digit stored from wreg
  3841  0F83  00F2               	movwf	printDigit@digit
  3842                           
  3843                           ;main.c: 43: PORTB = digits[digit] ^ (!selection << 7);
  3844  0F84  0872               	movf	printDigit@digit,w
  3845  0F85  3E5F               	addlw	_digits& (0+255)
  3846  0F86  0086               	movwf	6
  3847  0F87  0187               	clrf	7
  3848  0F88  0870               	movf	printDigit@selection,w
  3849  0F89  3A00               	xorlw	0
  3850  0F8A  3000               	movlw	0
  3851  0F8B  1903               	skipnz
  3852  0F8C  3001               	movlw	1
  3853  0F8D  00F1               	movwf	??_printDigit
  3854  0F8E  3006               	movlw	6
  3855  0F8F                     u202_25:	
  3856  0F8F  35F1               	lslf	??_printDigit,f
  3857  0F90  3EFF               	addlw	-1
  3858  0F91  1D03               	skipz
  3859  0F92  2F8F               	goto	u202_25
  3860  0F93  3571               	lslf	??_printDigit,w
  3861  0F94  0601               	xorwf	1,w
  3862  0F95  0020               	movlb	0	; select bank0
  3863  0F96  008D               	movwf	13	;volatile
  3864  0F97  0008               	return
  3865  0F98                     __end_of_printDigit:	
  3866  007E                     btemp	set	126	;btemp
  3867  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     63      77
    BANK1            80     52      55
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ?___lbtoft	float  size(1) Largest target is 0

    ?___ftpack	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 3
		 -> main@integral(BANK1[3]), 

    ?___ftneg	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 3
		 -> main@error(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptHandler in COMMON

    _interruptHandler->___lbtoft
    i1___fttol->i1___ftneg
    i1___ftneg->i1___ftpack
    i1___ftmul->___lbtoft
    i1___ftadd->___lbtoft
    ___lbtoft->i1___ftneg
    ___ftdiv->___lbtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    _interruptHandler->i1___ftmul
    i1___ftmul->___ftdiv
    i1___ftadd->___lbtoft
    ___lbtoft->i1___fttol
    ___ftdiv->___lbtoft

Critical Paths under _main in BANK1

    _main->___ftadd
    ___ftmul->___ftpack
    ___ftadd->___ftmul

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    2336
                                             37 BANK1     15    15      0
                            _reverse
          _initializeAsyncConversion
                    _initializeTimer
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     252
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      45
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6     535
                                              8 BANK1     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     136
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    1049
                                             24 BANK1     13     7      6
                           ___ftpack
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _initializeTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initializeAsyncConversion                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reverse                                              4     4      0     157
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interruptHandler                                    10    10      0    7981
                                             53 BANK0     10    10      0
                         _printDigit
                            ___ftdiv
                           ___lbtoft
                          i1___ftadd
                          i1___ftmul
                          i1___ftneg
                          i1___fttol
 ---------------------------------------------------------------------------------
 (4) i1___fttol                                           14    10      4     823
                                              0 BANK0     14    10      4
                         i1___ftpack (ARG)
                          i1___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___ftneg                                            3     0      3     148
                                              8 COMMON     3     0      3
                         i1___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___ftmul                                           16    10      6    1737
                                             37 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___lbtoft (ARG)
                         i1___ftpack
                          i1___ftadd (ARG)
                          i1___ftneg (ARG)
                          i1___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___ftadd                                           13     7      6    3432
                                             21 BANK0     13     7      6
                           ___lbtoft (ARG)
                         i1___ftpack
                          i1___ftneg (ARG)
                          i1___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftpack                                           8     3      5     679
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             8     5      3     701
                                             11 COMMON     1     1      0
                                             14 BANK0      7     4      3
                         i1___ftpack
                          i1___ftneg (ARG)
                          i1___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6     959
                                             21 BANK0     16    10      6
                           ___lbtoft (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (4) _printDigit                                           3     2      1      44
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _reverse
   _initializeAsyncConversion
   _initializeTimer
   ___ftadd
     ___ftpack
     ___ftmul (ARG)
       ___ftpack
     ___ftneg (ARG)
   ___ftge
   ___ftmul
     ___ftpack
   ___ftneg
   ___fttol

 _interruptHandler (ROOT)
   _printDigit
   ___ftdiv
     ___lbtoft (ARG)
       i1___ftpack
       i1___ftneg (ARG)
         i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___ftpack (ARG)
         i1___ftneg (ARG)
           i1___ftpack (ARG)
     i1___ftpack (ARG)
   ___lbtoft
     i1___ftpack
     i1___ftneg (ARG)
       i1___ftpack (ARG)
     i1___fttol (ARG)
       i1___ftpack (ARG)
       i1___ftneg (ARG)
         i1___ftpack (ARG)
   i1___ftadd
     ___lbtoft (ARG)
       i1___ftpack
       i1___ftneg (ARG)
         i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___ftpack (ARG)
         i1___ftneg (ARG)
           i1___ftpack (ARG)
     i1___ftpack (ARG)
     i1___ftneg (ARG)
       i1___ftpack (ARG)
     i1___fttol (ARG)
       i1___ftpack (ARG)
       i1___ftneg (ARG)
         i1___ftpack (ARG)
   i1___ftmul
     ___ftdiv (ARG)
       ___lbtoft (ARG)
         i1___ftpack
         i1___ftneg (ARG)
           i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___ftpack (ARG)
           i1___ftneg (ARG)
             i1___ftpack (ARG)
       i1___ftpack (ARG)
     ___lbtoft (ARG)
       i1___ftpack
       i1___ftneg (ARG)
         i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___ftpack (ARG)
         i1___ftneg (ARG)
           i1___ftpack (ARG)
     i1___ftpack (ARG)
     i1___ftadd (ARG)
       ___lbtoft (ARG)
         i1___ftpack
         i1___ftneg (ARG)
           i1___ftpack (ARG)
         i1___fttol (ARG)
           i1___ftpack (ARG)
           i1___ftneg (ARG)
             i1___ftpack (ARG)
       i1___ftpack (ARG)
       i1___ftneg (ARG)
         i1___ftpack (ARG)
       i1___fttol (ARG)
         i1___ftpack (ARG)
         i1___ftneg (ARG)
           i1___ftpack (ARG)
     i1___ftneg (ARG)
       i1___ftpack (ARG)
     i1___fttol (ARG)
       i1___ftpack (ARG)
       i1___ftneg (ARG)
         i1___ftpack (ARG)
   i1___ftneg
     i1___ftpack (ARG)
   i1___fttol
     i1___ftpack (ARG)
     i1___ftneg (ARG)
       i1___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     34      37       7       68.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      90      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      98      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Sat Feb 03 14:12:23 2018

                        i1___ftpack 072F                         __CFG_CP$OFF 0000  
                      ___ftadd@exp1 00C4                        ___ftadd@exp2 00C3  
                      ___ftadd@sign 00C2                                 l322 0718  
                               l316 0701                                 l345 0174  
                      i1___ftadd@f1 0035                        i1___ftadd@f2 0038  
                               _GIE 005F                        __CFG_CPD$OFF 0000  
                               _PSA 04AB                        i1___ftneg@f1 0078  
                               wreg 0009                        __CFG_FOSC$HS 0000  
                      i1___ftmul@f1 0045                        i1___ftmul@f2 0048  
                      i1___fttol@f1 0020                        __CFG_LVP$OFF 0000  
                      ___ftdiv@cntr 003F                        ___ftdiv@sign 0044  
                              l2020 0433                                l2012 041F  
                              l2024 043B                                l2008 0417  
                              l2048 05D9                                l2082 063E  
                              l2074 0624                                l2066 0609  
                              l2076 062D                                l2068 0617  
                              l2078 0630                                l1900 00FD  
                              l1910 0113                                l1904 0104  
                              l1930 014A                                l1922 012D  
                              l1940 0166                                l1932 014F  
                              l1844 02DA                                l1870 06DE  
                              l1950 0198                                l1942 0170  
                              l1934 0153                                l1854 0375  
                              l1880 0706                                l1872 06E8  
                              l1960 01B3                                l1928 0140  
                              l1882 070E                                l1874 06ED  
                              l1866 06D7                                l1946 0186  
                              l1858 038E                                l1972 07BC  
                              l1990 03C6                                l1968 07A6  
                              l1996 03DC                                _ADIE 048E  
                              _ADIF 008E                                _ADGO 04E9  
                              u2005 0FE8                                u2015 0FF5  
                              u2115 0709                                u2145 071F  
                              u2075 06E3                                u2315 0154  
                              u2095 06FC                                u2255 012E  
                              u2345 0167                                u2515 043C  
                              u2285 0141                                u2525 0442  
                              u2445 03E8                                u2455 03F8  
                              u2625 0625                                u2475 0420  
                              u2485 0426                                u2565 05E0  
                              u3367 03A7                                u2595 060A  
                              _PEIE 005E                                u1975 0FCF  
                              u1985 0FD5                                u1995 0FE2  
                              i1l81 00CF                                _TMR0 0015  
                   printDigit@digit 0072                        __CFG_WRT$OFF 0000  
                              _main 02C1            __end_of_interruptHandler 00D3  
                      ___ftpack@arg 00A0                        ___ftpack@exp 00A3  
                              fsr0h 0005                                fsr1h 0007  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              start 00D3                       __CFG_IESO$OFF 0000  
                     __CFG_MCLRE$ON 0000                        ___ftmul@cntr 00B6  
                      ___ftmul@sign 00B7                       i1___ftmul@exp 004F  
                      ___fttol@exp1 00AD                        ___fttol@lval 00A9  
           i1___ftmul@f3_as_product 0050         ??_initializeAsyncConversion 00A0  
                             ?_main 0070                     __end_of___ftadd 01CB  
                     __CFG_WDTE$OFF 0000                     __end_of___ftdiv 05C0  
                   __end_of___ftneg 0F6E                     __end_of___ftmul 0463  
                   __end_of___fttol 0647                               i1l322 0778  
                             i1l316 0761                               i1l345 026A  
              _interruptHandler$226 0058                               _PORTA 000C  
                             _PORTB 000D                               _PORTD 000F  
                    i1___ftadd@exp1 0041                      i1___ftadd@exp2 0040  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISD 008F                      i1___ftadd@sign 003F  
                 ??_initializeTimer 00A0                        main@integral 00CE  
                    __CFG_FCMEN$OFF 0000              interruptHandler@result 005B  
                     ___ftpack@sign 00A4                      __CFG_BOREN$OFF 0000  
                   __end_of_reverse 1000                               status 0003  
                             wtemp0 007E                  __size_ofi1___ftadd 00F6  
                __size_ofi1___ftneg 0008                  __size_ofi1___ftmul 00B4  
                __size_ofi1___fttol 0087                      i1___ftpack@arg 0070  
                    i1___ftpack@exp 0073                     __initialization 0F98  
                      __end_of_main 03AF                         ?i1___ftpack 0070  
                    i1___ftmul@cntr 0053                      i1___ftmul@sign 0054  
                    i1___fttol@exp1 002D                      i1___fttol@lval 0029  
                            ??_main 00C5                       ___fttol@sign1 00A8  
                    __CFG_PLLEN$OFF 0000                              _ADRESH 009C  
                            _ANSELA 018C                              _ANSELB 018D  
                            _ANSELD 018F                    __end_of___ftpack 072F  
                  __end_of___lbtoft 0FC9                              i1l2104 0766  
                            i1l2200 0223                              i1l2122 052E  
                            i1l2106 076E                              i1l2210 0245  
                            i1l2220 0266                              i1l2212 0249  
                            i1l2150 059E                              i1l2142 0585  
                            i1l2206 0236                              i1l2310 04CB  
                            i1l2128 0544                              i1l2224 027C  
                            i1l2208 0240                              i1l2090 0737  
                            i1l2218 025C                              i1l2322 04E7  
                            i1l2314 04D3                              i1l2228 028E  
                            i1l2094 073E                              i1l2238 02A9  
                            i1l2182 01FA                              i1l2326 04EF  
                            i1l2350 0063                              i1l2096 0748  
                            i1l2248 0660                              i1l2098 074D  
                            i1l2178 01F3                              i1l2282 06C5  
                            i1l2274 06AB                              i1l2266 0690  
                            i1l2188 0209                              i1l2292 047A  
                            i1l2276 06B4                              i1l2268 069E  
                            i1l2356 0073                              i1l2278 06B7  
                            i1l2366 00B5                              i1l2368 00BC  
                            i1l2298 0490                              u202_25 0F8F  
                            u300_25 024A                              u303_25 025D  
                            u320_25 049C                              u312_25 0691  
                            u321_25 04AC                              u323_25 04D4  
                            u315_25 06AC                              u324_25 04DA  
                            u309_25 0667                              u271_25 0769  
                            u327_25 04F0                              u280_25 0586  
                            u328_25 04F6                              u281_25 0595  
                            u282_25 059F                              u274_25 077F  
                            u267_25 0743                              u269_25 075C  
                            u278_25 0556                              u294_25 0224  
                            u279_25 0566                              u297_25 0237  
         _initializeAsyncConversion 07CB                              _TMR0IE 005D  
                            _TMR0IF 005A                              _TMR0CS 04AD  
                    __CFG_PWRTE$OFF 0000                              ___ftge 078F  
                         ??___ftadd 00BE                           ??___ftdiv 003B  
                         ??___ftneg 00A3                           ??___ftmul 00AE  
                         ??___fttol 00A4                              _digits 005F  
                            _sensor 0069               ___ftmul@f3_as_product 00B3  
                 __end_ofi1___ftadd 02C1                   __end_ofi1___ftneg 0F65  
                 __end_ofi1___ftmul 0517                   __end_ofi1___fttol 06CE  
                         ??_reverse 00A0                 __size_ofi1___ftpack 0060  
           __end_of__initialization 0FAB                          ___ftadd@f1 00B8  
                        ___ftadd@f2 00BB                          ___ftge@ff1 00A0  
                        ___ftge@ff2 00A3                     i1___ftpack@sign 0074  
                        ___ftdiv@f1 0038                          ___ftdiv@f2 0035  
                        ___ftdiv@f3 0040                          ___ftneg@f1 00A0  
                        ___lbtoft@c 007B                          ___ftmul@f1 00A8  
                        ___ftmul@f2 00AB                          ___fttol@f1 00A0  
                    __pcstackCOMMON 0070                        __pidataBANK0 0F6E  
                    _OPTION_REGbits 0095                     i1___fttol@sign1 0028  
                        __pbssBANK0 0069                          __pbssBANK1 00D4  
                   __CFG_VCAPEN$OFF 0000                   ?_interruptHandler 0070  
                ??_interruptHandler 0055                          __pmaintext 02C1  
                           ?___ftge 00A0                     _initializeTimer 0F78  
                        __pintentry 0004                           ?___ftpack 00A0  
                         ?___lbtoft 002E          interruptHandler@firstDigit 005E  
__size_of_initializeAsyncConversion 002E                     __size_of___ftge 003C  
                      ??i1___ftpack 0075                             ___ftadd 00D5  
                           ___ftdiv 0517                             ___ftneg 0F65  
                           ___ftmul 03AF                             ___fttol 05C0  
                   __CFG_STVREN$OFF 0000                          ??___ftpack 00A5  
                        ??___lbtoft 0031                             __ptext1 05C0  
                           __ptext2 0F65                             __ptext3 03AF  
                           __ptext4 078F                             __ptext5 00D5  
                           __ptext6 06CE                             __ptext7 0F78  
                           __ptext8 07CB                             __ptext9 0FC9  
                           _reverse 0FC9                    _currentSelection 006C  
              end_of_initialization 0FAB                  __end_ofi1___ftpack 078F  
                           init_ram 07F9                             initloop 07FA  
           __end_of_initializeTimer 0F83   __end_of_initializeAsyncConversion 07F9  
                        _printDigit 0F83                           i1___ftadd 01CB  
                         i1___ftneg 0F5D                           i1___ftmul 0463  
                         i1___fttol 0647                         ___ftdiv@exp 0043  
                        main@output 00D1                         ___ftmul@exp 00B2  
                    __end_of___ftge 07CB                 start_initialization 0F98  
                        ?i1___ftadd 0035                          ?i1___ftneg 0078  
                        ?i1___ftmul 0045                          ?i1___fttol 0020  
                  ?_initializeTimer 0070                            ??___ftge 00A6  
                       __pdataBANK0 005F                         ?_printDigit 0070  
         __size_of_interruptHandler 00CF                   __size_of___ftpack 0061  
                 __size_of___lbtoft 001B                       __pcstackBANK0 0020  
                     __pcstackBANK1 00A0                            ?___ftadd 00B8  
                          ?___ftdiv 0035                            ?___ftneg 00A0  
                          ?___ftmul 00A8                            ?___fttol 00A0  
                          ?_reverse 0070                         ??i1___ftadd 003B  
                       ??i1___ftneg 007B                         ??i1___ftmul 004B  
                       ??i1___fttol 0024                 __size_of_printDigit 0015  
                        _ADCON0bits 009D                          _ADCON1bits 009E  
                         main@error 00CB                           main@uprev 00C8  
                  __size_of___ftadd 00F6                    __size_of___ftdiv 00A9  
                  __size_of___ftneg 0009                    __size_of___ftmul 00B4  
                  __size_of___fttol 0087                 printDigit@selection 0070  
                          ___ftpack 06CE                            ___lbtoft 0FAE  
        ?_initializeAsyncConversion 0070                    _interruptHandler 0004  
                          __ptext11 0647                            __ptext12 0F5D  
                          __ptext13 0463                            __ptext14 01CB  
                          __ptext15 072F                            __ptext16 0FAE  
                          __ptext17 0517                            __ptext18 0F83  
                  __size_of_reverse 0037                       __size_of_main 00EE  
       interruptHandler@secondDigit 005A                        ??_printDigit 0071  
                        _INTCONbits 000B                            intlevel1 0000  
                 __CFG_CLKOUTEN$OFF 0000                  __end_of_printDigit 0F98  
                     _potenciometar 00D4                            reverse@b 00A3  
          __size_of_initializeTimer 000B  
