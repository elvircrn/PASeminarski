

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Feb 02 13:59:45 2018

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.40
    15                           ; Generated 01/12/2016 GMT
    16                           ; 
    17                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1939 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  008F                     	;# 
    83  0090                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0110                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0113                     	;# 
   106  0114                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011D                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0199                     	;# 
   129  019A                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019C                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020D                     	;# 
   140  0210                     	;# 
   141  0211                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0214                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0217                     	;# 
   149  0291                     	;# 
   150  0291                     	;# 
   151  0292                     	;# 
   152  0293                     	;# 
   153  0294                     	;# 
   154  0295                     	;# 
   155  0295                     	;# 
   156  0296                     	;# 
   157  0298                     	;# 
   158  0298                     	;# 
   159  0299                     	;# 
   160  029A                     	;# 
   161  029B                     	;# 
   162  029C                     	;# 
   163  029C                     	;# 
   164  029D                     	;# 
   165  029E                     	;# 
   166  029F                     	;# 
   167  0311                     	;# 
   168  0311                     	;# 
   169  0312                     	;# 
   170  0313                     	;# 
   171  0314                     	;# 
   172  0315                     	;# 
   173  0315                     	;# 
   174  0316                     	;# 
   175  0318                     	;# 
   176  0318                     	;# 
   177  0319                     	;# 
   178  031A                     	;# 
   179  031C                     	;# 
   180  031C                     	;# 
   181  031D                     	;# 
   182  031E                     	;# 
   183  0394                     	;# 
   184  0395                     	;# 
   185  0396                     	;# 
   186  0415                     	;# 
   187  0416                     	;# 
   188  0417                     	;# 
   189  041C                     	;# 
   190  041D                     	;# 
   191  041E                     	;# 
   192  0791                     	;# 
   193  0792                     	;# 
   194  0793                     	;# 
   195  0794                     	;# 
   196  0795                     	;# 
   197  0798                     	;# 
   198  0799                     	;# 
   199  079A                     	;# 
   200  07A0                     	;# 
   201  07A1                     	;# 
   202  07A2                     	;# 
   203  07A3                     	;# 
   204  07A4                     	;# 
   205  07A5                     	;# 
   206  07A6                     	;# 
   207  07A7                     	;# 
   208  07A8                     	;# 
   209  07A9                     	;# 
   210  07AA                     	;# 
   211  07AB                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  000C                     _PORTA	set	12
   224  000D                     _PORTB	set	13
   225  000D                     _PORTBbits	set	13
   226  000F                     _PORTD	set	15
   227  001B                     _PR2	set	27
   228  001C                     _T2CON	set	28
   229  008E                     _ADIF	set	142
   230  005F                     _GIE	set	95
   231  005E                     _PEIE	set	94
   232  005D                     _TMR0IE	set	93
   233  005A                     _TMR0IF	set	90
   234  009D                     _ADCON0bits	set	157
   235  009E                     _ADCON1bits	set	158
   236  009C                     _ADRESH	set	156
   237  008C                     _TRISA	set	140
   238  008D                     _TRISB	set	141
   239  008F                     _TRISD	set	143
   240  04E9                     _ADGO	set	1257
   241  048E                     _ADIE	set	1166
   242  04AB                     _PSA	set	1195
   243  04AD                     _TMR0CS	set	1197
   244  018C                     _ANSELA	set	396
   245  018D                     _ANSELB	set	397
   246  018F                     _ANSELD	set	399
   247  0293                     _CCP1CON	set	659
   248  0291                     _CCPR1L	set	657
   249                           
   250                           ; #config settings
   251  0000                     
   252                           	psect	cinit
   253  0021                     start_initialization:	
   254  0021                     __initialization:	
   255                           
   256                           ; Clear objects allocated to COMMON
   257  0021  01F6               	clrf	__pbssCOMMON& (0+127)
   258  0022  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   259  0023  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   260  0024  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   261  0025                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0025                     __end_of__initialization:	
   265  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   266  0026  0020               	movlb	0
   267  0027  3180  288F         	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	bssCOMMON
   270  0076                     __pbssCOMMON:	
   271  0076                     _analog_selected:	
   272  0076                     	ds	2
   273  0078                     _d:	
   274  0078                     	ds	1
   275  0079                     _turnOn:	
   276  0079                     	ds	1
   277                           
   278                           	psect	cstackCOMMON
   279  0070                     __pcstackCOMMON:	
   280  0070                     ?_interruptSetup:	
   281  0070                     ?_reverse:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ??_reverse:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_interruptHandler:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_initialize:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 1 bytes @ 0x0
   298  0070                     	ds	3
   299  0073                     reverse@b:	
   300                           
   301                           ; 1 bytes @ 0x3
   302  0073                     	ds	1
   303  0074                     ??_interruptHandler:	
   304                           
   305                           ; 1 bytes @ 0x4
   306  0074                     	ds	1
   307  0075                     ??_interruptSetup:	
   308  0075                     ??_initialize:	
   309                           ; 1 bytes @ 0x5
   310                           
   311  0075                     ??_main:	
   312                           ; 1 bytes @ 0x5
   313                           
   314  0075                     main@id:	
   315                           ; 1 bytes @ 0x5
   316                           
   317                           
   318                           ; 1 bytes @ 0x5
   319  0075                     	ds	1
   320                           
   321                           	psect	maintext
   322  008F                     __pmaintext:	
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 165 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  id              1    5[COMMON] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B1F/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   346 ;;Total ram usage:        1 bytes
   347 ;; Hardware stack levels required when called:    3
   348 ;; This function calls:
   349 ;;		_initialize
   350 ;;		_interruptSetup
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _main
   358  008F                     _main:	
   359                           
   360                           ;main.c: 167: initialize();
   361                           
   362                           ;incstack = 0
   363                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   364  008F  3180  205F  3180   	fcall	_initialize
   365                           
   366                           ;main.c: 168: interruptSetup();
   367  0092  3180  2082  3180   	fcall	_interruptSetup
   368                           
   369                           ;main.c: 169: unsigned char id = 1;
   370  0095  01F5               	clrf	main@id
   371  0096  0AF5               	incf	main@id,f
   372  0097                     l96:	
   373                           ;main.c: 170: for (;;) {
   374                           
   375                           
   376                           ;main.c: 188: };
   377  0097  2897               	goto	l96
   378  0098                     __end_of_main:	
   379                           
   380                           	psect	text1
   381  0082                     __ptext1:	
   382 ;; *************** function _interruptSetup *****************
   383 ;; Defined at:
   384 ;;		line 23 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		None
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; Hardware stack levels required when called:    2
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _interruptSetup
   414  0082                     _interruptSetup:	
   415                           
   416                           ;main.c: 26: GIE = 1;
   417                           
   418                           ;incstack = 0
   419                           ; Regs used in _interruptSetup: []
   420  0082  178B               	bsf	11,7	;volatile
   421                           
   422                           ;main.c: 27: PEIE = 1;
   423  0083  170B               	bsf	11,6	;volatile
   424                           
   425                           ;main.c: 28: ADIE = 1;
   426  0084  0021               	movlb	1	; select bank1
   427  0085  1711               	bsf	17,6	;volatile
   428                           
   429                           ;main.c: 29: ADIF = 0;
   430  0086  0020               	movlb	0	; select bank0
   431  0087  1311               	bcf	17,6	;volatile
   432                           
   433                           ;main.c: 30: ADGO=1;
   434  0088  0021               	movlb	1	; select bank1
   435  0089  149D               	bsf	29,1	;volatile
   436                           
   437                           ;main.c: 31: TMR0IF=0;
   438  008A  110B               	bcf	11,2	;volatile
   439                           
   440                           ;main.c: 32: TMR0IE=1;
   441  008B  168B               	bsf	11,5	;volatile
   442                           
   443                           ;main.c: 33: TMR0CS = 0;
   444  008C  1295               	bcf	21,5	;volatile
   445                           
   446                           ;main.c: 34: PSA = 0;
   447  008D  1195               	bcf	21,3	;volatile
   448  008E  0008               	return
   449  008F                     __end_of_interruptSetup:	
   450                           
   451                           	psect	text2
   452  005F                     __ptext2:	
   453 ;; *************** function _initialize *****************
   454 ;; Defined at:
   455 ;;		line 81 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    2
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_main
   480 ;;		__main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _initialize
   486  005F                     _initialize:	
   487                           
   488                           ;main.c: 82: ANSELA = 0xff;
   489                           
   490                           ;incstack = 0
   491                           ; Regs used in _initialize: [wreg+status,2]
   492  005F  30FF               	movlw	255
   493  0060  0023               	movlb	3	; select bank3
   494  0061  008C               	movwf	12	;volatile
   495                           
   496                           ;main.c: 83: TRISA = 0xff;
   497  0062  30FF               	movlw	255
   498  0063  0021               	movlb	1	; select bank1
   499  0064  008C               	movwf	12	;volatile
   500                           
   501                           ;main.c: 84: TRISD = 0;
   502  0065  018F               	clrf	15	;volatile
   503                           
   504                           ;main.c: 85: PORTA = 0;
   505  0066  0020               	movlb	0	; select bank0
   506  0067  018C               	clrf	12	;volatile
   507                           
   508                           ;main.c: 86: TRISB = 0;
   509  0068  0021               	movlb	1	; select bank1
   510  0069  018D               	clrf	13	;volatile
   511                           
   512                           ;main.c: 87: ANSELB = 0;
   513  006A  0023               	movlb	3	; select bank3
   514  006B  018D               	clrf	13	;volatile
   515                           
   516                           ;main.c: 88: PORTB=0;
   517  006C  0020               	movlb	0	; select bank0
   518  006D  018D               	clrf	13	;volatile
   519                           
   520                           ;main.c: 89: PORTD = 0;
   521  006E  018F               	clrf	15	;volatile
   522                           
   523                           ;main.c: 90: TRISD = 0;
   524  006F  0021               	movlb	1	; select bank1
   525  0070  018F               	clrf	15	;volatile
   526                           
   527                           ;main.c: 91: ANSELD = 0;
   528  0071  0023               	movlb	3	; select bank3
   529  0072  018F               	clrf	15	;volatile
   530                           
   531                           ;main.c: 94: ADCON1bits.ADFM = 0;
   532  0073  0021               	movlb	1	; select bank1
   533  0074  139E               	bcf	30,7	;volatile
   534                           
   535                           ;main.c: 96: ADCON1bits.ADCS2 = 1;
   536  0075  171E               	bsf	30,6	;volatile
   537                           
   538                           ;main.c: 97: ADCON1bits.ADCS1 = 1;
   539  0076  169E               	bsf	30,5	;volatile
   540                           
   541                           ;main.c: 98: ADCON1bits.ADCS0 = 1;
   542  0077  161E               	bsf	30,4	;volatile
   543                           
   544                           ;main.c: 100: ADCON1bits.ADNREF = 0;
   545  0078  111E               	bcf	30,2	;volatile
   546                           
   547                           ;main.c: 101: ADCON1bits.ADPREF1 = 0;
   548  0079  109E               	bcf	30,1	;volatile
   549                           
   550                           ;main.c: 102: ADCON1bits.ADPREF0 = 0;
   551  007A  101E               	bcf	30,0	;volatile
   552                           
   553                           ;main.c: 104: ADCON0bits.ADON = 1;
   554  007B  141D               	bsf	29,0	;volatile
   555                           
   556                           ;main.c: 106: ADCON0bits.CHS4 = 0;
   557  007C  131D               	bcf	29,6	;volatile
   558                           
   559                           ;main.c: 107: ADCON0bits.CHS3 = 0;
   560  007D  129D               	bcf	29,5	;volatile
   561                           
   562                           ;main.c: 108: ADCON0bits.CHS2 = 0;
   563  007E  121D               	bcf	29,4	;volatile
   564                           
   565                           ;main.c: 109: ADCON0bits.CHS1 = 0;
   566  007F  119D               	bcf	29,3	;volatile
   567                           
   568                           ;main.c: 110: ADCON0bits.CHS0 = 0;
   569  0080  111D               	bcf	29,2	;volatile
   570  0081  0008               	return
   571  0082                     __end_of_initialize:	
   572                           
   573                           	psect	intentry
   574  0004                     __pintentry:	
   575 ;; *************** function _interruptHandler *****************
   576 ;; Defined at:
   577 ;;		line 47 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    1
   598 ;; This function calls:
   599 ;;		_reverse
   600 ;; This function is called by:
   601 ;;		Interrupt level 1
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605  0004                     _interruptHandler:	
   606                           
   607                           ;incstack = 0
   608  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   609                           
   610                           ; Regs used in _interruptHandler: [wreg+status,2+status,0+pclath+cstack]
   611  0005  3180               	pagesel	$
   612  0006  0020               	movlb	0	; select bank0
   613  0007  087F               	movf	127,w
   614  0008  00F4               	movwf	??_interruptHandler
   615                           
   616                           ;main.c: 68: if (ADIE && ADIF) {
   617  0009  0021               	movlb	1	; select bank1
   618  000A  1F11               	btfss	17,6	;volatile
   619  000B  281A               	goto	i1l70
   620  000C  0020               	movlb	0	; select bank0
   621  000D  1F11               	btfss	17,6	;volatile
   622  000E  281A               	goto	i1l70
   623                           
   624                           ;main.c: 70: PORTD = ~reverse(ADRESH);
   625  000F  0021               	movlb	1	; select bank1
   626  0010  081C               	movf	28,w	;volatile
   627  0011  3180  2029         	fcall	_reverse
   628  0013  3AFF               	xorlw	255
   629  0014  0020               	movlb	0	; select bank0
   630  0015  008F               	movwf	15	;volatile
   631                           
   632                           ;main.c: 75: ADGO = 1;
   633  0016  0021               	movlb	1	; select bank1
   634  0017  149D               	bsf	29,1	;volatile
   635                           
   636                           ;main.c: 76: ADIF = 0;
   637  0018  0020               	movlb	0	; select bank0
   638  0019  1311               	bcf	17,6	;volatile
   639  001A                     i1l70:	
   640  001A  0874               	movf	??_interruptHandler,w
   641  001B  0020               	movlb	0	; select bank0
   642  001C  00FF               	movwf	127
   643  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   644  001E  0009               	retfie
   645  001F                     __end_of_interruptHandler:	
   646                           
   647                           	psect	text4
   648  0029                     __ptext4:	
   649 ;; *************** function _reverse *****************
   650 ;; Defined at:
   651 ;;		line 39 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  b               1    wreg     unsigned char 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  b               1    3[COMMON] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      unsigned char 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   669 ;;Total ram usage:        4 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_interruptHandler
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _reverse
   680  0029                     _reverse:	
   681                           
   682                           ;incstack = 0
   683                           ; Regs used in _reverse: [wreg+status,2+status,0]
   684                           ;reverse@b stored from wreg
   685  0029  00F3               	movwf	reverse@b
   686                           
   687                           ;main.c: 40: b = (b & 0xF0) >> 4 | (b & 0x0F) << 4;
   688  002A  0873               	movf	reverse@b,w
   689  002B  390F               	andlw	15
   690  002C  00F0               	movwf	??_reverse
   691  002D  3004               	movlw	4
   692  002E                     u2_25:	
   693  002E  35F0               	lslf	??_reverse,f
   694  002F  0B89               	decfsz	9,f
   695  0030  282E               	goto	u2_25
   696  0031  0873               	movf	reverse@b,w
   697  0032  00F1               	movwf	??_reverse+1
   698  0033  3004               	movlw	4
   699  0034                     u3_25:	
   700  0034  36F1               	lsrf	??_reverse+1,f
   701  0035  0B89               	decfsz	9,f
   702  0036  2834               	goto	u3_25
   703  0037  0871               	movf	??_reverse+1,w
   704  0038  390F               	andlw	15
   705  0039  0470               	iorwf	??_reverse,w
   706  003A  00F2               	movwf	??_reverse+2
   707  003B  0872               	movf	??_reverse+2,w
   708  003C  00F3               	movwf	reverse@b
   709                           
   710                           ;main.c: 41: b = (b & 0xCC) >> 2 | (b & 0x33) << 2;
   711  003D  0873               	movf	reverse@b,w
   712  003E  3933               	andlw	51
   713  003F  00F0               	movwf	??_reverse
   714  0040  3002               	movlw	2
   715  0041                     u4_25:	
   716  0041  35F0               	lslf	??_reverse,f
   717  0042  0B89               	decfsz	9,f
   718  0043  2841               	goto	u4_25
   719  0044  0873               	movf	reverse@b,w
   720  0045  00F1               	movwf	??_reverse+1
   721  0046  3002               	movlw	2
   722  0047                     u5_25:	
   723  0047  36F1               	lsrf	??_reverse+1,f
   724  0048  0B89               	decfsz	9,f
   725  0049  2847               	goto	u5_25
   726  004A  0871               	movf	??_reverse+1,w
   727  004B  3933               	andlw	51
   728  004C  0470               	iorwf	??_reverse,w
   729  004D  00F2               	movwf	??_reverse+2
   730  004E  0872               	movf	??_reverse+2,w
   731  004F  00F3               	movwf	reverse@b
   732                           
   733                           ;main.c: 42: b = (b & 0xAA) >> 1 | (b & 0x55) << 1;
   734  0050  0873               	movf	reverse@b,w
   735  0051  3955               	andlw	85
   736  0052  00F0               	movwf	??_reverse
   737  0053  3001               	movlw	1
   738  0054                     u6_25:	
   739  0054  35F0               	lslf	??_reverse,f
   740  0055  0B89               	decfsz	9,f
   741  0056  2854               	goto	u6_25
   742  0057  3673               	lsrf	reverse@b,w
   743  0058  3955               	andlw	85
   744  0059  0470               	iorwf	??_reverse,w
   745  005A  00F1               	movwf	??_reverse+1
   746  005B  0871               	movf	??_reverse+1,w
   747  005C  00F3               	movwf	reverse@b
   748                           
   749                           ;main.c: 43: return b;
   750  005D  0873               	movf	reverse@b,w
   751  005E  0008               	return
   752  005F                     __end_of_reverse:	
   753  007E                     btemp	set	126	;btemp
   754  007E                     int$flags	set	126
   755  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptHandler in COMMON

    _interruptHandler->_reverse

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
                         _initialize
                     _interruptSetup
 ---------------------------------------------------------------------------------
 (1) _interruptSetup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interruptHandler                                     1     1      0     105
                                              4 COMMON     1     1      0
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              4     4      0     105
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
   _interruptSetup

 _interruptHandler (ROOT)
   _reverse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Feb 02 13:59:45 2018

                        _d 0078                __CFG_CP$OFF 0000                         l96 0097  
   __end_of_interruptSetup 008F                        _GIE 005F                        _PR2 001B  
             __CFG_CPD$OFF 0000                        _PSA 04AB                        wreg 0009  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       _ADIE 048E  
                     _ADIF 008E                       _ADGO 04E9                       _PEIE 005E  
                     i1l70 001A                       u2_25 002E                       u3_25 0034  
                     u4_25 0041                       u5_25 0047                       u6_25 0054  
             __CFG_WRT$OFF 0000                       _main 008F   __end_of_interruptHandler 001F  
                     btemp 007E                       start 001F              __CFG_IESO$OFF 0000  
            __CFG_MCLRE$ON 0000            ?_interruptSetup 0070                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _T2CON 001C                      _PORTA 000C  
                    _PORTB 000D                      _PORTD 000F                      _TRISA 008C  
                    _TRISB 008D                      _TRISD 008F             __CFG_FCMEN$OFF 0000  
           __CFG_BOREN$OFF 0000            __end_of_reverse 005F                      wtemp0 007E  
          __initialization 0021               __end_of_main 0098                     ??_main 0075  
           __CFG_PLLEN$OFF 0000                     _ADRESH 009C                     _CCPR1L 0291  
                   _ANSELA 018C                     _ANSELB 018D                     _ANSELD 018F  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TMR0CS 04AD  
           __CFG_PWRTE$OFF 0000                     main@id 0075                     _turnOn 0079  
                ??_reverse 0070    __end_of__initialization 0025             __pcstackCOMMON 0070  
          __CFG_VCAPEN$OFF 0000          ?_interruptHandler 0070         ??_interruptHandler 0074  
               __pmaintext 008F           ??_interruptSetup 0075                 __pintentry 0004  
                  _CCP1CON 0293            __CFG_STVREN$OFF 0000                 _initialize 005F  
                  __ptext1 0082                    __ptext2 005F                    __ptext4 0029  
                  _reverse 0029       end_of_initialization 0025            _analog_selected 0076  
                _PORTBbits 000D                ?_initialize 0070        start_initialization 0021  
__size_of_interruptHandler 001B                __pbssCOMMON 0076                  ___latbits 0003  
      __size_of_initialize 0023                   ?_reverse 0070                 _ADCON0bits 009D  
               _ADCON1bits 009E    __size_of_interruptSetup 000D               ??_initialize 0075  
         _interruptHandler 0004           __size_of_reverse 0036              __size_of_main 0009  
       __end_of_initialize 0082                   int$flags 007E                   intlevel1 0000  
        __CFG_CLKOUTEN$OFF 0000                   reverse@b 0073             _interruptSetup 0082  
